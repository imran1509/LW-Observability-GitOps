apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
    creationTimestamp: "2025-04-09T07:14:47Z"
    generateName: adservice-7cd4fc8797-
    labels:
      app: adservice
      pod-template-hash: 7cd4fc8797
    name: adservice-7cd4fc8797-kzvlq
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: adservice-7cd4fc8797
      uid: 6f4354fc-00e3-48ec-bede-3029b8258409
    resourceVersion: "1066315"
    uid: 02196249-ea28-446a-8873-ecffd2698b8d
  spec:
    containers:
    - env:
      - name: PORT
        value: "9555"
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice:v0.10.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        grpc:
          port: 9555
          service: ""
        initialDelaySeconds: 20
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 9555
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        grpc:
          port: 9555
          service: ""
        initialDelaySeconds: 20
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 300m
          memory: 300Mi
        requests:
          cpu: 200m
          memory: 180Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gp5wl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: imran-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: adservice
    serviceAccountName: adservice
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gp5wl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:50Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:15:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:15:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://984275b99ada9607d45e8520f95b66fc23063f8e69b4ab741ec7a66ac4fcf97c
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice:v0.10.2
      imageID: us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice@sha256:05061c55c41572d0dddbf480edf5ccb3339d4e95207a69accd4ed03528eefe13
      lastState: {}
      name: server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:14:49Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gp5wl
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    phase: Running
    podIP: 10.42.0.160
    podIPs:
    - ip: 10.42.0.160
    qosClass: Burstable
    startTime: "2025-04-09T07:14:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
    creationTimestamp: "2025-04-09T07:14:47Z"
    generateName: cartservice-ccd9b4798-
    labels:
      app: cartservice
      pod-template-hash: ccd9b4798
    name: cartservice-ccd9b4798-7pjw4
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cartservice-ccd9b4798
      uid: deac84d3-5d50-49ad-9865-4b515a54f576
    resourceVersion: "1066300"
    uid: 1222112b-78e8-4022-a8c1-6a83b6567da8
  spec:
    containers:
    - env:
      - name: REDIS_ADDR
        value: redis-cart:6379
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        grpc:
          port: 7070
          service: ""
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 7070
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        grpc:
          port: 7070
          service: ""
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 300m
          memory: 128Mi
        requests:
          cpu: 200m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9q7kn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: imran-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: cartservice
    serviceAccountName: cartservice
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-9q7kn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:49Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:15:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:15:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e0a4e1aac8a42d8f091cdc212133fb38020c0410c87e4cec36f57cf7a0547742
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.2
      imageID: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice@sha256:5cdc116d6d8993d3b7f97ce9138a3a99280b9dce21e7760ef474c1c61bd72cb9
      lastState: {}
      name: server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:14:49Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9q7kn
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    phase: Running
    podIP: 10.42.0.159
    podIPs:
    - ip: 10.42.0.159
    qosClass: Burstable
    startTime: "2025-04-09T07:14:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      instrumentation.opentelemetry.io/inject-go: go-instrumentation
      instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/checkoutservice
      kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
    creationTimestamp: "2025-04-09T07:11:40Z"
    generateName: checkoutservice-f55f7d5bd-
    labels:
      app: checkoutservice
      pod-template-hash: f55f7d5bd
    name: checkoutservice-f55f7d5bd-kh2n9
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: checkoutservice-f55f7d5bd
      uid: e204c5ae-e705-4ce3-ae09-5ee9ad9c6456
    resourceVersion: "1065358"
    uid: 552ea5a6-4fb3-4ea3-8301-c2be8076ae06
  spec:
    containers:
    - env:
      - name: PORT
        value: "5050"
      - name: PRODUCT_CATALOG_SERVICE_ADDR
        value: productcatalogservice:3550
      - name: SHIPPING_SERVICE_ADDR
        value: shippingservice:50051
      - name: PAYMENT_SERVICE_ADDR
        value: paymentservice:50051
      - name: EMAIL_SERVICE_ADDR
        value: emailservice:5000
      - name: CURRENCY_SERVICE_ADDR
        value: currencyservice:7000
      - name: CART_SERVICE_ADDR
        value: cartservice:7070
      - name: OTEL_SERVICE_NAME
        value: checkoutservice
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: service.namespace=default,service.name=checkoutservice
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://otel-collector-collector.observability.svc.cluster.local:4318
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: http/protobuf
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        grpc:
          port: 5050
          service: ""
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 5050
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        grpc:
          port: 5050
          service: ""
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4vxl7
        readOnly: true
    - env:
      - name: OTEL_NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: OTEL_POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: OTEL_GO_AUTO_TARGET_EXE
        value: /src/checkoutservice
      - name: OTEL_SERVICE_NAME
        value: checkoutservice
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://otel-collector-collector.observability.svc.cluster.local:4318
      - name: OTEL_RESOURCE_ATTRIBUTES_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: OTEL_RESOURCE_ATTRIBUTES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: OTEL_PROPAGATORS
        value: tracecontext,baggage,b3
      - name: OTEL_TRACES_SAMPLER
        value: parentbased_traceidratio
      - name: OTEL_TRACES_SAMPLER_ARG
        value: "1.0"
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: k8s.container.name=server,k8s.deployment.name=checkoutservice,k8s.namespace.name=default,k8s.node.name=$(OTEL_RESOURCE_ATTRIBUTES_NODE_NAME),k8s.pod.name=$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME),k8s.replicaset.name=checkoutservice-f55f7d5bd,service.instance.id=default.$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME).server,service.version=v0.10.2
      image: ghcr.io/open-telemetry/opentelemetry-go-instrumentation/autoinstrumentation-go:latest
      imagePullPolicy: Always
      name: opentelemetry-auto-instrumentation
      resources:
        limits:
          cpu: 500m
          memory: 64Mi
        requests:
          cpu: 50m
          memory: 64Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /sys/kernel/debug
        name: kernel-debug
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4vxl7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: imran-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: checkoutservice
    serviceAccountName: checkoutservice
    shareProcessNamespace: true
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-4vxl7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
    - hostPath:
        path: /sys/kernel/debug
        type: ""
      name: kernel-debug
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cb0d06ec365ee55e2e9e7141a0291088151d1561c85375a09750c6e85423cd3b
      image: ghcr.io/open-telemetry/opentelemetry-go-instrumentation/autoinstrumentation-go:latest
      imageID: ghcr.io/open-telemetry/opentelemetry-go-instrumentation/autoinstrumentation-go@sha256:7df5d9e9040c935b11ff3bbed59b4b67139cd349b97abc188e003576fc05a4c0
      lastState: {}
      name: opentelemetry-auto-instrumentation
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:11:42Z"
      volumeMounts:
      - mountPath: /sys/kernel/debug
        name: kernel-debug
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4vxl7
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://b4255882aa09255065c4a87caff40ffbd0109941cb6f2610903b11a6f76c664f
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.2
      imageID: us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice@sha256:b30e80cea60bd84dc189c030bb383b80965a69dcd84e6fac1052e3eb25163137
      lastState: {}
      name: server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:11:42Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4vxl7
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    phase: Running
    podIP: 10.42.0.138
    podIPs:
    - ip: 10.42.0.138
    qosClass: Burstable
    startTime: "2025-04-09T07:11:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      instrumentation.opentelemetry.io/inject-java: java-instrumentation
      kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
    creationTimestamp: "2025-04-09T07:14:48Z"
    generateName: currencyservice-7fb54cdd8f-
    labels:
      app: currencyservice
      pod-template-hash: 7fb54cdd8f
    name: currencyservice-7fb54cdd8f-j8dg9
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: currencyservice-7fb54cdd8f
      uid: 4d3dd37e-f4af-4a23-8c97-e80cf2dc5c42
    resourceVersion: "1149807"
    uid: 136c4282-6ea6-4a50-bf42-0a00abd1d578
  spec:
    containers:
    - env:
      - name: OTEL_NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: OTEL_POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: PORT
        value: "7000"
      - name: DISABLE_PROFILER
        value: "1"
      - name: OTEL_SERVICE_NAME
        value: productcatalogservice
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://otel-collector-collector.observability.svc.cluster.local:4318
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: http/protobuf
      - name: JAVA_TOOL_OPTIONS
        value: ' -javaagent:/otel-auto-instrumentation-java/javaagent.jar'
      - name: OTEL_RESOURCE_ATTRIBUTES_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: OTEL_RESOURCE_ATTRIBUTES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: OTEL_PROPAGATORS
        value: tracecontext,baggage,b3
      - name: OTEL_TRACES_SAMPLER
        value: parentbased_traceidratio
      - name: OTEL_TRACES_SAMPLER_ARG
        value: "1.0"
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: service.namespace=default,service.name=productcatalogservice,k8s.container.name=server,k8s.deployment.name=currencyservice,k8s.namespace.name=default,k8s.node.name=$(OTEL_RESOURCE_ATTRIBUTES_NODE_NAME),k8s.pod.name=$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME),k8s.replicaset.name=currencyservice-7fb54cdd8f,service.instance.id=default.$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME).server,service.version=v0.10.2
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        grpc:
          port: 7000
          service: ""
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 7000
        name: grpc
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        grpc:
          port: 7000
          service: ""
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n9j8m
        readOnly: true
      - mountPath: /otel-auto-instrumentation-java
        name: opentelemetry-auto-instrumentation-java
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - cp
      - /javaagent.jar
      - /otel-auto-instrumentation-java/javaagent.jar
      image: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-java:latest
      imagePullPolicy: Always
      name: opentelemetry-auto-instrumentation-java
      resources:
        limits:
          cpu: 500m
          memory: 64Mi
        requests:
          cpu: 50m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /otel-auto-instrumentation-java
        name: opentelemetry-auto-instrumentation-java
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n9j8m
        readOnly: true
    nodeName: imran-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: currencyservice
    serviceAccountName: currencyservice
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-n9j8m
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
    - emptyDir:
        sizeLimit: 200Mi
      name: opentelemetry-auto-instrumentation-java
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:51Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T06:28:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T06:28:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7230c3f244267c86f5c1dbb82cd409fb8e04cbe46f35df76085b483ff9137ddd
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.2
      imageID: us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice@sha256:c68f124a3c56fb8c51247522afb4c2c7e6a009fc679f54e9e4cf8773bd01fb23
      lastState:
        terminated:
          containerID: containerd://7d3cb83822a436cae0f81a269f5ff61cc7210e32eef4b195e8e3991ac6bf5e8d
          exitCode: 137
          finishedAt: "2025-04-11T06:28:33Z"
          reason: OOMKilled
          startedAt: "2025-04-11T01:37:59Z"
      name: server
      ready: true
      restartCount: 10
      started: true
      state:
        running:
          startedAt: "2025-04-11T06:28:34Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n9j8m
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /otel-auto-instrumentation-java
        name: opentelemetry-auto-instrumentation-java
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    initContainerStatuses:
    - containerID: containerd://7fc3fea46821da90419dbadef7946a002d54d8e5715146e69fdc714bbfcb42a1
      image: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-java:latest
      imageID: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-java@sha256:0df3475d6c0f2f7664c58bb145af2f898d3e38566c24c1abde420b01a7f608ad
      lastState: {}
      name: opentelemetry-auto-instrumentation-java
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://7fc3fea46821da90419dbadef7946a002d54d8e5715146e69fdc714bbfcb42a1
          exitCode: 0
          finishedAt: "2025-04-09T07:14:50Z"
          reason: Completed
          startedAt: "2025-04-09T07:14:50Z"
      volumeMounts:
      - mountPath: /otel-auto-instrumentation-java
        name: opentelemetry-auto-instrumentation-java
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n9j8m
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.42.0.161
    podIPs:
    - ip: 10.42.0.161
    qosClass: Burstable
    startTime: "2025-04-09T07:14:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      instrumentation.opentelemetry.io/inject-python: python-instrumentation
      kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
    creationTimestamp: "2025-04-09T07:14:48Z"
    generateName: emailservice-d55bc9b77-
    labels:
      app: emailservice
      pod-template-hash: d55bc9b77
    name: emailservice-d55bc9b77-bz8xf
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: emailservice-d55bc9b77
      uid: aec9fb18-43f0-481e-ae6d-7cc09d8c7517
    resourceVersion: "1066231"
    uid: 8d14ad88-51bf-4c0d-bae3-de75fa09f19e
  spec:
    containers:
    - env:
      - name: OTEL_NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: OTEL_POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: PORT
        value: "8080"
      - name: DISABLE_PROFILER
        value: "1"
      - name: OTEL_SERVICE_NAME
        value: emailservice
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://otel-collector-collector.observability.svc.cluster.local:4318
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: http/protobuf
      - name: PYTHONPATH
        value: /otel-auto-instrumentation-python/opentelemetry/instrumentation/auto_instrumentation:/otel-auto-instrumentation-python
      - name: OTEL_TRACES_EXPORTER
        value: otlp
      - name: OTEL_METRICS_EXPORTER
        value: otlp
      - name: OTEL_LOGS_EXPORTER
        value: otlp
      - name: OTEL_RESOURCE_ATTRIBUTES_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: OTEL_RESOURCE_ATTRIBUTES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: OTEL_PROPAGATORS
        value: tracecontext,baggage,b3
      - name: OTEL_TRACES_SAMPLER
        value: parentbased_traceidratio
      - name: OTEL_TRACES_SAMPLER_ARG
        value: "1.0"
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: service.namespace=default,service.name=emailservice,k8s.container.name=server,k8s.deployment.name=emailservice,k8s.namespace.name=default,k8s.node.name=$(OTEL_RESOURCE_ATTRIBUTES_NODE_NAME),k8s.pod.name=$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME),k8s.replicaset.name=emailservice-d55bc9b77,service.instance.id=default.$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME).server,service.version=v0.10.2
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        grpc:
          port: 8080
          service: ""
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        grpc:
          port: 8080
          service: ""
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c5csl
        readOnly: true
      - mountPath: /otel-auto-instrumentation-python
        name: opentelemetry-auto-instrumentation-python
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - cp
      - -r
      - /autoinstrumentation/.
      - /otel-auto-instrumentation-python
      image: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-python:latest
      imagePullPolicy: Always
      name: opentelemetry-auto-instrumentation-python
      resources:
        limits:
          cpu: 500m
          memory: 64Mi
        requests:
          cpu: 50m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /otel-auto-instrumentation-python
        name: opentelemetry-auto-instrumentation-python
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c5csl
        readOnly: true
    nodeName: imran-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: emailservice
    serviceAccountName: emailservice
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-c5csl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
    - emptyDir:
        sizeLimit: 200Mi
      name: opentelemetry-auto-instrumentation-python
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:51Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4abe3dfbc81bf30424bd860210dc55debfc9fc7b9a67ecb7c06006f91730dcb1
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.2
      imageID: us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice@sha256:8016e8d2aeec64dff53904f84bca7865e105b96afe8427b77dce8b26f66989b5
      lastState: {}
      name: server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:14:51Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c5csl
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /otel-auto-instrumentation-python
        name: opentelemetry-auto-instrumentation-python
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    initContainerStatuses:
    - containerID: containerd://a3f62d4866cd5034cf2b8013a795d9ea9a3123ccfd610e0242851e33ac0997b8
      image: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-python:latest
      imageID: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-python@sha256:d0e9803e31cb66f49cecbe9627c237d37b1680350fc2292c49c732b34fda04f0
      lastState: {}
      name: opentelemetry-auto-instrumentation-python
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a3f62d4866cd5034cf2b8013a795d9ea9a3123ccfd610e0242851e33ac0997b8
          exitCode: 0
          finishedAt: "2025-04-09T07:14:51Z"
          reason: Completed
          startedAt: "2025-04-09T07:14:50Z"
      volumeMounts:
      - mountPath: /otel-auto-instrumentation-python
        name: opentelemetry-auto-instrumentation-python
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c5csl
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.42.0.162
    podIPs:
    - ip: 10.42.0.162
    qosClass: Burstable
    startTime: "2025-04-09T07:14:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      instrumentation.opentelemetry.io/inject-go: go-instrumentation
      instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/server
      kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
      sidecar.istio.io/rewriteAppHTTPProbers: "true"
    creationTimestamp: "2025-04-09T07:11:41Z"
    generateName: frontend-5bb785c5f6-
    labels:
      app: frontend
      pod-template-hash: 5bb785c5f6
    name: frontend-5bb785c5f6-68hxp
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: frontend-5bb785c5f6
      uid: d3a6acc0-57d3-4459-a4cf-a727850a2a98
    resourceVersion: "1068454"
    uid: 8c69b751-8808-4f5c-8dd7-c22786347ef8
  spec:
    containers:
    - env:
      - name: PORT
        value: "8080"
      - name: PRODUCT_CATALOG_SERVICE_ADDR
        value: productcatalogservice:3550
      - name: CURRENCY_SERVICE_ADDR
        value: currencyservice:7000
      - name: CART_SERVICE_ADDR
        value: cartservice:7070
      - name: RECOMMENDATION_SERVICE_ADDR
        value: recommendationservice:8080
      - name: SHIPPING_SERVICE_ADDR
        value: shippingservice:50051
      - name: CHECKOUT_SERVICE_ADDR
        value: checkoutservice:5050
      - name: AD_SERVICE_ADDR
        value: adservice:9555
      - name: SHOPPING_ASSISTANT_SERVICE_ADDR
        value: shoppingassistantservice:80
      - name: OTEL_SERVICE_NAME
        value: frontend
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: service.namespace=default,service.name=frontend
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://otel-collector-collector.observability.svc.cluster.local:4318
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: http/protobuf
      - name: ENABLE_PROFILER
        value: "0"
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          httpHeaders:
          - name: Cookie
            value: shop_session-id=x-liveness-probe
          path: /_healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          httpHeaders:
          - name: Cookie
            value: shop_session-id=x-readiness-probe
          path: /_healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kc6qv
        readOnly: true
    - env:
      - name: OTEL_NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: OTEL_POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: OTEL_GO_AUTO_TARGET_EXE
        value: /src/server
      - name: OTEL_SERVICE_NAME
        value: frontend
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://otel-collector-collector.observability.svc.cluster.local:4318
      - name: OTEL_RESOURCE_ATTRIBUTES_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: OTEL_RESOURCE_ATTRIBUTES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: OTEL_PROPAGATORS
        value: tracecontext,baggage,b3
      - name: OTEL_TRACES_SAMPLER
        value: parentbased_traceidratio
      - name: OTEL_TRACES_SAMPLER_ARG
        value: "1.0"
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: k8s.container.name=server,k8s.deployment.name=frontend,k8s.namespace.name=default,k8s.node.name=$(OTEL_RESOURCE_ATTRIBUTES_NODE_NAME),k8s.pod.name=$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME),k8s.replicaset.name=frontend-5bb785c5f6,service.instance.id=default.$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME).server,service.version=v0.10.2
      image: ghcr.io/open-telemetry/opentelemetry-go-instrumentation/autoinstrumentation-go:latest
      imagePullPolicy: Always
      name: opentelemetry-auto-instrumentation
      resources:
        limits:
          cpu: 500m
          memory: 64Mi
        requests:
          cpu: 50m
          memory: 64Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /sys/kernel/debug
        name: kernel-debug
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kc6qv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: imran-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: frontend
    serviceAccountName: frontend
    shareProcessNamespace: true
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-kc6qv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
    - hostPath:
        path: /sys/kernel/debug
        type: ""
      name: kernel-debug
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T08:13:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T08:13:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ad46559ac0a65c668d2f2aa2b3f1620182ee9c2aefb36366e675fb729e7d8c3a
      image: ghcr.io/open-telemetry/opentelemetry-go-instrumentation/autoinstrumentation-go:latest
      imageID: ghcr.io/open-telemetry/opentelemetry-go-instrumentation/autoinstrumentation-go@sha256:7df5d9e9040c935b11ff3bbed59b4b67139cd349b97abc188e003576fc05a4c0
      lastState: {}
      name: opentelemetry-auto-instrumentation
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:11:44Z"
      volumeMounts:
      - mountPath: /sys/kernel/debug
        name: kernel-debug
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kc6qv
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://7f5964fde8225d7c423df6f9c66ef21186b2deddba5374220cdaf6e5a9b28b75
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2
      imageID: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend@sha256:6e88139a079eac423007cdc0499d91eafe4f669d7f096ef0485204d409e144c1
      lastState:
        terminated:
          containerID: containerd://6d3f5ed908b303c06a0b5833b6dc6207ed11142afd2f0bec5d2636f486b658de
          exitCode: 2
          finishedAt: "2025-04-09T08:13:05Z"
          reason: Error
          startedAt: "2025-04-09T07:11:43Z"
      name: server
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-04-09T08:13:06Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kc6qv
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    phase: Running
    podIP: 10.42.0.144
    podIPs:
    - ip: 10.42.0.144
    qosClass: Burstable
    startTime: "2025-04-09T07:11:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
      checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
      checksum/secret: 37823cef0be38922629597c43ea978460ec1c6439efc3654cb745e5e5fa92c80
      kubectl.kubernetes.io/default-container: grafana
      kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
    creationTimestamp: "2025-04-09T07:11:41Z"
    generateName: grafana-757b79ffd9-
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 11.5.2
      helm.sh/chart: grafana-8.10.4
      pod-template-hash: 757b79ffd9
    name: grafana-757b79ffd9-9lp2c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: grafana-757b79ffd9
      uid: 88782496-9722-41b2-8e27-aac8f59bcff7
    resourceVersion: "1065474"
    uid: c0d327f3-6f6a-43ae-814b-4c7022d1eddd
  spec:
    automountServiceAccountToken: true
    containers:
    - env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: GF_SECURITY_ADMIN_USER
        valueFrom:
          secretKeyRef:
            key: admin-user
            name: grafana
      - name: GF_SECURITY_ADMIN_PASSWORD
        valueFrom:
          secretKeyRef:
            key: admin-password
            name: grafana
      - name: GF_PATHS_DATA
        value: /var/lib/grafana/
      - name: GF_PATHS_LOGS
        value: /var/log/grafana
      - name: GF_PATHS_PLUGINS
        value: /var/lib/grafana/plugins
      - name: GF_PATHS_PROVISIONING
        value: /etc/grafana/provisioning
      image: docker.io/grafana/grafana:11.5.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 10
        httpGet:
          path: /api/health
          port: 3000
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: grafana
      ports:
      - containerPort: 3000
        name: grafana
        protocol: TCP
      - containerPort: 9094
        name: gossip-tcp
        protocol: TCP
      - containerPort: 9094
        name: gossip-udp
        protocol: UDP
      - containerPort: 6060
        name: profiling
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /api/health
          port: 3000
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/grafana/grafana.ini
        name: config
        subPath: grafana.ini
      - mountPath: /var/lib/grafana
        name: storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qc2qs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: imran-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 472
      runAsGroup: 472
      runAsNonRoot: true
      runAsUser: 472
    serviceAccount: grafana
    serviceAccountName: grafana
    shareProcessNamespace: false
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: grafana
      name: config
    - emptyDir: {}
      name: storage
    - name: kube-api-access-qc2qs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ba5ff5ac1a99263359aaf1bf101877382306ce30978157483a3e7ae42ac62107
      image: docker.io/grafana/grafana:11.5.2
      imageID: docker.io/grafana/grafana@sha256:8b37a2f028f164ce7b9889e1765b9d6ee23fec80f871d156fbf436d6198d32b7
      lastState: {}
      name: grafana
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:11:43Z"
      volumeMounts:
      - mountPath: /etc/grafana/grafana.ini
        name: config
      - mountPath: /var/lib/grafana
        name: storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qc2qs
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    phase: Running
    podIP: 10.42.0.147
    podIPs:
    - ip: 10.42.0.147
    qosClass: BestEffort
    startTime: "2025-04-09T07:11:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
      sidecar.istio.io/rewriteAppHTTPProbers: "true"
    creationTimestamp: "2025-04-09T07:14:49Z"
    generateName: loadgenerator-79477896b4-
    labels:
      app: loadgenerator
      pod-template-hash: 79477896b4
    name: loadgenerator-79477896b4-9kp2c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: loadgenerator-79477896b4
      uid: 6d9903dc-ccc6-4054-85fa-a86e26cecfd6
    resourceVersion: "1066199"
    uid: 04d4ba18-ac34-4554-b839-d86d2bd6d01e
  spec:
    containers:
    - env:
      - name: FRONTEND_ADDR
        value: frontend:80
      - name: USERS
        value: "10"
      - name: RATE
        value: "1"
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/loadgenerator:v0.10.2
      imagePullPolicy: IfNotPresent
      name: main
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 300m
          memory: 256Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rh2fg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - /bin/sh
      - -exc
      - |
        MAX_RETRIES=12
        RETRY_INTERVAL=10
        for i in $(seq 1 $MAX_RETRIES); do
          echo "Attempt $i: Pinging frontend: ${FRONTEND_ADDR}..."
          STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
          if [ $STATUSCODE -eq 200 ]; then
              echo "Frontend is reachable."
              exit 0
          fi
          echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
          sleep $RETRY_INTERVAL
        done
        echo "Failed to reach frontend after $MAX_RETRIES attempts."
        exit 1
      env:
      - name: FRONTEND_ADDR
        value: frontend:80
      image: busybox:latest
      imagePullPolicy: Always
      name: frontend-check
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rh2fg
        readOnly: true
    nodeName: imran-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: loadgenerator
    serviceAccountName: loadgenerator
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-rh2fg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:51Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://880417ba2add934abdba4678c1a3943a4b90453b91b579d6237034aa711594c0
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/loadgenerator:v0.10.2
      imageID: us-central1-docker.pkg.dev/google-samples/microservices-demo/loadgenerator@sha256:3ae59c0b7a58fed61d6a5466b94ec2576462197df1d2a96a6ea80d5ba03da80c
      lastState: {}
      name: main
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:14:51Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rh2fg
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    initContainerStatuses:
    - containerID: containerd://add2647692c1eaa5448de392e3f4da9e2df33b5dff8d34936db372593450c7cf
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:37f7b378a29ceb4c551b1b5582e27747b855bbfaa73fa11914fe0df028dc581f
      lastState: {}
      name: frontend-check
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://add2647692c1eaa5448de392e3f4da9e2df33b5dff8d34936db372593450c7cf
          exitCode: 0
          finishedAt: "2025-04-09T07:14:51Z"
          reason: Completed
          startedAt: "2025-04-09T07:14:51Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rh2fg
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.42.0.163
    podIPs:
    - ip: 10.42.0.163
    qosClass: Burstable
    startTime: "2025-04-09T07:14:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
    creationTimestamp: "2025-04-09T07:11:42Z"
    generateName: my-nginx-78b8c98787-
    labels:
      app.kubernetes.io/instance: my-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nginx
      app.kubernetes.io/version: 1.27.4
      helm.sh/chart: nginx-19.0.2
      pod-template-hash: 78b8c98787
    name: my-nginx-78b8c98787-dzfz5
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: my-nginx-78b8c98787
      uid: dfe98b2a-0c84-4cf0-8228-5531328bbe5c
    resourceVersion: "1065484"
    uid: cd5a71ca-516e-4cb2-829c-68b1e3c37f5a
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: my-nginx
                app.kubernetes.io/name: nginx
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: false
    containers:
    - env:
      - name: BITNAMI_DEBUG
        value: "false"
      - name: NGINX_HTTP_PORT_NUMBER
        value: "8080"
      - name: NGINX_HTTPS_PORT_NUMBER
        value: "8443"
      image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: http
        timeoutSeconds: 5
      name: nginx
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      - containerPort: 8443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: http
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: 150m
          ephemeral-storage: 2Gi
          memory: 192Mi
        requests:
          cpu: 100m
          ephemeral-storage: 50Mi
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: empty-dir
        subPath: tmp-dir
      - mountPath: /opt/bitnami/nginx/conf
        name: empty-dir
        subPath: app-conf-dir
      - mountPath: /opt/bitnami/nginx/logs
        name: empty-dir
        subPath: app-logs-dir
      - mountPath: /opt/bitnami/nginx/tmp
        name: empty-dir
        subPath: app-tmp-dir
      - mountPath: /certs
        name: certificate
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - -ec
      - |
        #!/bin/bash
        . /opt/bitnami/scripts/libfs.sh
        # We copy the logs folder because it has symlinks to stdout and stderr
        if ! is_dir_empty /opt/bitnami/nginx/logs; then
          cp -r /opt/bitnami/nginx/logs /emptydir/app-logs-dir
        fi
      command:
      - /bin/bash
      image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
      imagePullPolicy: IfNotPresent
      name: preserve-logs-symlinks
      resources:
        limits:
          cpu: 150m
          ephemeral-storage: 2Gi
          memory: 192Mi
        requests:
          cpu: 100m
          ephemeral-storage: 50Mi
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: empty-dir
    nodeName: imran-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: Always
    serviceAccount: my-nginx
    serviceAccountName: my-nginx
    shareProcessNamespace: false
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: empty-dir
    - name: certificate
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: server.crt
        - key: tls.key
          path: server.key
        secretName: my-nginx-tls
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://589ae0e70dbbe6ee87dde6b64a6d979f5e3c9a1e6dbad75f768926ff799f1a91
      image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
      imageID: docker.io/bitnami/nginx@sha256:8c59627da1cae413ad250f4896b88242fab306af8b488e7905cf4d371b49bc3c
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:11:44Z"
      volumeMounts:
      - mountPath: /tmp
        name: empty-dir
      - mountPath: /opt/bitnami/nginx/conf
        name: empty-dir
      - mountPath: /opt/bitnami/nginx/logs
        name: empty-dir
      - mountPath: /opt/bitnami/nginx/tmp
        name: empty-dir
      - mountPath: /certs
        name: certificate
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    initContainerStatuses:
    - containerID: containerd://34926de39b0209b401c3798217f2876e7229e32661578047afc01ea1d2909215
      image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
      imageID: docker.io/bitnami/nginx@sha256:8c59627da1cae413ad250f4896b88242fab306af8b488e7905cf4d371b49bc3c
      lastState: {}
      name: preserve-logs-symlinks
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://34926de39b0209b401c3798217f2876e7229e32661578047afc01ea1d2909215
          exitCode: 0
          finishedAt: "2025-04-09T07:11:43Z"
          reason: Completed
          startedAt: "2025-04-09T07:11:43Z"
      volumeMounts:
      - mountPath: /emptydir
        name: empty-dir
    phase: Running
    podIP: 10.42.0.146
    podIPs:
    - ip: 10.42.0.146
    qosClass: Burstable
    startTime: "2025-04-09T07:11:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
    creationTimestamp: "2025-04-09T07:11:55Z"
    generateName: my-nginx-78b8c98787-
    labels:
      app.kubernetes.io/instance: my-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nginx
      app.kubernetes.io/version: 1.27.4
      helm.sh/chart: nginx-19.0.2
      pod-template-hash: 78b8c98787
    name: my-nginx-78b8c98787-rtf22
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: my-nginx-78b8c98787
      uid: dfe98b2a-0c84-4cf0-8228-5531328bbe5c
    resourceVersion: "1065651"
    uid: 21a77d50-45a6-4b06-89b8-4317bc1b9a17
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: my-nginx
                app.kubernetes.io/name: nginx
            topologyKey: kubernetes.io/hostname
          weight: 1
    automountServiceAccountToken: false
    containers:
    - env:
      - name: BITNAMI_DEBUG
        value: "false"
      - name: NGINX_HTTP_PORT_NUMBER
        value: "8080"
      - name: NGINX_HTTPS_PORT_NUMBER
        value: "8443"
      image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: http
        timeoutSeconds: 5
      name: nginx
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      - containerPort: 8443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: http
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: 150m
          ephemeral-storage: 2Gi
          memory: 192Mi
        requests:
          cpu: 100m
          ephemeral-storage: 50Mi
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: empty-dir
        subPath: tmp-dir
      - mountPath: /opt/bitnami/nginx/conf
        name: empty-dir
        subPath: app-conf-dir
      - mountPath: /opt/bitnami/nginx/logs
        name: empty-dir
        subPath: app-logs-dir
      - mountPath: /opt/bitnami/nginx/tmp
        name: empty-dir
        subPath: app-tmp-dir
      - mountPath: /certs
        name: certificate
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - -ec
      - |
        #!/bin/bash
        . /opt/bitnami/scripts/libfs.sh
        # We copy the logs folder because it has symlinks to stdout and stderr
        if ! is_dir_empty /opt/bitnami/nginx/logs; then
          cp -r /opt/bitnami/nginx/logs /emptydir/app-logs-dir
        fi
      command:
      - /bin/bash
      image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
      imagePullPolicy: IfNotPresent
      name: preserve-logs-symlinks
      resources:
        limits:
          cpu: 150m
          ephemeral-storage: 2Gi
          memory: 192Mi
        requests:
          cpu: 100m
          ephemeral-storage: 50Mi
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /emptydir
        name: empty-dir
    nodeName: imran-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1001
      fsGroupChangePolicy: Always
    serviceAccount: my-nginx
    serviceAccountName: my-nginx
    shareProcessNamespace: false
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: empty-dir
    - name: certificate
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: server.crt
        - key: tls.key
          path: server.key
        secretName: my-nginx-tls
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:57Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:12:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:12:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3c5e2a2140ca07c2721fbdd8ac3314c8d3a88e326235afdbf12e0fc35f63b0cd
      image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
      imageID: docker.io/bitnami/nginx@sha256:8c59627da1cae413ad250f4896b88242fab306af8b488e7905cf4d371b49bc3c
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:11:57Z"
      volumeMounts:
      - mountPath: /tmp
        name: empty-dir
      - mountPath: /opt/bitnami/nginx/conf
        name: empty-dir
      - mountPath: /opt/bitnami/nginx/logs
        name: empty-dir
      - mountPath: /opt/bitnami/nginx/tmp
        name: empty-dir
      - mountPath: /certs
        name: certificate
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    initContainerStatuses:
    - containerID: containerd://17d085192b3374c0f47daad64b3a9675b577bec89cfd4deda50042d040c949b1
      image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
      imageID: docker.io/bitnami/nginx@sha256:8c59627da1cae413ad250f4896b88242fab306af8b488e7905cf4d371b49bc3c
      lastState: {}
      name: preserve-logs-symlinks
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://17d085192b3374c0f47daad64b3a9675b577bec89cfd4deda50042d040c949b1
          exitCode: 0
          finishedAt: "2025-04-09T07:11:56Z"
          reason: Completed
          startedAt: "2025-04-09T07:11:56Z"
      volumeMounts:
      - mountPath: /emptydir
        name: empty-dir
    phase: Running
    podIP: 10.42.0.158
    podIPs:
    - ip: 10.42.0.158
    qosClass: Burstable
    startTime: "2025-04-09T07:11:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      instrumentation.opentelemetry.io/inject-java: java-instrumentation
      kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
    creationTimestamp: "2025-04-09T07:14:49Z"
    generateName: paymentservice-ddc56c685-
    labels:
      app: paymentservice
      pod-template-hash: ddc56c685
    name: paymentservice-ddc56c685-44wsm
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: paymentservice-ddc56c685
      uid: b9374af6-9bb1-4f91-96be-b8b115d819cb
    resourceVersion: "1145414"
    uid: 7c35c7ae-6661-4bd5-a763-c9c0f0c8cbcc
  spec:
    containers:
    - env:
      - name: OTEL_NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: OTEL_POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: PORT
        value: "50051"
      - name: DISABLE_PROFILER
        value: "1"
      - name: OTEL_SERVICE_NAME
        value: paymentservice
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://otel-collector-collector.observability.svc.cluster.local:4318
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: http/protobuf
      - name: JAVA_TOOL_OPTIONS
        value: ' -javaagent:/otel-auto-instrumentation-java/javaagent.jar'
      - name: OTEL_RESOURCE_ATTRIBUTES_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: OTEL_RESOURCE_ATTRIBUTES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: OTEL_PROPAGATORS
        value: tracecontext,baggage,b3
      - name: OTEL_TRACES_SAMPLER
        value: parentbased_traceidratio
      - name: OTEL_TRACES_SAMPLER_ARG
        value: "1.0"
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: service.namespace=default,service.name=paymentservice,k8s.container.name=server,k8s.deployment.name=paymentservice,k8s.namespace.name=default,k8s.node.name=$(OTEL_RESOURCE_ATTRIBUTES_NODE_NAME),k8s.pod.name=$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME),k8s.replicaset.name=paymentservice-ddc56c685,service.instance.id=default.$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME).server,service.version=v0.10.2
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice:v0.10.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        grpc:
          port: 50051
          service: ""
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 50051
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        grpc:
          port: 50051
          service: ""
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h7rf6
        readOnly: true
      - mountPath: /otel-auto-instrumentation-java
        name: opentelemetry-auto-instrumentation-java
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - cp
      - /javaagent.jar
      - /otel-auto-instrumentation-java/javaagent.jar
      image: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-java:latest
      imagePullPolicy: Always
      name: opentelemetry-auto-instrumentation-java
      resources:
        limits:
          cpu: 500m
          memory: 64Mi
        requests:
          cpu: 50m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /otel-auto-instrumentation-java
        name: opentelemetry-auto-instrumentation-java
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h7rf6
        readOnly: true
    nodeName: imran-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: paymentservice
    serviceAccountName: paymentservice
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-h7rf6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
    - emptyDir:
        sizeLimit: 200Mi
      name: opentelemetry-auto-instrumentation-java
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:52Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T03:55:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-11T03:55:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://414e035eff5d15e73252c531ebe0bffc9375485d4299cecf9d530037774f989f
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice:v0.10.2
      imageID: us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice@sha256:1f92cc2e26d7ebe456e6f5ece9bcc4f3f2fed86d29fb59d04ee5a3acb5dde0c8
      lastState:
        terminated:
          containerID: containerd://e3b85b441d81f853ad6ec9ca88cd182671d22307609ced6d56eab96e55c1aa26
          exitCode: 137
          finishedAt: "2025-04-11T03:55:40Z"
          reason: OOMKilled
          startedAt: "2025-04-10T23:05:12Z"
      name: server
      ready: true
      restartCount: 9
      started: true
      state:
        running:
          startedAt: "2025-04-11T03:55:41Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h7rf6
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /otel-auto-instrumentation-java
        name: opentelemetry-auto-instrumentation-java
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    initContainerStatuses:
    - containerID: containerd://92d7d4a8b55889aa3ae8a06d21b1937f2b06a80b0f0004644d26f02048c3cccb
      image: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-java:latest
      imageID: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-java@sha256:0df3475d6c0f2f7664c58bb145af2f898d3e38566c24c1abde420b01a7f608ad
      lastState: {}
      name: opentelemetry-auto-instrumentation-java
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://92d7d4a8b55889aa3ae8a06d21b1937f2b06a80b0f0004644d26f02048c3cccb
          exitCode: 0
          finishedAt: "2025-04-09T07:14:51Z"
          reason: Completed
          startedAt: "2025-04-09T07:14:51Z"
      volumeMounts:
      - mountPath: /otel-auto-instrumentation-java
        name: opentelemetry-auto-instrumentation-java
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h7rf6
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.42.0.164
    podIPs:
    - ip: 10.42.0.164
    qosClass: Burstable
    startTime: "2025-04-09T07:14:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      instrumentation.opentelemetry.io/inject-go: go-instrumentation
      instrumentation.opentelemetry.io/otel-go-auto-target-exe: src/server
      kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
    creationTimestamp: "2025-04-09T07:11:42Z"
    generateName: productcatalogservice-84c7db64bf-
    labels:
      app: productcatalogservice
      pod-template-hash: 84c7db64bf
    name: productcatalogservice-84c7db64bf-zsscl
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: productcatalogservice-84c7db64bf
      uid: 284e6da4-cf68-4418-b082-42c73ce62562
    resourceVersion: "1065349"
    uid: 78e762b1-52a4-4bfb-848b-8fcd6f3fd467
  spec:
    containers:
    - env:
      - name: PORT
        value: "3550"
      - name: DISABLE_PROFILER
        value: "1"
      - name: OTEL_SERVICE_NAME
        value: productcatalogservice
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: service.namespace=default,service.name=productcatalogservice
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://otel-collector-collector.observability.svc.cluster.local:4318
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: http/protobuf
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        grpc:
          port: 3550
          service: ""
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 3550
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        grpc:
          port: 3550
          service: ""
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kksq2
        readOnly: true
    - env:
      - name: OTEL_NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: OTEL_POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: OTEL_GO_AUTO_TARGET_EXE
        value: src/server
      - name: OTEL_SERVICE_NAME
        value: productcatalogservice
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://otel-collector-collector.observability.svc.cluster.local:4318
      - name: OTEL_RESOURCE_ATTRIBUTES_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: OTEL_RESOURCE_ATTRIBUTES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: OTEL_PROPAGATORS
        value: tracecontext,baggage,b3
      - name: OTEL_TRACES_SAMPLER
        value: parentbased_traceidratio
      - name: OTEL_TRACES_SAMPLER_ARG
        value: "1.0"
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: k8s.container.name=server,k8s.deployment.name=productcatalogservice,k8s.namespace.name=default,k8s.node.name=$(OTEL_RESOURCE_ATTRIBUTES_NODE_NAME),k8s.pod.name=$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME),k8s.replicaset.name=productcatalogservice-84c7db64bf,service.instance.id=default.$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME).server,service.version=v0.10.2
      image: ghcr.io/open-telemetry/opentelemetry-go-instrumentation/autoinstrumentation-go:latest
      imagePullPolicy: Always
      name: opentelemetry-auto-instrumentation
      resources:
        limits:
          cpu: 500m
          memory: 64Mi
        requests:
          cpu: 50m
          memory: 64Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /sys/kernel/debug
        name: kernel-debug
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kksq2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: imran-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: productcatalogservice
    serviceAccountName: productcatalogservice
    shareProcessNamespace: true
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-kksq2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
    - hostPath:
        path: /sys/kernel/debug
        type: ""
      name: kernel-debug
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:45Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d52e782568aecadb25b1df20cf2b2903045ad2a9feceb7793a7a04e6715fd787
      image: ghcr.io/open-telemetry/opentelemetry-go-instrumentation/autoinstrumentation-go:latest
      imageID: ghcr.io/open-telemetry/opentelemetry-go-instrumentation/autoinstrumentation-go@sha256:7df5d9e9040c935b11ff3bbed59b4b67139cd349b97abc188e003576fc05a4c0
      lastState: {}
      name: opentelemetry-auto-instrumentation
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:11:45Z"
      volumeMounts:
      - mountPath: /sys/kernel/debug
        name: kernel-debug
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kksq2
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://946360983ec153c6142243619922fe3ed3c1f51d3e0d2a6b4f2696ca3f955858
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.2
      imageID: us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice@sha256:b8e088f9014bcfe7bbf9848fbc2aff5c27be1fab0bb46e188053fa2a34e45d8d
      lastState: {}
      name: server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:11:44Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kksq2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    phase: Running
    podIP: 10.42.0.148
    podIPs:
    - ip: 10.42.0.148
    qosClass: Burstable
    startTime: "2025-04-09T07:11:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/config: 5c40e84d3cd8d57b76c64cf9b7aaa50c34f0bdd11c5014c8cb53ffbe3cc1f844
    creationTimestamp: "2025-03-19T12:13:17Z"
    generateName: prometheus-alertmanager-
    labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: alertmanager
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: prometheus-alertmanager-698ffd5d8c
      statefulset.kubernetes.io/pod-name: prometheus-alertmanager-0
    name: prometheus-alertmanager-0
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: prometheus-alertmanager
      uid: d3074936-f0f1-46e9-990e-e213aef0bcb1
    resourceVersion: "10019"
    uid: eade1e61-71a4-487c-90b5-25a51cf5fe8a
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - --storage.path=/alertmanager
      - --config.file=/etc/alertmanager/alertmanager.yml
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/prometheus/alertmanager:v0.28.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: http
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: alertmanager
      ports:
      - containerPort: 9093
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: http
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/alertmanager
        name: config
      - mountPath: /alertmanager
        name: storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zmbkq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: prometheus-alertmanager-0
    nodeName: imran-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: prometheus-alertmanager
    serviceAccountName: prometheus-alertmanager
    subdomain: prometheus-alertmanager-headless
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: storage
      persistentVolumeClaim:
        claimName: storage-prometheus-alertmanager-0
    - configMap:
        defaultMode: 420
        name: prometheus-alertmanager
      name: config
    - name: kube-api-access-zmbkq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-19T12:13:18Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-19T12:13:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-19T12:13:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-19T12:13:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-19T12:13:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b5f2c8afa79d8d96371599dd83e5e8b999bd877190709b87e5198634a13e79d6
      image: quay.io/prometheus/alertmanager:v0.28.0
      imageID: quay.io/prometheus/alertmanager@sha256:d5155cfac40a6d9250ffc97c19db2c5e190c7bc57c6b67125c94903358f8c7d8
      lastState: {}
      name: alertmanager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-19T12:13:17Z"
      volumeMounts:
      - mountPath: /etc/alertmanager
        name: config
      - mountPath: /alertmanager
        name: storage
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zmbkq
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    phase: Running
    podIP: 10.42.0.39
    podIPs:
    - ip: 10.42.0.39
    qosClass: BestEffort
    startTime: "2025-03-19T12:13:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
    creationTimestamp: "2025-04-09T07:11:42Z"
    generateName: prometheus-kube-state-metrics-99577dbfd-
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-5.30.0
      pod-template-hash: 99577dbfd
    name: prometheus-kube-state-metrics-99577dbfd-t59zd
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-kube-state-metrics-99577dbfd
      uid: 6ac1206a-2fc0-487f-b3bf-6e45a1e38eba
    resourceVersion: "1065548"
    uid: c9691f5b-46ae-43ac-bb37-733b141d8295
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - --port=8080
      - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
      image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kube-state-metrics
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tpkhq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: imran-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: prometheus-kube-state-metrics
    serviceAccountName: prometheus-kube-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-tpkhq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:45Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a242dbff7314c406057c446d883ee57c123f7547846f892f970f12232b726260
      image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
      imageID: registry.k8s.io/kube-state-metrics/kube-state-metrics@sha256:db384bf43222b066c378e77027a675d4cd9911107adba46c2922b3a55e10d6fb
      lastState: {}
      name: kube-state-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:11:45Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tpkhq
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    phase: Running
    podIP: 10.42.0.150
    podIPs:
    - ip: 10.42.0.150
    qosClass: BestEffort
    startTime: "2025-04-09T07:11:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    creationTimestamp: "2025-03-19T12:13:17Z"
    generateName: prometheus-prometheus-node-exporter-
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-node-exporter
      app.kubernetes.io/part-of: prometheus-node-exporter
      app.kubernetes.io/version: 1.9.0
      controller-revision-hash: 6d7bf84f58
      helm.sh/chart: prometheus-node-exporter-4.44.0
      pod-template-generation: "1"
    name: prometheus-prometheus-node-exporter-9tlcm
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: prometheus-prometheus-node-exporter
      uid: 2bfb86e9-4f31-4f28-ba47-b869ae4d0179
    resourceVersion: "10028"
    uid: dee7b244-6665-4fdd-a379-dca1f0b175d3
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - imran-2
    automountServiceAccountToken: false
    containers:
    - args:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/host/root
      - --path.udev.data=/host/root/run/udev/data
      - --web.listen-address=[$(HOST_IP)]:9100
      env:
      - name: HOST_IP
        value: 0.0.0.0
      image: quay.io/prometheus/node-exporter:v1.9.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 9100
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: node-exporter
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 9100
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
      - mountPath: /host/sys
        name: sys
        readOnly: true
      - mountPath: /host/root
        mountPropagation: HostToContainer
        name: root
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: imran-2
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: prometheus-prometheus-node-exporter
    serviceAccountName: prometheus-prometheus-node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /proc
        type: ""
      name: proc
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - hostPath:
        path: /
        type: ""
      name: root
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-19T12:13:18Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-19T12:13:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-19T12:13:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-19T12:13:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-19T12:13:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f3b6e74514dfd5ad4b2f8fc7baf6929e5374745e4980a8dd5d0ce1d30af28d22
      image: quay.io/prometheus/node-exporter:v1.9.0
      imageID: quay.io/prometheus/node-exporter@sha256:c99d7ee4d12a38661788f60d9eca493f08584e2e544bbd3b3fca64749f86b848
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-19T12:13:17Z"
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/sys
        name: sys
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /host/root
        name: root
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    phase: Running
    podIP: 192.168.122.96
    podIPs:
    - ip: 192.168.122.96
    qosClass: BestEffort
    startTime: "2025-03-19T12:13:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
    creationTimestamp: "2025-04-09T07:11:49Z"
    generateName: prometheus-prometheus-pushgateway-7c759fcdf5-
    labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-pushgateway
      app.kubernetes.io/version: v1.11.0
      helm.sh/chart: prometheus-pushgateway-3.0.0
      pod-template-hash: 7c759fcdf5
    name: prometheus-prometheus-pushgateway-7c759fcdf5-gj9j8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-prometheus-pushgateway-7c759fcdf5
      uid: 9c235dad-53c9-4c22-b67a-d001d92b3ca0
    resourceVersion: "1065606"
    uid: dd0ae539-6917-4976-b965-ee2a6614bfe1
  spec:
    automountServiceAccountToken: true
    containers:
    - image: quay.io/prometheus/pushgateway:v1.11.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/healthy
          port: 9091
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: pushgateway
      ports:
      - containerPort: 9091
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/ready
          port: 9091
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: storage-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-88zqg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: imran-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: prometheus-prometheus-pushgateway
    serviceAccountName: prometheus-prometheus-pushgateway
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: storage-volume
    - name: kube-api-access-88zqg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:50Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:12:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:12:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a561a09c20ee8237c8d91b019e38ab30fe446fcb8f1481075da0a18e3ffe9dac
      image: quay.io/prometheus/pushgateway:v1.11.0
      imageID: quay.io/prometheus/pushgateway@sha256:99392035ae99754b40e579088710df184b6a730b77670148f44102ba9ee01d2f
      lastState: {}
      name: pushgateway
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:11:50Z"
      volumeMounts:
      - mountPath: /data
        name: storage-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-88zqg
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    phase: Running
    podIP: 10.42.0.156
    podIPs:
    - ip: 10.42.0.156
    qosClass: BestEffort
    startTime: "2025-04-09T07:11:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
    creationTimestamp: "2025-04-09T07:11:50Z"
    generateName: prometheus-server-65745bcbd4-
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: prometheus
      app.kubernetes.io/version: v3.2.1
      helm.sh/chart: prometheus-27.5.1
      pod-template-hash: 65745bcbd4
    name: prometheus-server-65745bcbd4-lzjxn
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-server-65745bcbd4
      uid: 84fe6bc9-c2c3-460d-9455-65dd5f2e08c0
    resourceVersion: "1065709"
    uid: cc5c3e73-840c-42ce-b2c5-6da7743c46b4
  spec:
    containers:
    - args:
      - --watched-dir=/etc/config
      - --listen-address=0.0.0.0:8080
      - --reload-url=http://127.0.0.1:9090/-/reload
      image: quay.io/prometheus-operator/prometheus-config-reloader:v0.80.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: metrics
          scheme: HTTP
        initialDelaySeconds: 2
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: prometheus-server-configmap-reload
      ports:
      - containerPort: 8080
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: metrics
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vjp44
        readOnly: true
    - args:
      - --storage.tsdb.retention.time=15d
      - --config.file=/etc/config/prometheus.yml
      - --storage.tsdb.path=/data
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle
      image: quay.io/prometheus/prometheus:v3.2.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/healthy
          port: 9090
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 10
      name: prometheus-server
      ports:
      - containerPort: 9090
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/ready
          port: 9090
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: config-volume
      - mountPath: /data
        name: storage-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vjp44
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: imran-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: prometheus-server
    serviceAccountName: prometheus-server
    terminationGracePeriodSeconds: 300
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: prometheus-server
      name: config-volume
    - name: storage-volume
      persistentVolumeClaim:
        claimName: prometheus-server
    - name: kube-api-access-vjp44
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:51Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:12:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:12:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d780d81b07ec95133b059db3c466e19f4b68fe749924fdefd8ecdc1f21b52976
      image: quay.io/prometheus/prometheus:v3.2.1
      imageID: quay.io/prometheus/prometheus@sha256:6927e0919a144aa7616fd0137d4816816d42f6b816de3af269ab065250859a62
      lastState: {}
      name: prometheus-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:11:51Z"
      volumeMounts:
      - mountPath: /etc/config
        name: config-volume
      - mountPath: /data
        name: storage-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vjp44
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://28725c45e450c2aa1feb373b214ab0fdeee42589e26c2aadd972d2e071d2250d
      image: quay.io/prometheus-operator/prometheus-config-reloader:v0.80.1
      imageID: quay.io/prometheus-operator/prometheus-config-reloader@sha256:125886af6555c1d9726bef0ebc845e922e0f227bba68e0c70fb661295da96bfe
      lastState: {}
      name: prometheus-server-configmap-reload
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:11:51Z"
      volumeMounts:
      - mountPath: /etc/config
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vjp44
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    phase: Running
    podIP: 10.42.0.157
    podIPs:
    - ip: 10.42.0.157
    qosClass: BestEffort
    startTime: "2025-04-09T07:11:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      instrumentation.opentelemetry.io/inject-python: python-instrumentation
      kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
    creationTimestamp: "2025-04-09T07:14:50Z"
    generateName: recommendationservice-777fc67b6c-
    labels:
      app: recommendationservice
      pod-template-hash: 777fc67b6c
    name: recommendationservice-777fc67b6c-z2hmr
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: recommendationservice-777fc67b6c
      uid: 49c4f82c-8599-4faa-90f5-6981a4e0674b
    resourceVersion: "1066251"
    uid: 74c47919-dc08-4322-9cf8-ebad9e36e74a
  spec:
    containers:
    - env:
      - name: OTEL_NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: OTEL_POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: PORT
        value: "8080"
      - name: PRODUCT_CATALOG_SERVICE_ADDR
        value: productcatalogservice:3550
      - name: DISABLE_PROFILER
        value: "1"
      - name: OTEL_SERVICE_NAME
        value: recommendationservice
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://otel-collector-collector.observability.svc.cluster.local:4318
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: http/protobuf
      - name: PYTHONPATH
        value: /otel-auto-instrumentation-python/opentelemetry/instrumentation/auto_instrumentation:/otel-auto-instrumentation-python
      - name: OTEL_TRACES_EXPORTER
        value: otlp
      - name: OTEL_METRICS_EXPORTER
        value: otlp
      - name: OTEL_LOGS_EXPORTER
        value: otlp
      - name: OTEL_RESOURCE_ATTRIBUTES_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: OTEL_RESOURCE_ATTRIBUTES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: OTEL_PROPAGATORS
        value: tracecontext,baggage,b3
      - name: OTEL_TRACES_SAMPLER
        value: parentbased_traceidratio
      - name: OTEL_TRACES_SAMPLER_ARG
        value: "1.0"
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: service.namespace=default,service.name=recommendationservice,k8s.container.name=server,k8s.deployment.name=recommendationservice,k8s.namespace.name=default,k8s.node.name=$(OTEL_RESOURCE_ATTRIBUTES_NODE_NAME),k8s.pod.name=$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME),k8s.replicaset.name=recommendationservice-777fc67b6c,service.instance.id=default.$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME).server,service.version=v0.10.2
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        grpc:
          port: 8080
          service: ""
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 8080
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        grpc:
          port: 8080
          service: ""
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 450Mi
        requests:
          cpu: 100m
          memory: 220Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nnr9n
        readOnly: true
      - mountPath: /otel-auto-instrumentation-python
        name: opentelemetry-auto-instrumentation-python
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - cp
      - -r
      - /autoinstrumentation/.
      - /otel-auto-instrumentation-python
      image: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-python:latest
      imagePullPolicy: Always
      name: opentelemetry-auto-instrumentation-python
      resources:
        limits:
          cpu: 500m
          memory: 64Mi
        requests:
          cpu: 50m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /otel-auto-instrumentation-python
        name: opentelemetry-auto-instrumentation-python
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nnr9n
        readOnly: true
    nodeName: imran-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: recommendationservice
    serviceAccountName: recommendationservice
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-nnr9n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
    - emptyDir:
        sizeLimit: 200Mi
      name: opentelemetry-auto-instrumentation-python
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:52Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:15:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:15:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:14:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://83dd6738cb3b345c724173a1c9004bc532859c9648996498c0bea096c288090d
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.2
      imageID: us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice@sha256:cbfbae73941038ba462165d67502d737810bc5867dbda0ed9b523f9ff5dac555
      lastState: {}
      name: server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:14:52Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nnr9n
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /otel-auto-instrumentation-python
        name: opentelemetry-auto-instrumentation-python
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    initContainerStatuses:
    - containerID: containerd://4499fd802beaae3a1f82533d3f0f80d12b3e5de34e31d22282312eb86d9d0c4c
      image: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-python:latest
      imageID: ghcr.io/open-telemetry/opentelemetry-operator/autoinstrumentation-python@sha256:d0e9803e31cb66f49cecbe9627c237d37b1680350fc2292c49c732b34fda04f0
      lastState: {}
      name: opentelemetry-auto-instrumentation-python
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4499fd802beaae3a1f82533d3f0f80d12b3e5de34e31d22282312eb86d9d0c4c
          exitCode: 0
          finishedAt: "2025-04-09T07:14:52Z"
          reason: Completed
          startedAt: "2025-04-09T07:14:52Z"
      volumeMounts:
      - mountPath: /otel-auto-instrumentation-python
        name: opentelemetry-auto-instrumentation-python
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nnr9n
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.42.0.165
    podIPs:
    - ip: 10.42.0.165
    qosClass: Burstable
    startTime: "2025-04-09T07:14:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
    creationTimestamp: "2025-04-09T07:11:43Z"
    generateName: redis-cart-5db848f98b-
    labels:
      app: redis-cart
      pod-template-hash: 5db848f98b
    name: redis-cart-5db848f98b-td4r9
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: redis-cart-5db848f98b
      uid: 798ffa43-afc9-4fa1-8398-4d23ca5adc3f
    resourceVersion: "1065424"
    uid: c7afa622-16a5-46f7-8600-f40323315b55
  spec:
    containers:
    - image: redis:alpine
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        periodSeconds: 5
        successThreshold: 1
        tcpSocket:
          port: 6379
        timeoutSeconds: 1
      name: redis
      ports:
      - containerPort: 6379
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        periodSeconds: 5
        successThreshold: 1
        tcpSocket:
          port: 6379
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 125m
          memory: 256Mi
        requests:
          cpu: 70m
          memory: 200Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: redis-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4vb4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: imran-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: redis-data
    - name: kube-api-access-g4vb4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:45Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e04869f30b430339398c77a39695c9fff36802a2eef499bd6c811e82a3ffcdbd
      image: docker.io/library/redis:alpine
      imageID: docker.io/library/redis@sha256:02419de7eddf55aa5bcf49efb74e88fa8d931b4d77c07eff8a6b2144472b6952
      lastState: {}
      name: redis
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:11:45Z"
      volumeMounts:
      - mountPath: /data
        name: redis-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g4vb4
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    phase: Running
    podIP: 10.42.0.152
    podIPs:
    - ip: 10.42.0.152
    qosClass: Burstable
    startTime: "2025-04-09T07:11:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      instrumentation.opentelemetry.io/inject-go: go-instrumentation
      instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/shippingservice
      kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
    creationTimestamp: "2025-04-09T07:11:44Z"
    generateName: shippingservice-7bb6954db6-
    labels:
      app: shippingservice
      pod-template-hash: 7bb6954db6
    name: shippingservice-7bb6954db6-44szz
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: shippingservice-7bb6954db6
      uid: 88cba6f6-a1e0-41cf-a28c-89ebf9aea8e7
    resourceVersion: "1065277"
    uid: 80f1ab3b-8b5a-4dd3-86c0-64caeb54bc59
  spec:
    containers:
    - env:
      - name: PORT
        value: "50051"
      - name: DISABLE_PROFILER
        value: "1"
      - name: OTEL_SERVICE_NAME
        value: shippingservice
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: service.namespace=default,service.name=shippingservice
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://otel-collector-collector.observability.svc.cluster.local:4318
      - name: OTEL_EXPORTER_OTLP_PROTOCOL
        value: http/protobuf
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        grpc:
          port: 50051
          service: ""
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: server
      ports:
      - containerPort: 50051
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        grpc:
          port: 50051
          service: ""
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-djkn9
        readOnly: true
    - env:
      - name: OTEL_NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: OTEL_POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: OTEL_GO_AUTO_TARGET_EXE
        value: /src/shippingservice
      - name: OTEL_SERVICE_NAME
        value: shippingservice
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://otel-collector-collector.observability.svc.cluster.local:4318
      - name: OTEL_RESOURCE_ATTRIBUTES_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: OTEL_RESOURCE_ATTRIBUTES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: OTEL_PROPAGATORS
        value: tracecontext,baggage,b3
      - name: OTEL_TRACES_SAMPLER
        value: parentbased_traceidratio
      - name: OTEL_TRACES_SAMPLER_ARG
        value: "1.0"
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: k8s.container.name=server,k8s.deployment.name=shippingservice,k8s.namespace.name=default,k8s.node.name=$(OTEL_RESOURCE_ATTRIBUTES_NODE_NAME),k8s.pod.name=$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME),k8s.replicaset.name=shippingservice-7bb6954db6,service.instance.id=default.$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME).server,service.version=v0.10.2
      image: ghcr.io/open-telemetry/opentelemetry-go-instrumentation/autoinstrumentation-go:latest
      imagePullPolicy: Always
      name: opentelemetry-auto-instrumentation
      resources:
        limits:
          cpu: 500m
          memory: 64Mi
        requests:
          cpu: 50m
          memory: 64Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /sys/kernel/debug
        name: kernel-debug
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-djkn9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: imran-2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: shippingservice
    serviceAccountName: shippingservice
    shareProcessNamespace: true
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-djkn9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
    - hostPath:
        path: /sys/kernel/debug
        type: ""
      name: kernel-debug
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:46Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-09T07:11:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://38b6741776b950140f17b25815de849df3357abc05bb79911d501f018e80a4e0
      image: ghcr.io/open-telemetry/opentelemetry-go-instrumentation/autoinstrumentation-go:latest
      imageID: ghcr.io/open-telemetry/opentelemetry-go-instrumentation/autoinstrumentation-go@sha256:7df5d9e9040c935b11ff3bbed59b4b67139cd349b97abc188e003576fc05a4c0
      lastState: {}
      name: opentelemetry-auto-instrumentation
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:11:46Z"
      volumeMounts:
      - mountPath: /sys/kernel/debug
        name: kernel-debug
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-djkn9
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://95776c03fc0aeeef94258a8d10661dbe2feee60153fbbcb20267f5417c0d8b51
      image: us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.2
      imageID: us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice@sha256:a3300fd7917922467dc8f803c2c8aa4a83829baa5542075bb7b9a152c43a176d
      lastState: {}
      name: server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-09T07:11:45Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-djkn9
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.122.96
    hostIPs:
    - ip: 192.168.122.96
    phase: Running
    podIP: 10.42.0.153
    podIPs:
    - ip: 10.42.0.153
    qosClass: Burstable
    startTime: "2025-04-09T07:11:44Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"adservice"},"name":"adservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":9555,"targetPort":9555}],"selector":{"app":"adservice"},"type":"ClusterIP"}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    labels:
      app: adservice
    name: adservice
    namespace: default
    resourceVersion: "40858"
    uid: d38ac51c-c3d1-4bea-a227-81ff9e8c2b0a
  spec:
    clusterIP: 10.43.249.157
    clusterIPs:
    - 10.43.249.157
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 9555
      protocol: TCP
      targetPort: 9555
    selector:
      app: adservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"cartservice"},"name":"cartservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":7070,"targetPort":7070}],"selector":{"app":"cartservice"},"type":"ClusterIP"}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    labels:
      app: cartservice
    name: cartservice
    namespace: default
    resourceVersion: "40789"
    uid: e64c61a0-68aa-4aa7-8026-35b713ed4060
  spec:
    clusterIP: 10.43.125.152
    clusterIPs:
    - 10.43.125.152
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 7070
      protocol: TCP
      targetPort: 7070
    selector:
      app: cartservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"checkoutservice"},"name":"checkoutservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":5050,"targetPort":5050}],"selector":{"app":"checkoutservice"},"type":"ClusterIP"}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    labels:
      app: checkoutservice
    name: checkoutservice
    namespace: default
    resourceVersion: "40679"
    uid: ab9cad3a-6f36-4493-bd0e-c23b58197aa2
  spec:
    clusterIP: 10.43.53.12
    clusterIPs:
    - 10.43.53.12
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 5050
      protocol: TCP
      targetPort: 5050
    selector:
      app: checkoutservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"currencyservice"},"name":"currencyservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":7000,"targetPort":7000}],"selector":{"app":"currencyservice"},"type":"ClusterIP"}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    labels:
      app: currencyservice
    name: currencyservice
    namespace: default
    resourceVersion: "40817"
    uid: 8bb962ae-50fa-4f23-9777-b6885bd08b2a
  spec:
    clusterIP: 10.43.167.45
    clusterIPs:
    - 10.43.167.45
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 7000
      protocol: TCP
      targetPort: 7000
    selector:
      app: currencyservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"emailservice"},"name":"emailservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":5000,"targetPort":8080}],"selector":{"app":"emailservice"},"type":"ClusterIP"}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    labels:
      app: emailservice
    name: emailservice
    namespace: default
    resourceVersion: "40662"
    uid: a7ac5906-e506-456f-b945-8b808dbb47c6
  spec:
    clusterIP: 10.43.48.15
    clusterIPs:
    - 10.43.48.15
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 5000
      protocol: TCP
      targetPort: 8080
    selector:
      app: emailservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"frontend"},"name":"frontend","namespace":"default"},"spec":{"ports":[{"name":"http","port":80,"targetPort":8080}],"selector":{"app":"frontend"},"type":"ClusterIP"}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    labels:
      app: frontend
    name: frontend
    namespace: default
    resourceVersion: "40714"
    uid: 66cf0e88-cf38-4772-b10e-aecba6496ab1
  spec:
    clusterIP: 10.43.174.223
    clusterIPs:
    - 10.43.174.223
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: frontend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"frontend"},"name":"frontend-external","namespace":"default"},"spec":{"ports":[{"name":"http","port":80,"targetPort":8080}],"selector":{"app":"frontend"},"type":"LoadBalancer"}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: frontend
    name: frontend-external
    namespace: default
    resourceVersion: "40730"
    uid: ba2550c9-b1c3-4c05-9456-0e803e970fff
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.43.203.74
    clusterIPs:
    - 10.43.203.74
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 30701
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: frontend
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: grafana
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-21T10:36:26Z"
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 11.5.2
      helm.sh/chart: grafana-8.10.4
    name: grafana
    namespace: default
    resourceVersion: "71200"
    uid: 94fa7e62-7650-4401-88d4-e3bf4b0f0108
  spec:
    clusterIP: 10.43.19.103
    clusterIPs:
    - 10.43.19.103
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: service
      port: 80
      protocol: TCP
      targetPort: 3000
    selector:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-03-21T10:44:18Z"
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 11.5.2
      helm.sh/chart: grafana-8.10.4
    name: grafana-ext
    namespace: default
    resourceVersion: "71420"
    uid: 8829bb8c-cd36-4d90-a18c-548a172e9468
  spec:
    clusterIP: 10.43.190.231
    clusterIPs:
    - 10.43.190.231
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 32567
      port: 80
      protocol: TCP
      targetPort: 3000
    selector:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-03-19T07:01:46Z"
    labels:
      app: kube-prometheus-stack-prometheus
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kube-prometheus-stack
      app.kubernetes.io/version: 70.0.2
      chart: kube-prometheus-stack-70.0.2
      heritage: Helm
      release: prometheus
      self-monitor: "true"
    name: kube-prometheus-server-ext
    namespace: default
    resourceVersion: "3109"
    uid: b20caee9-4193-47ad-848c-35fcb38902bf
  spec:
    clusterIP: 10.43.213.88
    clusterIPs:
    - 10.43.213.88
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: port-1
      nodePort: 30796
      port: 9090
      protocol: TCP
      targetPort: 9090
    - name: port-2
      nodePort: 32502
      port: 8080
      protocol: TCP
      targetPort: 9090
    selector:
      app.kubernetes.io/name: prometheus
      operator.prometheus.io/name: prometheus-kube-prometheus-prometheus
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-03-19T05:41:45Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "196"
    uid: a66b0c0b-7314-4233-90c9-8221e2d498b8
  spec:
    clusterIP: 10.43.0.1
    clusterIPs:
    - 10.43.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: my-nginx
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-19T05:52:22Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/instance: my-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nginx
      app.kubernetes.io/version: 1.27.4
      helm.sh/chart: nginx-19.0.2
    name: my-nginx
    namespace: default
    resourceVersion: "873"
    uid: 37a779d8-1f2a-4d68-ba53-4b83e74b472d
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.43.24.225
    clusterIPs:
    - 10.43.24.225
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 31721
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      nodePort: 31846
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app.kubernetes.io/instance: my-nginx
      app.kubernetes.io/name: nginx
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"paymentservice"},"name":"paymentservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":50051,"targetPort":50051}],"selector":{"app":"paymentservice"},"type":"ClusterIP"}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    labels:
      app: paymentservice
    name: paymentservice
    namespace: default
    resourceVersion: "40748"
    uid: d62540af-048d-44a2-b8da-e3d697944cf5
  spec:
    clusterIP: 10.43.189.95
    clusterIPs:
    - 10.43.189.95
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 50051
      protocol: TCP
      targetPort: 50051
    selector:
      app: paymentservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"productcatalogservice"},"name":"productcatalogservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":3550,"targetPort":3550}],"selector":{"app":"productcatalogservice"},"type":"ClusterIP"}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    labels:
      app: productcatalogservice
    name: productcatalogservice
    namespace: default
    resourceVersion: "40768"
    uid: ccb02943-4323-403e-886c-b229ecf3708f
  spec:
    clusterIP: 10.43.205.180
    clusterIPs:
    - 10.43.205.180
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 3550
      protocol: TCP
      targetPort: 3550
    selector:
      app: productcatalogservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-19T12:13:17Z"
    labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: alertmanager
      app.kubernetes.io/version: v0.28.0
      helm.sh/chart: alertmanager-1.15.0
    name: prometheus-alertmanager
    namespace: default
    resourceVersion: "9932"
    uid: c06e47ba-1f90-40ad-88a5-80d1419e6757
  spec:
    clusterIP: 10.43.35.195
    clusterIPs:
    - 10.43.35.195
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9093
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: alertmanager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-19T12:13:17Z"
    labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: alertmanager
      app.kubernetes.io/version: v0.28.0
      helm.sh/chart: alertmanager-1.15.0
    name: prometheus-alertmanager-headless
    namespace: default
    resourceVersion: "9912"
    uid: 53cb3630-ec8e-4efa-b09d-8fbde2f1d74c
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9093
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: alertmanager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-03-19T12:13:17Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-5.30.0
    name: prometheus-kube-state-metrics
    namespace: default
    resourceVersion: "9923"
    uid: e0ead220-6b01-45d1-8931-42172a21aed0
  spec:
    clusterIP: 10.43.206.3
    clusterIPs:
    - 10.43.206.3
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: kube-state-metrics
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-03-19T12:13:17Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-node-exporter
      app.kubernetes.io/part-of: prometheus-node-exporter
      app.kubernetes.io/version: 1.9.0
      helm.sh/chart: prometheus-node-exporter-4.44.0
    name: prometheus-prometheus-node-exporter
    namespace: default
    resourceVersion: "9920"
    uid: 266fc671-a40a-44a1-84b6-f38ee8dd13c2
  spec:
    clusterIP: 10.43.26.228
    clusterIPs:
    - 10.43.26.228
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics
      port: 9100
      protocol: TCP
      targetPort: 9100
    selector:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus-node-exporter
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
      prometheus.io/probe: pushgateway
    creationTimestamp: "2025-03-19T12:13:17Z"
    labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-pushgateway
      app.kubernetes.io/version: v1.11.0
      helm.sh/chart: prometheus-pushgateway-3.0.0
    name: prometheus-prometheus-pushgateway
    namespace: default
    resourceVersion: "9928"
    uid: db3ff4b4-0705-4cfc-a01c-06e621fc5e00
  spec:
    clusterIP: 10.43.45.64
    clusterIPs:
    - 10.43.45.64
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9091
      protocol: TCP
      targetPort: 9091
    selector:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus-pushgateway
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-19T12:13:17Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: prometheus
      app.kubernetes.io/version: v3.2.1
      helm.sh/chart: prometheus-27.5.1
    name: prometheus-server
    namespace: default
    resourceVersion: "9916"
    uid: 4c0557a5-a32f-4089-8595-e1cec4ed80fa
  spec:
    clusterIP: 10.43.192.103
    clusterIPs:
    - 10.43.192.103
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9090
    selector:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-03-19T12:14:48Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: prometheus
      app.kubernetes.io/version: v3.2.1
      helm.sh/chart: prometheus-27.5.1
    name: prometheus-server-ext
    namespace: default
    resourceVersion: "10114"
    uid: 1f4a6cbd-d6ad-4699-a97d-4ce280045fd0
  spec:
    clusterIP: 10.43.22.188
    clusterIPs:
    - 10.43.22.188
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 32073
      port: 80
      protocol: TCP
      targetPort: 9090
    selector:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"recommendationservice"},"name":"recommendationservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":8080,"targetPort":8080}],"selector":{"app":"recommendationservice"},"type":"ClusterIP"}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    labels:
      app: recommendationservice
    name: recommendationservice
    namespace: default
    resourceVersion: "40696"
    uid: 2a11f8f0-da95-4fab-90d8-6bc5f59e1601
  spec:
    clusterIP: 10.43.33.28
    clusterIPs:
    - 10.43.33.28
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: recommendationservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"redis-cart"},"name":"redis-cart","namespace":"default"},"spec":{"ports":[{"name":"tcp-redis","port":6379,"targetPort":6379}],"selector":{"app":"redis-cart"},"type":"ClusterIP"}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    labels:
      app: redis-cart
    name: redis-cart
    namespace: default
    resourceVersion: "40804"
    uid: ae29d8c2-5ef0-4f89-bd4f-eb77558b5f33
  spec:
    clusterIP: 10.43.127.128
    clusterIPs:
    - 10.43.127.128
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app: redis-cart
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"shippingservice"},"name":"shippingservice","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":50051,"targetPort":50051}],"selector":{"app":"shippingservice"},"type":"ClusterIP"}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    labels:
      app: shippingservice
    name: shippingservice
    namespace: default
    resourceVersion: "40831"
    uid: 2cb3b6a8-174a-4e88-8de9-4ed571e6172c
  spec:
    clusterIP: 10.43.240.2
    clusterIPs:
    - 10.43.240.2
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 50051
      protocol: TCP
      targetPort: 50051
    selector:
      app: shippingservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-19T12:13:17Z"
    generation: 1
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-node-exporter
      app.kubernetes.io/part-of: prometheus-node-exporter
      app.kubernetes.io/version: 1.9.0
      helm.sh/chart: prometheus-node-exporter-4.44.0
    name: prometheus-prometheus-node-exporter
    namespace: default
    resourceVersion: "10031"
    uid: 2bfb86e9-4f31-4f28-ba47-b869ae4d0179
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus-node-exporter
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: prometheus-node-exporter
          app.kubernetes.io/part-of: prometheus-node-exporter
          app.kubernetes.io/version: 1.9.0
          helm.sh/chart: prometheus-node-exporter-4.44.0
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: eks.amazonaws.com/compute-type
                  operator: NotIn
                  values:
                  - fargate
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
        automountServiceAccountToken: false
        containers:
        - args:
          - --path.procfs=/host/proc
          - --path.sysfs=/host/sys
          - --path.rootfs=/host/root
          - --path.udev.data=/host/root/run/udev/data
          - --web.listen-address=[$(HOST_IP)]:9100
          env:
          - name: HOST_IP
            value: 0.0.0.0
          image: quay.io/prometheus/node-exporter:v1.9.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9100
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: node-exporter
          ports:
          - containerPort: 9100
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9100
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/proc
            name: proc
            readOnly: true
          - mountPath: /host/sys
            name: sys
            readOnly: true
          - mountPath: /host/root
            mountPropagation: HostToContainer
            name: root
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-prometheus-node-exporter
        serviceAccountName: prometheus-prometheus-node-exporter
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /proc
            type: ""
          name: proc
        - hostPath:
            path: /sys
            type: ""
          name: sys
        - hostPath:
            path: /
            type: ""
          name: root
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 1
    desiredNumberScheduled: 1
    numberAvailable: 1
    numberMisscheduled: 0
    numberReady: 1
    observedGeneration: 1
    updatedNumberScheduled: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "26"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"adservice"},"name":"adservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"adservice"}},"template":{"metadata":{"labels":{"app":"adservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"9555"}],"image":"adservice","livenessProbe":{"grpc":{"port":9555},"initialDelaySeconds":20,"periodSeconds":15},"name":"server","ports":[{"containerPort":9555}],"readinessProbe":{"grpc":{"port":9555},"initialDelaySeconds":20,"periodSeconds":15},"resources":{"limits":{"cpu":"300m","memory":"300Mi"},"requests":{"cpu":"200m","memory":"180Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"adservice","terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    generation: 26
    labels:
      app: adservice
    name: adservice
    namespace: default
    resourceVersion: "1066334"
    uid: 677490b3-a32b-4ce6-836a-eed20df96bfc
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: adservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: adservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: adservice
        serviceAccountName: adservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-20T14:09:07Z"
      lastUpdateTime: "2025-03-20T14:09:07Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-01T13:12:34Z"
      lastUpdateTime: "2025-04-09T07:15:20Z"
      message: ReplicaSet "adservice-7cd4fc8797" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 26
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "28"
      instrumentation.opentelemetry.io/inject-go: default/online-boutique-instrumentation
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"cartservice"},"name":"cartservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"cartservice"}},"template":{"metadata":{"labels":{"app":"cartservice"}},"spec":{"containers":[{"env":[{"name":"REDIS_ADDR","value":"redis-cart:6379"}],"image":"cartservice","livenessProbe":{"grpc":{"port":7070},"initialDelaySeconds":15,"periodSeconds":10},"name":"server","ports":[{"containerPort":7070}],"readinessProbe":{"grpc":{"port":7070},"initialDelaySeconds":15},"resources":{"limits":{"cpu":"300m","memory":"128Mi"},"requests":{"cpu":"200m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"cartservice","terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    generation: 29
    labels:
      app: cartservice
    name: cartservice
    namespace: default
    resourceVersion: "1066314"
    uid: 637edd15-4ac6-4335-bd26-cb57846d3337
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: cartservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: cartservice
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: cartservice
        serviceAccountName: cartservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-20T14:09:05Z"
      lastUpdateTime: "2025-03-20T14:09:05Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-01T13:16:22Z"
      lastUpdateTime: "2025-04-09T07:15:19Z"
      message: ReplicaSet "cartservice-ccd9b4798" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 29
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "29"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"checkoutservice"},"name":"checkoutservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"checkoutservice"}},"template":{"metadata":{"annotations":{"instrumentation.opentelemetry.io/inject-go":"go-instrumentation","instrumentation.opentelemetry.io/otel-go-auto-target-exe":"/src/checkoutservice"},"labels":{"app":"checkoutservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"5050"},{"name":"PRODUCT_CATALOG_SERVICE_ADDR","value":"productcatalogservice:3550"},{"name":"SHIPPING_SERVICE_ADDR","value":"shippingservice:50051"},{"name":"PAYMENT_SERVICE_ADDR","value":"paymentservice:50051"},{"name":"EMAIL_SERVICE_ADDR","value":"emailservice:5000"},{"name":"CURRENCY_SERVICE_ADDR","value":"currencyservice:7000"},{"name":"CART_SERVICE_ADDR","value":"cartservice:7070"},{"name":"OTEL_SERVICE_NAME","value":"checkoutservice"},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"service.namespace=default,service.name=checkoutservice"},{"name":"OTEL_EXPORTER_OTLP_ENDPOINT","value":"http://otel-collector-collector.observability.svc.cluster.local:4318"},{"name":"OTEL_EXPORTER_OTLP_PROTOCOL","value":"http/protobuf"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.2","livenessProbe":{"grpc":{"port":5050}},"name":"server","ports":[{"containerPort":5050}],"readinessProbe":{"grpc":{"port":5050}},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1000}}],"serviceAccountName":"checkoutservice"}}}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    generation: 29
    labels:
      app: checkoutservice
    name: checkoutservice
    namespace: default
    resourceVersion: "1065401"
    uid: af4bfc69-b3af-4dcb-969d-e6d886a056c3
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: checkoutservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/checkoutservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: checkoutservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: OTEL_SERVICE_NAME
            value: checkoutservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=checkoutservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: checkoutservice
        serviceAccountName: checkoutservice
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-20T14:08:35Z"
      lastUpdateTime: "2025-03-20T14:08:35Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-09T05:09:45Z"
      lastUpdateTime: "2025-04-09T07:11:51Z"
      message: ReplicaSet "checkoutservice-f55f7d5bd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 29
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "27"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"currencyservice"},"name":"currencyservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"currencyservice"}},"template":{"metadata":{"annotations":{"instrumentation.opentelemetry.io/inject-java":"java-instrumentation"},"labels":{"app":"currencyservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"7000"},{"name":"DISABLE_PROFILER","value":"1"},{"name":"OTEL_SERVICE_NAME","value":"productcatalogservice"},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"service.namespace=default,service.name=productcatalogservice"},{"name":"OTEL_EXPORTER_OTLP_ENDPOINT","value":"http://otel-collector-collector.observability.svc.cluster.local:4318"},{"name":"OTEL_EXPORTER_OTLP_PROTOCOL","value":"http/protobuf"}],"image":"currencyservice","livenessProbe":{"grpc":{"port":7000}},"name":"server","ports":[{"containerPort":7000,"name":"grpc"}],"readinessProbe":{"grpc":{"port":7000}},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"currencyservice","terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    generation: 27
    labels:
      app: currencyservice
    name: currencyservice
    namespace: default
    resourceVersion: "1149811"
    uid: 8ad21345-3f4b-4e22-95c4-c714130064cc
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: currencyservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: currencyservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: currencyservice
        serviceAccountName: currencyservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-04-01T13:17:55Z"
      lastUpdateTime: "2025-04-09T07:14:56Z"
      message: ReplicaSet "currencyservice-7fb54cdd8f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-04-11T06:28:39Z"
      lastUpdateTime: "2025-04-11T06:28:39Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 27
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "27"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"emailservice"},"name":"emailservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"emailservice"}},"template":{"metadata":{"annotations":{"instrumentation.opentelemetry.io/inject-python":"python-instrumentation"},"labels":{"app":"emailservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"8080"},{"name":"DISABLE_PROFILER","value":"1"},{"name":"OTEL_SERVICE_NAME","value":"emailservice"},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"service.namespace=default,service.name=emailservice"},{"name":"OTEL_EXPORTER_OTLP_ENDPOINT","value":"http://otel-collector-collector.observability.svc.cluster.local:4318"},{"name":"OTEL_EXPORTER_OTLP_PROTOCOL","value":"http/protobuf"}],"image":"emailservice","livenessProbe":{"grpc":{"port":8080},"periodSeconds":5},"name":"server","ports":[{"containerPort":8080}],"readinessProbe":{"grpc":{"port":8080},"periodSeconds":5},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"emailservice","terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    generation: 27
    labels:
      app: emailservice
    name: emailservice
    namespace: default
    resourceVersion: "1066247"
    uid: 0717bd0b-b39c-43d7-a376-7150560e24f0
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: emailservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: emailservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: emailservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=emailservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: emailservice
        serviceAccountName: emailservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-20T14:08:39Z"
      lastUpdateTime: "2025-03-20T14:08:39Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-01T13:18:45Z"
      lastUpdateTime: "2025-04-09T07:15:00Z"
      message: ReplicaSet "emailservice-d55bc9b77" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 27
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "33"
      instrumentation.opentelemetry.io/inject-nodejs: default/online-boutique-instrumentation
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"frontend"},"name":"frontend","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"frontend"}},"template":{"metadata":{"annotations":{"instrumentation.opentelemetry.io/inject-go":"go-instrumentation","instrumentation.opentelemetry.io/otel-go-auto-target-exe":"/src/server","sidecar.istio.io/rewriteAppHTTPProbers":"true"},"labels":{"app":"frontend"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"8080"},{"name":"PRODUCT_CATALOG_SERVICE_ADDR","value":"productcatalogservice:3550"},{"name":"CURRENCY_SERVICE_ADDR","value":"currencyservice:7000"},{"name":"CART_SERVICE_ADDR","value":"cartservice:7070"},{"name":"RECOMMENDATION_SERVICE_ADDR","value":"recommendationservice:8080"},{"name":"SHIPPING_SERVICE_ADDR","value":"shippingservice:50051"},{"name":"CHECKOUT_SERVICE_ADDR","value":"checkoutservice:5050"},{"name":"AD_SERVICE_ADDR","value":"adservice:9555"},{"name":"SHOPPING_ASSISTANT_SERVICE_ADDR","value":"shoppingassistantservice:80"},{"name":"OTEL_SERVICE_NAME","value":"frontend"},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"service.namespace=default,service.name=frontend"},{"name":"OTEL_EXPORTER_OTLP_ENDPOINT","value":"http://otel-collector-collector.observability.svc.cluster.local:4318"},{"name":"OTEL_EXPORTER_OTLP_PROTOCOL","value":"http/protobuf"},{"name":"ENABLE_PROFILER","value":"0"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2","livenessProbe":{"httpGet":{"httpHeaders":[{"name":"Cookie","value":"shop_session-id=x-liveness-probe"}],"path":"/_healthz","port":8080},"initialDelaySeconds":10},"name":"server","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"httpHeaders":[{"name":"Cookie","value":"shop_session-id=x-readiness-probe"}],"path":"/_healthz","port":8080},"initialDelaySeconds":10},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1000}}],"serviceAccountName":"frontend"}}}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    generation: 34
    labels:
      app: frontend
    name: frontend
    namespace: default
    resourceVersion: "1068460"
    uid: 1eab5141-6590-4208-9e3b-f101d6bc8e8d
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: frontend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: SHOPPING_ASSISTANT_SERVICE_ADDR
            value: shoppingassistantservice:80
          - name: OTEL_SERVICE_NAME
            value: frontend
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=frontend
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          - name: ENABLE_PROFILER
            value: "0"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: frontend
        serviceAccountName: frontend
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-04-09T05:04:56Z"
      lastUpdateTime: "2025-04-09T07:12:03Z"
      message: ReplicaSet "frontend-5bb785c5f6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-04-09T08:13:22Z"
      lastUpdateTime: "2025-04-09T08:13:22Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 34
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "18"
      meta.helm.sh/release-name: grafana
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-21T10:36:27Z"
    generation: 18
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 11.5.2
      helm.sh/chart: grafana-8.10.4
    name: grafana
    namespace: default
    resourceVersion: "1065515"
    uid: 2b448454-b9c5-4084-8acb-9b3831d1e7c3
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
          checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
          checksum/secret: 37823cef0be38922629597c43ea978460ec1c6439efc3654cb745e5e5fa92c80
          kubectl.kubernetes.io/default-container: grafana
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: grafana
          app.kubernetes.io/name: grafana
          app.kubernetes.io/version: 11.5.2
          helm.sh/chart: grafana-8.10.4
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                key: admin-user
                name: grafana
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: grafana
          - name: GF_PATHS_DATA
            value: /var/lib/grafana/
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          image: docker.io/grafana/grafana:11.5.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          - containerPort: 9094
            name: gossip-tcp
            protocol: TCP
          - containerPort: 9094
            name: gossip-udp
            protocol: UDP
          - containerPort: 6060
            name: profiling
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 472
          runAsGroup: 472
          runAsNonRoot: true
          runAsUser: 472
        serviceAccount: grafana
        serviceAccountName: grafana
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: grafana
          name: config
        - emptyDir: {}
          name: storage
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-21T10:36:37Z"
      lastUpdateTime: "2025-03-21T10:36:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-21T10:36:27Z"
      lastUpdateTime: "2025-04-09T07:11:55Z"
      message: ReplicaSet "grafana-757b79ffd9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 18
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "26"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"loadgenerator"},"name":"loadgenerator","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"loadgenerator"}},"template":{"metadata":{"annotations":{"sidecar.istio.io/rewriteAppHTTPProbers":"true"},"labels":{"app":"loadgenerator"}},"spec":{"containers":[{"env":[{"name":"FRONTEND_ADDR","value":"frontend:80"},{"name":"USERS","value":"10"},{"name":"RATE","value":"1"}],"image":"loadgenerator","name":"main","resources":{"limits":{"cpu":"500m","memory":"512Mi"},"requests":{"cpu":"300m","memory":"256Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"initContainers":[{"command":["/bin/sh","-exc","MAX_RETRIES=12\nRETRY_INTERVAL=10\nfor i in $(seq 1 $MAX_RETRIES); do\n  echo \"Attempt $i: Pinging frontend: ${FRONTEND_ADDR}...\"\n  STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2\u003e\u00261 | awk '/^  HTTP/{print $2}')\n  if [ $STATUSCODE -eq 200 ]; then\n      echo \"Frontend is reachable.\"\n      exit 0\n  fi\n  echo \"Error: Could not reach frontend - Status code: ${STATUSCODE}\"\n  sleep $RETRY_INTERVAL\ndone\necho \"Failed to reach frontend after $MAX_RETRIES attempts.\"\nexit 1\n"],"env":[{"name":"FRONTEND_ADDR","value":"frontend:80"}],"image":"busybox:latest","name":"frontend-check","securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"restartPolicy":"Always","securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"loadgenerator","terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    generation: 26
    labels:
      app: loadgenerator
    name: loadgenerator
    namespace: default
    resourceVersion: "1066224"
    uid: a0594ad7-cdf8-44b9-ac0a-329bbd3eb03b
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: loadgenerator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "10"
          - name: RATE
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/loadgenerator:v0.10.2
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/sh
          - -exc
          - |
            MAX_RETRIES=12
            RETRY_INTERVAL=10
            for i in $(seq 1 $MAX_RETRIES); do
              echo "Attempt $i: Pinging frontend: ${FRONTEND_ADDR}..."
              STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
              if [ $STATUSCODE -eq 200 ]; then
                  echo "Frontend is reachable."
                  exit 0
              fi
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              sleep $RETRY_INTERVAL
            done
            echo "Failed to reach frontend after $MAX_RETRIES attempts."
            exit 1
          env:
          - name: FRONTEND_ADDR
            value: frontend:80
          image: busybox:latest
          imagePullPolicy: Always
          name: frontend-check
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: loadgenerator
        serviceAccountName: loadgenerator
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-20T14:09:21Z"
      lastUpdateTime: "2025-03-20T14:09:21Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-01T13:28:57Z"
      lastUpdateTime: "2025-04-09T07:14:57Z"
      message: ReplicaSet "loadgenerator-79477896b4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 26
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "18"
      meta.helm.sh/release-name: my-nginx
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-19T05:52:22Z"
    generation: 18
    labels:
      app.kubernetes.io/instance: my-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nginx
      app.kubernetes.io/version: 1.27.4
      helm.sh/chart: nginx-19.0.2
    name: my-nginx
    namespace: default
    resourceVersion: "1065669"
    uid: bb0c1a88-98ee-4036-bbcb-6a20367317d9
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: my-nginx
        app.kubernetes.io/name: nginx
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: my-nginx
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: nginx
          app.kubernetes.io/version: 1.27.4
          helm.sh/chart: nginx-19.0.2
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-nginx
                    app.kubernetes.io/name: nginx
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: false
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: NGINX_HTTP_PORT_NUMBER
            value: "8080"
          - name: NGINX_HTTPS_PORT_NUMBER
            value: "8443"
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          name: nginx
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: empty-dir
            subPath: tmp-dir
          - mountPath: /opt/bitnami/nginx/conf
            name: empty-dir
            subPath: app-conf-dir
          - mountPath: /opt/bitnami/nginx/logs
            name: empty-dir
            subPath: app-logs-dir
          - mountPath: /opt/bitnami/nginx/tmp
            name: empty-dir
            subPath: app-tmp-dir
          - mountPath: /certs
            name: certificate
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -ec
          - |
            #!/bin/bash
            . /opt/bitnami/scripts/libfs.sh
            # We copy the logs folder because it has symlinks to stdout and stderr
            if ! is_dir_empty /opt/bitnami/nginx/logs; then
              cp -r /opt/bitnami/nginx/logs /emptydir/app-logs-dir
            fi
          command:
          - /bin/bash
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          name: preserve-logs-symlinks
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /emptydir
            name: empty-dir
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          fsGroupChangePolicy: Always
        serviceAccount: my-nginx
        serviceAccountName: my-nginx
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: empty-dir
        - name: certificate
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: server.crt
            - key: tls.key
              path: server.key
            secretName: my-nginx-tls
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-03-19T07:51:37Z"
      lastUpdateTime: "2025-03-19T07:51:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-19T05:52:22Z"
      lastUpdateTime: "2025-04-09T07:12:06Z"
      message: ReplicaSet "my-nginx-78b8c98787" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 18
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "27"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"paymentservice"},"name":"paymentservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"paymentservice"}},"template":{"metadata":{"annotations":{"instrumentation.opentelemetry.io/inject-java":"java-instrumentation"},"labels":{"app":"paymentservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"50051"},{"name":"DISABLE_PROFILER","value":"1"},{"name":"OTEL_SERVICE_NAME","value":"paymentservice"},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"service.namespace=default,service.name=paymentservice"},{"name":"OTEL_EXPORTER_OTLP_ENDPOINT","value":"http://otel-collector-collector.observability.svc.cluster.local:4318"},{"name":"OTEL_EXPORTER_OTLP_PROTOCOL","value":"http/protobuf"}],"image":"paymentservice","livenessProbe":{"grpc":{"port":50051}},"name":"server","ports":[{"containerPort":50051}],"readinessProbe":{"grpc":{"port":50051}},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"paymentservice","terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    generation: 27
    labels:
      app: paymentservice
    name: paymentservice
    namespace: default
    resourceVersion: "1145418"
    uid: 29c00a07-65ff-40de-96e7-aa52ddd39266
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: paymentservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: paymentservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: paymentservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=paymentservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: paymentservice
        serviceAccountName: paymentservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-04-01T13:29:58Z"
      lastUpdateTime: "2025-04-09T07:14:56Z"
      message: ReplicaSet "paymentservice-ddc56c685" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-04-11T03:55:43Z"
      lastUpdateTime: "2025-04-11T03:55:43Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 27
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "29"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"productcatalogservice"},"name":"productcatalogservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"productcatalogservice"}},"template":{"metadata":{"annotations":{"instrumentation.opentelemetry.io/inject-go":"go-instrumentation","instrumentation.opentelemetry.io/otel-go-auto-target-exe":"src/server"},"labels":{"app":"productcatalogservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"3550"},{"name":"DISABLE_PROFILER","value":"1"},{"name":"OTEL_SERVICE_NAME","value":"productcatalogservice"},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"service.namespace=default,service.name=productcatalogservice"},{"name":"OTEL_EXPORTER_OTLP_ENDPOINT","value":"http://otel-collector-collector.observability.svc.cluster.local:4318"},{"name":"OTEL_EXPORTER_OTLP_PROTOCOL","value":"http/protobuf"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.2","livenessProbe":{"grpc":{"port":3550}},"name":"server","ports":[{"containerPort":3550}],"readinessProbe":{"grpc":{"port":3550}},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1000}}],"serviceAccountName":"productcatalogservice","terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    generation: 29
    labels:
      app: productcatalogservice
    name: productcatalogservice
    namespace: default
    resourceVersion: "1065381"
    uid: 451bee68-4f78-4ab3-87fd-9b851750fa65
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: productcatalogservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: productcatalogservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: productcatalogservice
        serviceAccountName: productcatalogservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-20T14:08:36Z"
      lastUpdateTime: "2025-03-20T14:08:36Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-09T05:09:47Z"
      lastUpdateTime: "2025-04-09T07:11:51Z"
      message: ReplicaSet "productcatalogservice-84c7db64bf" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 29
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "18"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-19T12:13:17Z"
    generation: 18
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-5.30.0
    name: prometheus-kube-state-metrics
    namespace: default
    resourceVersion: "1065569"
    uid: d2aec666-cb44-438a-9030-2d812d713f52
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: kube-state-metrics
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/part-of: kube-state-metrics
          app.kubernetes.io/version: 2.15.0
          helm.sh/chart: kube-state-metrics-5.30.0
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: prometheus-kube-state-metrics
        serviceAccountName: prometheus-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-19T12:13:27Z"
      lastUpdateTime: "2025-03-19T12:13:27Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-19T12:13:17Z"
      lastUpdateTime: "2025-04-09T07:11:56Z"
      message: ReplicaSet "prometheus-kube-state-metrics-99577dbfd" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 18
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "18"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-19T12:13:17Z"
    generation: 18
    labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-pushgateway
      app.kubernetes.io/version: v1.11.0
      helm.sh/chart: prometheus-pushgateway-3.0.0
    name: prometheus-prometheus-pushgateway
    namespace: default
    resourceVersion: "1065610"
    uid: 9128931f-c6d9-4e3d-b004-021a46ae098e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus-pushgateway
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: prometheus-pushgateway
          app.kubernetes.io/version: v1.11.0
          helm.sh/chart: prometheus-pushgateway-3.0.0
      spec:
        automountServiceAccountToken: true
        containers:
        - image: quay.io/prometheus/pushgateway:v1.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: pushgateway
          ports:
          - containerPort: 9091
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-prometheus-pushgateway
        serviceAccountName: prometheus-prometheus-pushgateway
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: storage-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-04-09T07:12:00Z"
      lastUpdateTime: "2025-04-09T07:12:00Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-19T12:13:17Z"
      lastUpdateTime: "2025-04-09T07:12:00Z"
      message: ReplicaSet "prometheus-prometheus-pushgateway-7c759fcdf5" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 18
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "18"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-19T12:13:17Z"
    generation: 18
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: prometheus
      app.kubernetes.io/version: v3.2.1
      helm.sh/chart: prometheus-27.5.1
    name: prometheus-server
    namespace: default
    resourceVersion: "1065715"
    uid: ff5f5216-ea72-4b0c-85a9-050bc9fbbdfd
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/name: prometheus
          app.kubernetes.io/part-of: prometheus
          app.kubernetes.io/version: v3.2.1
          helm.sh/chart: prometheus-27.5.1
      spec:
        containers:
        - args:
          - --watched-dir=/etc/config
          - --listen-address=0.0.0.0:8080
          - --reload-url=http://127.0.0.1:9090/-/reload
          image: quay.io/prometheus-operator/prometheus-config-reloader:v0.80.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-server-configmap-reload
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
            readOnly: true
        - args:
          - --storage.tsdb.retention.time=15d
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          image: quay.io/prometheus/prometheus:v3.2.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          name: prometheus-server
          ports:
          - containerPort: 9090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 4
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-server
        serviceAccountName: prometheus-server
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-server
          name: config-volume
        - name: storage-volume
          persistentVolumeClaim:
            claimName: prometheus-server
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-04-09T07:12:21Z"
      lastUpdateTime: "2025-04-09T07:12:21Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-19T12:13:17Z"
      lastUpdateTime: "2025-04-09T07:12:21Z"
      message: ReplicaSet "prometheus-server-65745bcbd4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 18
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "28"
      instrumentation.opentelemetry.io/inject-python: default/online-boutique-instrumentation
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"recommendationservice"},"name":"recommendationservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"recommendationservice"}},"template":{"metadata":{"annotations":{"instrumentation.opentelemetry.io/inject-python":"python-instrumentation"},"labels":{"app":"recommendationservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"8080"},{"name":"PRODUCT_CATALOG_SERVICE_ADDR","value":"productcatalogservice:3550"},{"name":"DISABLE_PROFILER","value":"1"},{"name":"OTEL_SERVICE_NAME","value":"recommendationservice"},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"service.namespace=default,service.name=recommendationservice"},{"name":"OTEL_EXPORTER_OTLP_ENDPOINT","value":"http://otel-collector-collector.observability.svc.cluster.local:4318"},{"name":"OTEL_EXPORTER_OTLP_PROTOCOL","value":"http/protobuf"}],"image":"recommendationservice","livenessProbe":{"grpc":{"port":8080},"periodSeconds":5},"name":"server","ports":[{"containerPort":8080}],"readinessProbe":{"grpc":{"port":8080},"periodSeconds":5},"resources":{"limits":{"cpu":"200m","memory":"450Mi"},"requests":{"cpu":"100m","memory":"220Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"recommendationservice","terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    generation: 29
    labels:
      app: recommendationservice
    name: recommendationservice
    namespace: default
    resourceVersion: "1066268"
    uid: 7e8a9ef7-9627-4db3-b7bf-2243878b79e8
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: recommendationservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: recommendationservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: recommendationservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=recommendationservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: recommendationservice
        serviceAccountName: recommendationservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-20T14:08:40Z"
      lastUpdateTime: "2025-03-20T14:08:40Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-01T13:31:16Z"
      lastUpdateTime: "2025-04-09T07:15:01Z"
      message: ReplicaSet "recommendationservice-777fc67b6c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 29
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "18"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"redis-cart"},"name":"redis-cart","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"redis-cart"}},"template":{"metadata":{"labels":{"app":"redis-cart"}},"spec":{"containers":[{"image":"redis:alpine","livenessProbe":{"periodSeconds":5,"tcpSocket":{"port":6379}},"name":"redis","ports":[{"containerPort":6379}],"readinessProbe":{"periodSeconds":5,"tcpSocket":{"port":6379}},"resources":{"limits":{"cpu":"125m","memory":"256Mi"},"requests":{"cpu":"70m","memory":"200Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true},"volumeMounts":[{"mountPath":"/data","name":"redis-data"}]}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"volumes":[{"emptyDir":{},"name":"redis-data"}]}}}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    generation: 18
    labels:
      app: redis-cart
    name: redis-cart
    namespace: default
    resourceVersion: "1065457"
    uid: 9607539f-c373-4aac-be3c-20e28441565e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: redis-cart
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: redis-cart
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-20T14:08:37Z"
      lastUpdateTime: "2025-03-20T14:08:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-20T14:08:35Z"
      lastUpdateTime: "2025-04-09T07:11:53Z"
      message: ReplicaSet "redis-cart-5db848f98b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 18
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "29"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"shippingservice"},"name":"shippingservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"shippingservice"}},"template":{"metadata":{"annotations":{"instrumentation.opentelemetry.io/inject-go":"go-instrumentation","instrumentation.opentelemetry.io/otel-go-auto-target-exe":"/src/shippingservice"},"labels":{"app":"shippingservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"50051"},{"name":"DISABLE_PROFILER","value":"1"},{"name":"OTEL_SERVICE_NAME","value":"shippingservice"},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"service.namespace=default,service.name=shippingservice"},{"name":"OTEL_EXPORTER_OTLP_ENDPOINT","value":"http://otel-collector-collector.observability.svc.cluster.local:4318"},{"name":"OTEL_EXPORTER_OTLP_PROTOCOL","value":"http/protobuf"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.2","livenessProbe":{"grpc":{"port":50051}},"name":"server","ports":[{"containerPort":50051}],"readinessProbe":{"grpc":{"port":50051},"periodSeconds":5},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1000}}],"serviceAccountName":"shippingservice"}}}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    generation: 29
    labels:
      app: shippingservice
    name: shippingservice
    namespace: default
    resourceVersion: "1065313"
    uid: a8562913-c651-48d6-8155-51416caedb4e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: shippingservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/shippingservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: shippingservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: shippingservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=shippingservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: shippingservice
        serviceAccountName: shippingservice
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-20T14:08:41Z"
      lastUpdateTime: "2025-03-20T14:08:41Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-09T05:09:48Z"
      lastUpdateTime: "2025-04-09T07:11:49Z"
      message: ReplicaSet "shippingservice-7bb6954db6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 29
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "25"
    creationTimestamp: "2025-04-09T07:11:40Z"
    generation: 3
    labels:
      app: adservice
      pod-template-hash: 548cdb84f
    name: adservice-548cdb84f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adservice
      uid: 677490b3-a32b-4ce6-836a-eed20df96bfc
    resourceVersion: "1065935"
    uid: 1b8132b6-909f-40c9-9c7f-5c7a061b5424
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adservice
        pod-template-hash: 548cdb84f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: adservice
          pod-template-hash: 548cdb84f
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          image: adservice
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: adservice
        serviceAccountName: adservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "16"
    creationTimestamp: "2025-04-08T17:02:51Z"
    generation: 2
    labels:
      app: adservice
      pod-template-hash: 54c4447879
    name: adservice-54c4447879
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adservice
      uid: 677490b3-a32b-4ce6-836a-eed20df96bfc
    resourceVersion: "1032120"
    uid: cd6b40b4-47c0-42cd-b73a-a02e9b4d3d41
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adservice
        pod-template-hash: 54c4447879
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:02:51Z"
        creationTimestamp: null
        labels:
          app: adservice
          pod-template-hash: 54c4447879
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: adservice
        serviceAccountName: adservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "18"
    creationTimestamp: "2025-04-08T17:39:20Z"
    generation: 2
    labels:
      app: adservice
      pod-template-hash: 55d57fcbd9
    name: adservice-55d57fcbd9
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adservice
      uid: 677490b3-a32b-4ce6-836a-eed20df96bfc
    resourceVersion: "1034699"
    uid: 51b8e922-8d0d-40bd-8327-3302c1b201b5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adservice
        pod-template-hash: 55d57fcbd9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:39:20Z"
        creationTimestamp: null
        labels:
          app: adservice
          pod-template-hash: 55d57fcbd9
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: adservice
        serviceAccountName: adservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "20"
    creationTimestamp: "2025-04-09T03:46:05Z"
    generation: 2
    labels:
      app: adservice
      pod-template-hash: 5676c8c7dd
    name: adservice-5676c8c7dd
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adservice
      uid: 677490b3-a32b-4ce6-836a-eed20df96bfc
    resourceVersion: "1057969"
    uid: 97e78ab7-4117-4b1e-9d55-da62e802dbd0
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adservice
        pod-template-hash: 5676c8c7dd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T03:46:05Z"
        creationTimestamp: null
        labels:
          app: adservice
          pod-template-hash: 5676c8c7dd
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: adservice
        serviceAccountName: adservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "23"
    creationTimestamp: "2025-04-09T05:22:42Z"
    generation: 2
    labels:
      app: adservice
      pod-template-hash: 68679d8587
    name: adservice-68679d8587
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adservice
      uid: 677490b3-a32b-4ce6-836a-eed20df96bfc
    resourceVersion: "1066333"
    uid: f9b3bcd2-6ad1-494d-8293-6b76c1294590
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adservice
        pod-template-hash: 68679d8587
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app: adservice
          pod-template-hash: 68679d8587
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: adservice
        serviceAccountName: adservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
    creationTimestamp: "2025-04-09T05:14:45Z"
    generation: 2
    labels:
      app: adservice
      pod-template-hash: 6bc9d48445
    name: adservice-6bc9d48445
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adservice
      uid: 677490b3-a32b-4ce6-836a-eed20df96bfc
    resourceVersion: "1060356"
    uid: 760f2bbd-dfbf-48fd-9915-61f0f9a9bb25
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adservice
        pod-template-hash: 6bc9d48445
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
        creationTimestamp: null
        labels:
          app: adservice
          pod-template-hash: 6bc9d48445
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: adservice
        serviceAccountName: adservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
    creationTimestamp: "2025-04-09T05:09:45Z"
    generation: 2
    labels:
      app: adservice
      pod-template-hash: 78f5b5b475
    name: adservice-78f5b5b475
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adservice
      uid: 677490b3-a32b-4ce6-836a-eed20df96bfc
    resourceVersion: "1059066"
    uid: e7ab41e4-7ae8-4b8b-882f-de2e3280b281
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adservice
        pod-template-hash: 78f5b5b475
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
        creationTimestamp: null
        labels:
          app: adservice
          pod-template-hash: 78f5b5b475
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: adservice
        serviceAccountName: adservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "24"
    creationTimestamp: "2025-04-09T07:11:02Z"
    generation: 2
    labels:
      app: adservice
      pod-template-hash: 7bdd854f67
    name: adservice-7bdd854f67
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adservice
      uid: 677490b3-a32b-4ce6-836a-eed20df96bfc
    resourceVersion: "1064962"
    uid: 1fda2c3a-92d5-46ca-891d-58bff4d3a299
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adservice
        pod-template-hash: 7bdd854f67
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app: adservice
          pod-template-hash: 7bdd854f67
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          image: adservice
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: adservice
        serviceAccountName: adservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "19"
    creationTimestamp: "2025-04-08T17:47:53Z"
    generation: 2
    labels:
      app: adservice
      pod-template-hash: 7c946b6b8b
    name: adservice-7c946b6b8b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adservice
      uid: 677490b3-a32b-4ce6-836a-eed20df96bfc
    resourceVersion: "1054311"
    uid: 76e4760e-7d85-4c40-bed4-0a6bfc9ca455
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adservice
        pod-template-hash: 7c946b6b8b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:47:53Z"
        creationTimestamp: null
        labels:
          app: adservice
          pod-template-hash: 7c946b6b8b
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: adservice
        serviceAccountName: adservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "26"
    creationTimestamp: "2025-04-09T07:14:47Z"
    generation: 2
    labels:
      app: adservice
      pod-template-hash: 7cd4fc8797
    name: adservice-7cd4fc8797
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adservice
      uid: 677490b3-a32b-4ce6-836a-eed20df96bfc
    resourceVersion: "1066318"
    uid: 6f4354fc-00e3-48ec-bede-3029b8258409
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: adservice
        pod-template-hash: 7cd4fc8797
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: adservice
          pod-template-hash: 7cd4fc8797
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: adservice
        serviceAccountName: adservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "17"
    creationTimestamp: "2025-04-08T17:26:54Z"
    generation: 2
    labels:
      app: adservice
      pod-template-hash: bf6df99f6
    name: adservice-bf6df99f6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: adservice
      uid: 677490b3-a32b-4ce6-836a-eed20df96bfc
    resourceVersion: "1033583"
    uid: f1936b25-3fc8-4d00-9022-af9f0f8af805
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: adservice
        pod-template-hash: bf6df99f6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:26:54Z"
        creationTimestamp: null
        labels:
          app: adservice
          pod-template-hash: bf6df99f6
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: adservice
        serviceAccountName: adservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "27"
      instrumentation.opentelemetry.io/inject-go: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T07:11:40Z"
    generation: 3
    labels:
      app: cartservice
      pod-template-hash: 5457b6bd4
    name: cartservice-5457b6bd4
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cartservice
      uid: 637edd15-4ac6-4335-bd26-cb57846d3337
    resourceVersion: "1065961"
    uid: bd1b8d00-5c3e-49dd-b871-012f07b01f3f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: cartservice
        pod-template-hash: 5457b6bd4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: cartservice
          pod-template-hash: 5457b6bd4
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          image: cartservice
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: cartservice
        serviceAccountName: cartservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
      instrumentation.opentelemetry.io/inject-go: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T03:46:05Z"
    generation: 2
    labels:
      app: cartservice
      pod-template-hash: 5467dbdb4c
    name: cartservice-5467dbdb4c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cartservice
      uid: 637edd15-4ac6-4335-bd26-cb57846d3337
    resourceVersion: "1057946"
    uid: 44fdce93-27fb-4df1-afa9-9290076db03e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: cartservice
        pod-template-hash: 5467dbdb4c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T03:46:05Z"
        creationTimestamp: null
        labels:
          app: cartservice
          pod-template-hash: 5467dbdb4c
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: cartservice
        serviceAccountName: cartservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
      instrumentation.opentelemetry.io/inject-go: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-08T17:47:53Z"
    generation: 2
    labels:
      app: cartservice
      pod-template-hash: 5f984b7477
    name: cartservice-5f984b7477
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cartservice
      uid: 637edd15-4ac6-4335-bd26-cb57846d3337
    resourceVersion: "1054290"
    uid: c5314469-86ba-4320-ba2d-66bcd07e31a5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: cartservice
        pod-template-hash: 5f984b7477
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:47:53Z"
        creationTimestamp: null
        labels:
          app: cartservice
          pod-template-hash: 5f984b7477
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: cartservice
        serviceAccountName: cartservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "18"
      instrumentation.opentelemetry.io/inject-go: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-08T17:02:51Z"
    generation: 2
    labels:
      app: cartservice
      pod-template-hash: 6c664cdd4d
    name: cartservice-6c664cdd4d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cartservice
      uid: 637edd15-4ac6-4335-bd26-cb57846d3337
    resourceVersion: "1032101"
    uid: d50611de-d61c-4d8e-8ade-75501b6b1ca0
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: cartservice
        pod-template-hash: 6c664cdd4d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:02:51Z"
        creationTimestamp: null
        labels:
          app: cartservice
          pod-template-hash: 6c664cdd4d
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: cartservice
        serviceAccountName: cartservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "23"
      instrumentation.opentelemetry.io/inject-go: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T05:09:45Z"
    generation: 2
    labels:
      app: cartservice
      pod-template-hash: 6d9d8444c6
    name: cartservice-6d9d8444c6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cartservice
      uid: 637edd15-4ac6-4335-bd26-cb57846d3337
    resourceVersion: "1059047"
    uid: 6cb5f98d-75be-4263-a62c-deb4d49970dd
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: cartservice
        pod-template-hash: 6d9d8444c6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
        creationTimestamp: null
        labels:
          app: cartservice
          pod-template-hash: 6d9d8444c6
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: cartservice
        serviceAccountName: cartservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "20"
      instrumentation.opentelemetry.io/inject-go: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-08T17:39:20Z"
    generation: 2
    labels:
      app: cartservice
      pod-template-hash: 6f68b68566
    name: cartservice-6f68b68566
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cartservice
      uid: 637edd15-4ac6-4335-bd26-cb57846d3337
    resourceVersion: "1034681"
    uid: 1e88cc73-c97c-41eb-82d8-b2620b51e607
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: cartservice
        pod-template-hash: 6f68b68566
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:39:20Z"
        creationTimestamp: null
        labels:
          app: cartservice
          pod-template-hash: 6f68b68566
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: cartservice
        serviceAccountName: cartservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "26"
      instrumentation.opentelemetry.io/inject-go: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T07:11:03Z"
    generation: 2
    labels:
      app: cartservice
      pod-template-hash: 7d896988b6
    name: cartservice-7d896988b6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cartservice
      uid: 637edd15-4ac6-4335-bd26-cb57846d3337
    resourceVersion: "1064963"
    uid: dd336069-1149-4ee2-ba3b-db981718b678
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: cartservice
        pod-template-hash: 7d896988b6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app: cartservice
          pod-template-hash: 7d896988b6
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          image: cartservice
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: cartservice
        serviceAccountName: cartservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "25"
      instrumentation.opentelemetry.io/inject-go: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T05:22:42Z"
    generation: 2
    labels:
      app: cartservice
      pod-template-hash: 7fdb7d7ffb
    name: cartservice-7fdb7d7ffb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cartservice
      uid: 637edd15-4ac6-4335-bd26-cb57846d3337
    resourceVersion: "1066313"
    uid: bbbaf128-47f0-43af-bb93-e79ebe6bb5ed
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: cartservice
        pod-template-hash: 7fdb7d7ffb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app: cartservice
          pod-template-hash: 7fdb7d7ffb
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: cartservice
        serviceAccountName: cartservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "19"
      instrumentation.opentelemetry.io/inject-go: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-08T17:26:54Z"
    generation: 2
    labels:
      app: cartservice
      pod-template-hash: 869f97bdbc
    name: cartservice-869f97bdbc
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cartservice
      uid: 637edd15-4ac6-4335-bd26-cb57846d3337
    resourceVersion: "1033562"
    uid: 71f8f363-3031-4242-b42b-b1f6151ebbd8
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: cartservice
        pod-template-hash: 869f97bdbc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:26:54Z"
        creationTimestamp: null
        labels:
          app: cartservice
          pod-template-hash: 869f97bdbc
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: cartservice
        serviceAccountName: cartservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "24"
      instrumentation.opentelemetry.io/inject-go: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T05:14:45Z"
    generation: 2
    labels:
      app: cartservice
      pod-template-hash: 9856996c8
    name: cartservice-9856996c8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cartservice
      uid: 637edd15-4ac6-4335-bd26-cb57846d3337
    resourceVersion: "1060335"
    uid: e2494d76-980f-40d8-8640-b6b1fa15e12b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: cartservice
        pod-template-hash: 9856996c8
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
        creationTimestamp: null
        labels:
          app: cartservice
          pod-template-hash: 9856996c8
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: cartservice
        serviceAccountName: cartservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "28"
      instrumentation.opentelemetry.io/inject-go: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T07:14:47Z"
    generation: 2
    labels:
      app: cartservice
      pod-template-hash: ccd9b4798
    name: cartservice-ccd9b4798
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cartservice
      uid: 637edd15-4ac6-4335-bd26-cb57846d3337
    resourceVersion: "1066302"
    uid: deac84d3-5d50-49ad-9865-4b515a54f576
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: cartservice
        pod-template-hash: ccd9b4798
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: cartservice
          pod-template-hash: ccd9b4798
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: cartservice
        serviceAccountName: cartservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
    creationTimestamp: "2025-04-08T17:47:53Z"
    generation: 3
    labels:
      app: checkoutservice
      pod-template-hash: 5bf5464dc4
    name: checkoutservice-5bf5464dc4
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: checkoutservice
      uid: af4bfc69-b3af-4dcb-969d-e6d886a056c3
    resourceVersion: "1053615"
    uid: b077ebfe-830a-4f42-8324-8cb5838280e3
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: checkoutservice
        pod-template-hash: 5bf5464dc4
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/checkoutservice
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:47:53Z"
        creationTimestamp: null
        labels:
          app: checkoutservice
          pod-template-hash: 5bf5464dc4
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: OTEL_SERVICE_NAME
            value: checkoutservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=checkoutservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: checkoutservice
        serviceAccountName: checkoutservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "25"
    creationTimestamp: "2025-04-09T05:14:45Z"
    generation: 3
    labels:
      app: checkoutservice
      pod-template-hash: 5fd4fc6645
    name: checkoutservice-5fd4fc6645
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: checkoutservice
      uid: af4bfc69-b3af-4dcb-969d-e6d886a056c3
    resourceVersion: "1059365"
    uid: 9023dd62-64bd-4dc9-88a6-d80629687994
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: checkoutservice
        pod-template-hash: 5fd4fc6645
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/checkoutservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
        creationTimestamp: null
        labels:
          app: checkoutservice
          pod-template-hash: 5fd4fc6645
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: OTEL_SERVICE_NAME
            value: checkoutservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=checkoutservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: checkoutservice
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: checkoutservice
        serviceAccountName: checkoutservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "19"
    creationTimestamp: "2025-04-08T17:26:54Z"
    generation: 3
    labels:
      app: checkoutservice
      pod-template-hash: 6797f8f88d
    name: checkoutservice-6797f8f88d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: checkoutservice
      uid: af4bfc69-b3af-4dcb-969d-e6d886a056c3
    resourceVersion: "1032909"
    uid: 4e2e21a8-373e-4ffe-8f31-c92c26389d71
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: checkoutservice
        pod-template-hash: 6797f8f88d
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/checkoutservice
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:26:54Z"
        creationTimestamp: null
        labels:
          app: checkoutservice
          pod-template-hash: 6797f8f88d
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: OTEL_SERVICE_NAME
            value: checkoutservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=checkoutservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: checkoutservice
        serviceAccountName: checkoutservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "28"
    creationTimestamp: "2025-04-09T07:11:04Z"
    generation: 2
    labels:
      app: checkoutservice
      pod-template-hash: 6cc885fbd6
    name: checkoutservice-6cc885fbd6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: checkoutservice
      uid: af4bfc69-b3af-4dcb-969d-e6d886a056c3
    resourceVersion: "1065398"
    uid: 6d044740-812f-4408-b61f-2217c7e831b6
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: checkoutservice
        pod-template-hash: 6cc885fbd6
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/checkoutservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app: checkoutservice
          pod-template-hash: 6cc885fbd6
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: OTEL_SERVICE_NAME
            value: checkoutservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=checkoutservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: checkoutservice
        serviceAccountName: checkoutservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "26"
    creationTimestamp: "2025-04-09T05:22:23Z"
    generation: 3
    labels:
      app: checkoutservice
      pod-template-hash: 789b7fc6ff
    name: checkoutservice-789b7fc6ff
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: checkoutservice
      uid: af4bfc69-b3af-4dcb-969d-e6d886a056c3
    resourceVersion: "1059871"
    uid: fe264b09-5cd8-40a3-81b3-125e53ab7b78
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: checkoutservice
        pod-template-hash: 789b7fc6ff
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/checkoutservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
        creationTimestamp: null
        labels:
          app: checkoutservice
          pod-template-hash: 789b7fc6ff
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: OTEL_SERVICE_NAME
            value: checkoutservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=checkoutservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: checkoutservice
        serviceAccountName: checkoutservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "24"
    creationTimestamp: "2025-04-09T05:14:23Z"
    generation: 3
    labels:
      app: checkoutservice
      pod-template-hash: 7c7585d47
    name: checkoutservice-7c7585d47
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: checkoutservice
      uid: af4bfc69-b3af-4dcb-969d-e6d886a056c3
    resourceVersion: "1058351"
    uid: 41f75986-e59c-4cb0-a880-eb7734742bba
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: checkoutservice
        pod-template-hash: 7c7585d47
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/checkoutservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
        creationTimestamp: null
        labels:
          app: checkoutservice
          pod-template-hash: 7c7585d47
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: OTEL_SERVICE_NAME
            value: checkoutservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=checkoutservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: checkoutservice
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: checkoutservice
        serviceAccountName: checkoutservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
    creationTimestamp: "2025-04-09T03:46:05Z"
    generation: 3
    labels:
      app: checkoutservice
      pod-template-hash: 7cc65566cb
    name: checkoutservice-7cc65566cb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: checkoutservice
      uid: af4bfc69-b3af-4dcb-969d-e6d886a056c3
    resourceVersion: "1057263"
    uid: b1acc509-cbce-47b3-a30b-909884327c9f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: checkoutservice
        pod-template-hash: 7cc65566cb
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/checkoutservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T03:46:05Z"
        creationTimestamp: null
        labels:
          app: checkoutservice
          pod-template-hash: 7cc65566cb
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: OTEL_SERVICE_NAME
            value: checkoutservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=checkoutservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: checkoutservice
        serviceAccountName: checkoutservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "23"
    creationTimestamp: "2025-04-09T05:09:45Z"
    generation: 3
    labels:
      app: checkoutservice
      pod-template-hash: 7d5fc788b7
    name: checkoutservice-7d5fc788b7
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: checkoutservice
      uid: af4bfc69-b3af-4dcb-969d-e6d886a056c3
    resourceVersion: "1058143"
    uid: 8039c31b-eb6f-4752-bed0-e5656866036a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: checkoutservice
        pod-template-hash: 7d5fc788b7
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/checkoutservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
        creationTimestamp: null
        labels:
          app: checkoutservice
          pod-template-hash: 7d5fc788b7
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: OTEL_SERVICE_NAME
            value: checkoutservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=checkoutservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: checkoutservice
        serviceAccountName: checkoutservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "27"
    creationTimestamp: "2025-04-09T05:22:42Z"
    generation: 2
    labels:
      app: checkoutservice
      pod-template-hash: 86b78c5cd5
    name: checkoutservice-86b78c5cd5
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: checkoutservice
      uid: af4bfc69-b3af-4dcb-969d-e6d886a056c3
    resourceVersion: "1064806"
    uid: 5c491bd8-863f-45b8-b2c3-076ff5b99e17
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: checkoutservice
        pod-template-hash: 86b78c5cd5
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/checkoutservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app: checkoutservice
          pod-template-hash: 86b78c5cd5
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: OTEL_SERVICE_NAME
            value: checkoutservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=checkoutservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: checkoutservice
        serviceAccountName: checkoutservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "20"
    creationTimestamp: "2025-04-08T17:39:20Z"
    generation: 3
    labels:
      app: checkoutservice
      pod-template-hash: df55d87b5
    name: checkoutservice-df55d87b5
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: checkoutservice
      uid: af4bfc69-b3af-4dcb-969d-e6d886a056c3
    resourceVersion: "1033983"
    uid: bdc75809-750d-4423-b15f-1879d1923202
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: checkoutservice
        pod-template-hash: df55d87b5
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/checkoutservice
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:39:20Z"
        creationTimestamp: null
        labels:
          app: checkoutservice
          pod-template-hash: df55d87b5
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: OTEL_SERVICE_NAME
            value: checkoutservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=checkoutservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: checkoutservice
        serviceAccountName: checkoutservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "29"
    creationTimestamp: "2025-04-09T07:11:40Z"
    generation: 1
    labels:
      app: checkoutservice
      pod-template-hash: f55f7d5bd
    name: checkoutservice-f55f7d5bd
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: checkoutservice
      uid: af4bfc69-b3af-4dcb-969d-e6d886a056c3
    resourceVersion: "1065363"
    uid: e204c5ae-e705-4ce3-ae09-5ee9ad9c6456
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: checkoutservice
        pod-template-hash: f55f7d5bd
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/checkoutservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: checkoutservice
          pod-template-hash: f55f7d5bd
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: OTEL_SERVICE_NAME
            value: checkoutservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=checkoutservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: checkoutservice
        serviceAccountName: checkoutservice
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "26"
    creationTimestamp: "2025-04-09T07:11:40Z"
    generation: 3
    labels:
      app: currencyservice
      pod-template-hash: 5456bfc9c5
    name: currencyservice-5456bfc9c5
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: currencyservice
      uid: 8ad21345-3f4b-4e22-95c4-c714130064cc
    resourceVersion: "1066001"
    uid: 0276bdd5-d483-43fd-86a5-25d964cc8a5c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: currencyservice
        pod-template-hash: 5456bfc9c5
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: currencyservice
          pod-template-hash: 5456bfc9c5
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: currencyservice
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: currencyservice
        serviceAccountName: currencyservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "20"
    creationTimestamp: "2025-04-08T17:47:53Z"
    generation: 2
    labels:
      app: currencyservice
      pod-template-hash: 54d79d5bdc
    name: currencyservice-54d79d5bdc
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: currencyservice
      uid: 8ad21345-3f4b-4e22-95c4-c714130064cc
    resourceVersion: "1054019"
    uid: 4083a7f8-48ec-4894-ac18-0116df658770
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: currencyservice
        pod-template-hash: 54d79d5bdc
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:47:53Z"
        creationTimestamp: null
        labels:
          app: currencyservice
          pod-template-hash: 54d79d5bdc
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: currencyservice
        serviceAccountName: currencyservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
    creationTimestamp: "2025-04-09T05:09:45Z"
    generation: 2
    labels:
      app: currencyservice
      pod-template-hash: 5dc99998db
    name: currencyservice-5dc99998db
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: currencyservice
      uid: 8ad21345-3f4b-4e22-95c4-c714130064cc
    resourceVersion: "1058692"
    uid: 78f3f676-69ef-4f66-a9ff-d404ff87a74e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: currencyservice
        pod-template-hash: 5dc99998db
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
        creationTimestamp: null
        labels:
          app: currencyservice
          pod-template-hash: 5dc99998db
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: currencyservice
        serviceAccountName: currencyservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "17"
    creationTimestamp: "2025-04-08T17:02:51Z"
    generation: 2
    labels:
      app: currencyservice
      pod-template-hash: 656df94b6
    name: currencyservice-656df94b6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: currencyservice
      uid: 8ad21345-3f4b-4e22-95c4-c714130064cc
    resourceVersion: "1031842"
    uid: f140b513-3581-4f1d-b3a3-3a77bac6c099
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: currencyservice
        pod-template-hash: 656df94b6
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:02:51Z"
        creationTimestamp: null
        labels:
          app: currencyservice
          pod-template-hash: 656df94b6
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: currencyservice
        serviceAccountName: currencyservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "19"
    creationTimestamp: "2025-04-08T17:39:20Z"
    generation: 2
    labels:
      app: currencyservice
      pod-template-hash: 686ffb7c68
    name: currencyservice-686ffb7c68
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: currencyservice
      uid: 8ad21345-3f4b-4e22-95c4-c714130064cc
    resourceVersion: "1034472"
    uid: e75304b2-7348-4b64-be71-0940439a4645
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: currencyservice
        pod-template-hash: 686ffb7c68
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:39:20Z"
        creationTimestamp: null
        labels:
          app: currencyservice
          pod-template-hash: 686ffb7c68
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: currencyservice
        serviceAccountName: currencyservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "25"
    creationTimestamp: "2025-04-09T07:11:04Z"
    generation: 2
    labels:
      app: currencyservice
      pod-template-hash: 7cf449488f
    name: currencyservice-7cf449488f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: currencyservice
      uid: 8ad21345-3f4b-4e22-95c4-c714130064cc
    resourceVersion: "1065004"
    uid: 50704258-a6be-4696-851c-c6eaef98b014
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: currencyservice
        pod-template-hash: 7cf449488f
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app: currencyservice
          pod-template-hash: 7cf449488f
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: currencyservice
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: currencyservice
        serviceAccountName: currencyservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "27"
    creationTimestamp: "2025-04-09T07:14:47Z"
    generation: 2
    labels:
      app: currencyservice
      pod-template-hash: 7fb54cdd8f
    name: currencyservice-7fb54cdd8f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: currencyservice
      uid: 8ad21345-3f4b-4e22-95c4-c714130064cc
    resourceVersion: "1149808"
    uid: 4d3dd37e-f4af-4a23-8c97-e80cf2dc5c42
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: currencyservice
        pod-template-hash: 7fb54cdd8f
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: currencyservice
          pod-template-hash: 7fb54cdd8f
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: currencyservice
        serviceAccountName: currencyservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
    creationTimestamp: "2025-04-09T03:46:05Z"
    generation: 2
    labels:
      app: currencyservice
      pod-template-hash: b4f4cf549
    name: currencyservice-b4f4cf549
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: currencyservice
      uid: 8ad21345-3f4b-4e22-95c4-c714130064cc
    resourceVersion: "1057589"
    uid: 4427c55d-fb7c-4ebd-afca-2f1825e31e67
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: currencyservice
        pod-template-hash: b4f4cf549
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T03:46:05Z"
        creationTimestamp: null
        labels:
          app: currencyservice
          pod-template-hash: b4f4cf549
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: currencyservice
        serviceAccountName: currencyservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "23"
    creationTimestamp: "2025-04-09T05:14:46Z"
    generation: 2
    labels:
      app: currencyservice
      pod-template-hash: bfcdd544d
    name: currencyservice-bfcdd544d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: currencyservice
      uid: 8ad21345-3f4b-4e22-95c4-c714130064cc
    resourceVersion: "1059924"
    uid: da1a7d04-0b09-4060-9a04-c5c92a39e8cf
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: currencyservice
        pod-template-hash: bfcdd544d
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
        creationTimestamp: null
        labels:
          app: currencyservice
          pod-template-hash: bfcdd544d
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: currencyservice
        serviceAccountName: currencyservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "18"
    creationTimestamp: "2025-04-08T17:26:54Z"
    generation: 2
    labels:
      app: currencyservice
      pod-template-hash: cf4b6bcf7
    name: currencyservice-cf4b6bcf7
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: currencyservice
      uid: 8ad21345-3f4b-4e22-95c4-c714130064cc
    resourceVersion: "1033276"
    uid: a79e6caf-0608-4828-a138-d29fbf115128
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: currencyservice
        pod-template-hash: cf4b6bcf7
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:26:54Z"
        creationTimestamp: null
        labels:
          app: currencyservice
          pod-template-hash: cf4b6bcf7
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: currencyservice
        serviceAccountName: currencyservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "24"
    creationTimestamp: "2025-04-09T05:22:43Z"
    generation: 2
    labels:
      app: currencyservice
      pod-template-hash: d4445d76b
    name: currencyservice-d4445d76b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: currencyservice
      uid: 8ad21345-3f4b-4e22-95c4-c714130064cc
    resourceVersion: "1066204"
    uid: df1fe003-1acf-4c32-a304-a52720a13c6f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: currencyservice
        pod-template-hash: d4445d76b
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app: currencyservice
          pod-template-hash: d4445d76b
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: currencyservice
        serviceAccountName: currencyservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "25"
    creationTimestamp: "2025-04-09T07:11:05Z"
    generation: 2
    labels:
      app: emailservice
      pod-template-hash: 549b87f55c
    name: emailservice-549b87f55c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: 0717bd0b-b39c-43d7-a376-7150560e24f0
    resourceVersion: "1065030"
    uid: 616cbbf0-8daa-4406-b99a-4d84b824a4e2
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: 549b87f55c
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: 549b87f55c
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: emailservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=emailservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: emailservice
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: emailservice
        serviceAccountName: emailservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "26"
    creationTimestamp: "2025-04-09T07:11:40Z"
    generation: 3
    labels:
      app: emailservice
      pod-template-hash: 64f7645447
    name: emailservice-64f7645447
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: 0717bd0b-b39c-43d7-a376-7150560e24f0
    resourceVersion: "1066030"
    uid: 58ba0fc1-37d9-4b49-b5b4-25fee2573aec
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: 64f7645447
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: 64f7645447
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: emailservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=emailservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: emailservice
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: emailservice
        serviceAccountName: emailservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "19"
    creationTimestamp: "2025-04-08T17:39:21Z"
    generation: 2
    labels:
      app: emailservice
      pod-template-hash: 668d484864
    name: emailservice-668d484864
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: 0717bd0b-b39c-43d7-a376-7150560e24f0
    resourceVersion: "1034450"
    uid: eb2e6a9d-80aa-4f5d-ad0f-eb6c56976579
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: 668d484864
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:39:20Z"
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: 668d484864
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: emailservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=emailservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: emailservice
        serviceAccountName: emailservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "20"
    creationTimestamp: "2025-04-08T17:47:53Z"
    generation: 2
    labels:
      app: emailservice
      pod-template-hash: 74b7768fb5
    name: emailservice-74b7768fb5
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: 0717bd0b-b39c-43d7-a376-7150560e24f0
    resourceVersion: "1054066"
    uid: 20db34eb-9a04-4c06-ae69-db75b48ba639
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: 74b7768fb5
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:47:53Z"
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: 74b7768fb5
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: emailservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=emailservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: emailservice
        serviceAccountName: emailservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "24"
    creationTimestamp: "2025-04-09T05:22:43Z"
    generation: 2
    labels:
      app: emailservice
      pod-template-hash: 76ff895f46
    name: emailservice-76ff895f46
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: 0717bd0b-b39c-43d7-a376-7150560e24f0
    resourceVersion: "1066245"
    uid: 0cb3adbc-3883-4c1a-8fae-73b99c28c3f8
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: 76ff895f46
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: 76ff895f46
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: emailservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=emailservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: emailservice
        serviceAccountName: emailservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "23"
    creationTimestamp: "2025-04-09T05:14:46Z"
    generation: 2
    labels:
      app: emailservice
      pod-template-hash: 7b55686dd8
    name: emailservice-7b55686dd8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: 0717bd0b-b39c-43d7-a376-7150560e24f0
    resourceVersion: "1060152"
    uid: 8726d9e4-5f8b-424d-b1ea-8367b64e117b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: 7b55686dd8
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: 7b55686dd8
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: emailservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=emailservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: emailservice
        serviceAccountName: emailservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
    creationTimestamp: "2025-04-09T03:46:05Z"
    generation: 2
    labels:
      app: emailservice
      pod-template-hash: 7bdfddc6ff
    name: emailservice-7bdfddc6ff
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: 0717bd0b-b39c-43d7-a376-7150560e24f0
    resourceVersion: "1057704"
    uid: 59e9c3d0-fecc-4f65-8f7c-6620829ee8d2
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: 7bdfddc6ff
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T03:46:05Z"
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: 7bdfddc6ff
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: emailservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=emailservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: emailservice
        serviceAccountName: emailservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "17"
    creationTimestamp: "2025-04-08T17:02:51Z"
    generation: 2
    labels:
      app: emailservice
      pod-template-hash: 7ffff46d4b
    name: emailservice-7ffff46d4b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: 0717bd0b-b39c-43d7-a376-7150560e24f0
    resourceVersion: "1031939"
    uid: 42cd3db1-fd7a-4c7b-8c14-a34c3ec37de4
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: 7ffff46d4b
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:02:51Z"
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: 7ffff46d4b
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: emailservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=emailservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: emailservice
        serviceAccountName: emailservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
    creationTimestamp: "2025-04-09T05:09:45Z"
    generation: 2
    labels:
      app: emailservice
      pod-template-hash: cb4d694fd
    name: emailservice-cb4d694fd
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: 0717bd0b-b39c-43d7-a376-7150560e24f0
    resourceVersion: "1058838"
    uid: 9babe63f-8ecc-46ee-91d7-27228144e934
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: cb4d694fd
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: cb4d694fd
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: emailservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=emailservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: emailservice
        serviceAccountName: emailservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "27"
    creationTimestamp: "2025-04-09T07:14:47Z"
    generation: 2
    labels:
      app: emailservice
      pod-template-hash: d55bc9b77
    name: emailservice-d55bc9b77
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: 0717bd0b-b39c-43d7-a376-7150560e24f0
    resourceVersion: "1066235"
    uid: aec9fb18-43f0-481e-ae6d-7cc09d8c7517
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: d55bc9b77
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: d55bc9b77
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: emailservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=emailservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: emailservice
        serviceAccountName: emailservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "18"
    creationTimestamp: "2025-04-08T17:26:54Z"
    generation: 2
    labels:
      app: emailservice
      pod-template-hash: db9d666c
    name: emailservice-db9d666c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: emailservice
      uid: 0717bd0b-b39c-43d7-a376-7150560e24f0
    resourceVersion: "1033352"
    uid: 3b805789-1ada-4248-9a1b-c3d4d5669619
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: emailservice
        pod-template-hash: db9d666c
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:26:54Z"
        creationTimestamp: null
        labels:
          app: emailservice
          pod-template-hash: db9d666c
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: emailservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=emailservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: emailservice
        serviceAccountName: emailservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "29"
      instrumentation.opentelemetry.io/inject-nodejs: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T06:36:56Z"
    generation: 2
    labels:
      app: frontend
      pod-template-hash: 545f4cc7d6
    name: frontend-545f4cc7d6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: 1eab5141-6590-4208-9e3b-f101d6bc8e8d
    resourceVersion: "1063692"
    uid: 7ec9c0bb-0df3-4b22-92d7-cb25f5d561ce
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: 545f4cc7d6
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T06:36:56Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: 545f4cc7d6
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: SHOPPING_ASSISTANT_SERVICE_ADDR
            value: shoppingassistantservice:80
          - name: OTEL_SERVICE_NAME
            value: frontend
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=frontend
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: grpc
          - name: ENABLE_PROFILER
            value: "0"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: frontend
        serviceAccountName: frontend
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "33"
      instrumentation.opentelemetry.io/inject-nodejs: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T07:11:40Z"
    generation: 1
    labels:
      app: frontend
      pod-template-hash: 5bb785c5f6
    name: frontend-5bb785c5f6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: 1eab5141-6590-4208-9e3b-f101d6bc8e8d
    resourceVersion: "1068457"
    uid: d3a6acc0-57d3-4459-a4cf-a727850a2a98
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: 5bb785c5f6
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: 5bb785c5f6
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: SHOPPING_ASSISTANT_SERVICE_ADDR
            value: shoppingassistantservice:80
          - name: OTEL_SERVICE_NAME
            value: frontend
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=frontend
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          - name: ENABLE_PROFILER
            value: "0"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: frontend
        serviceAccountName: frontend
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "27"
      instrumentation.opentelemetry.io/inject-nodejs: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T05:22:43Z"
    generation: 2
    labels:
      app: frontend
      pod-template-hash: 5bf8b75d97
    name: frontend-5bf8b75d97
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: 1eab5141-6590-4208-9e3b-f101d6bc8e8d
    resourceVersion: "1063330"
    uid: 076cf678-f4f9-4114-818a-c3ac69417655
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: 5bf8b75d97
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: 5bf8b75d97
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: SHOPPING_ASSISTANT_SERVICE_ADDR
            value: shoppingassistantservice:80
          - name: OTEL_SERVICE_NAME
            value: frontend
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=frontend
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          - name: ENABLE_PROFILER
            value: "0"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: frontend
        serviceAccountName: frontend
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "31"
      instrumentation.opentelemetry.io/inject-nodejs: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T06:43:17Z"
    generation: 3
    labels:
      app: frontend
      pod-template-hash: 5cd98f65bb
    name: frontend-5cd98f65bb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: 1eab5141-6590-4208-9e3b-f101d6bc8e8d
    resourceVersion: "1064832"
    uid: c02ac459-32bb-4408-ac60-9a16699a6654
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: 5cd98f65bb
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T06:43:17Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: 5cd98f65bb
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: SHOPPING_ASSISTANT_SERVICE_ADDR
            value: shoppingassistantservice:80
          - name: OTEL_SERVICE_NAME
            value: frontend
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=frontend
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: ENABLE_PROFILER
            value: "0"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: frontend
        serviceAccountName: frontend
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "26"
      instrumentation.opentelemetry.io/inject-nodejs: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T05:14:46Z"
    generation: 2
    labels:
      app: frontend
      pod-template-hash: 64fd45c787
    name: frontend-64fd45c787
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: 1eab5141-6590-4208-9e3b-f101d6bc8e8d
    resourceVersion: "1060261"
    uid: 601b92c2-09f5-42dd-ba58-e50dd923b6b5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: 64fd45c787
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: 64fd45c787
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: SHOPPING_ASSISTANT_SERVICE_ADDR
            value: shoppingassistantservice:80
          - name: OTEL_SERVICE_NAME
            value: frontend
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=frontend
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          - name: ENABLE_PROFILER
            value: "0"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: frontend
        serviceAccountName: frontend
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "23"
      instrumentation.opentelemetry.io/inject-nodejs: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T05:04:56Z"
    generation: 3
    labels:
      app: frontend
      pod-template-hash: 6968fb9fd8
    name: frontend-6968fb9fd8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: 1eab5141-6590-4208-9e3b-f101d6bc8e8d
    resourceVersion: "1057041"
    uid: 9e72196f-cdd8-4ee8-960e-9f27d9f965ba
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: 6968fb9fd8
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T03:46:05Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: 6968fb9fd8
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: SHOPPING_ASSISTANT_SERVICE_ADDR
            value: shoppingassistantservice:80
          - name: OTEL_SERVICE_NAME
            value: frontend
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=frontend
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          - name: ENABLE_PROFILER
            value: "0"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: frontend
        serviceAccountName: frontend
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "28"
      instrumentation.opentelemetry.io/inject-nodejs: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T06:36:21Z"
    generation: 2
    labels:
      app: frontend
      pod-template-hash: 6b8794bbf7
    name: frontend-6b8794bbf7
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: 1eab5141-6590-4208-9e3b-f101d6bc8e8d
    resourceVersion: "1063403"
    uid: c569f1ea-12b9-4838-8cb8-a6c6b9477be1
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: 6b8794bbf7
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: 6b8794bbf7
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: SHOPPING_ASSISTANT_SERVICE_ADDR
            value: shoppingassistantservice:80
          - name: OTEL_SERVICE_NAME
            value: frontend
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=frontend
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: grpc
          - name: ENABLE_PROFILER
            value: "0"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: frontend
        serviceAccountName: frontend
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "24"
      instrumentation.opentelemetry.io/inject-nodejs: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T05:05:23Z"
    generation: 2
    labels:
      app: frontend
      pod-template-hash: 6c8b48bc8f
    name: frontend-6c8b48bc8f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: 1eab5141-6590-4208-9e3b-f101d6bc8e8d
    resourceVersion: "1057891"
    uid: 9d36c633-e683-474f-a45a-979b75eaba56
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: 6c8b48bc8f
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:05:23Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: 6c8b48bc8f
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: SHOPPING_ASSISTANT_SERVICE_ADDR
            value: shoppingassistantservice:80
          - name: OTEL_SERVICE_NAME
            value: frontend
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=frontend
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          - name: ENABLE_PROFILER
            value: "0"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: frontend
        serviceAccountName: frontend
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "32"
      instrumentation.opentelemetry.io/inject-nodejs: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T07:11:05Z"
    generation: 2
    labels:
      app: frontend
      pod-template-hash: "7686487846"
    name: frontend-7686487846
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: 1eab5141-6590-4208-9e3b-f101d6bc8e8d
    resourceVersion: "1065640"
    uid: 867ed17f-805b-4a8a-82c9-a15508ec81a6
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: "7686487846"
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T06:43:17Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: "7686487846"
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: SHOPPING_ASSISTANT_SERVICE_ADDR
            value: shoppingassistantservice:80
          - name: OTEL_SERVICE_NAME
            value: frontend
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=frontend
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          - name: ENABLE_PROFILER
            value: "0"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: frontend
        serviceAccountName: frontend
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "25"
      instrumentation.opentelemetry.io/inject-nodejs: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T05:09:45Z"
    generation: 2
    labels:
      app: frontend
      pod-template-hash: 7cd864df49
    name: frontend-7cd864df49
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: 1eab5141-6590-4208-9e3b-f101d6bc8e8d
    resourceVersion: "1058988"
    uid: 2c07abfd-bfe4-4b4a-8450-dff1ef95259b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: 7cd864df49
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: 7cd864df49
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: SHOPPING_ASSISTANT_SERVICE_ADDR
            value: shoppingassistantservice:80
          - name: OTEL_SERVICE_NAME
            value: frontend
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=frontend
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          - name: ENABLE_PROFILER
            value: "0"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: frontend
        serviceAccountName: frontend
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "30"
      instrumentation.opentelemetry.io/inject-nodejs: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T06:42:59Z"
    generation: 2
    labels:
      app: frontend
      pod-template-hash: c4d8c5ff
    name: frontend-c4d8c5ff
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend
      uid: 1eab5141-6590-4208-9e3b-f101d6bc8e8d
    resourceVersion: "1063643"
    uid: d936be35-1bc8-4a61-9072-04df404b2c6c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: c4d8c5ff
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T06:36:56Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: c4d8c5ff
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: SHOPPING_ASSISTANT_SERVICE_ADDR
            value: shoppingassistantservice:80
          - name: OTEL_SERVICE_NAME
            value: frontend
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=frontend
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: ENABLE_PROFILER
            value: "0"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: frontend
        serviceAccountName: frontend
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
      meta.helm.sh/release-name: grafana
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T16:54:14Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 11.5.2
      helm.sh/chart: grafana-8.10.4
      pod-template-hash: 54646f6887
    name: grafana-54646f6887
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: grafana
      uid: 2b448454-b9c5-4084-8acb-9b3831d1e7c3
    resourceVersion: "1029811"
    uid: 65c1cd0f-84fe-485a-9640-a6891a63502a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
        pod-template-hash: 54646f6887
    template:
      metadata:
        annotations:
          checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
          checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
          checksum/secret: 37823cef0be38922629597c43ea978460ec1c6439efc3654cb745e5e5fa92c80
          kubectl.kubernetes.io/default-container: grafana
          kubectl.kubernetes.io/restartedAt: "2025-04-08T16:54:13Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: grafana
          app.kubernetes.io/name: grafana
          app.kubernetes.io/version: 11.5.2
          helm.sh/chart: grafana-8.10.4
          pod-template-hash: 54646f6887
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                key: admin-user
                name: grafana
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: grafana
          - name: GF_PATHS_DATA
            value: /var/lib/grafana/
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          image: docker.io/grafana/grafana:11.5.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          - containerPort: 9094
            name: gossip-tcp
            protocol: TCP
          - containerPort: 9094
            name: gossip-udp
            protocol: UDP
          - containerPort: 6060
            name: profiling
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 472
          runAsGroup: 472
          runAsNonRoot: true
          runAsUser: 472
        serviceAccount: grafana
        serviceAccountName: grafana
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: grafana
          name: config
        - emptyDir: {}
          name: storage
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "13"
      meta.helm.sh/release-name: grafana
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:47:54Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 11.5.2
      helm.sh/chart: grafana-8.10.4
      pod-template-hash: 567c77bd66
    name: grafana-567c77bd66
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: grafana
      uid: 2b448454-b9c5-4084-8acb-9b3831d1e7c3
    resourceVersion: "1054093"
    uid: d24010ef-7ca8-4e75-bc4c-e16b463012a8
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
        pod-template-hash: 567c77bd66
    template:
      metadata:
        annotations:
          checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
          checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
          checksum/secret: 37823cef0be38922629597c43ea978460ec1c6439efc3654cb745e5e5fa92c80
          kubectl.kubernetes.io/default-container: grafana
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:47:53Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: grafana
          app.kubernetes.io/name: grafana
          app.kubernetes.io/version: 11.5.2
          helm.sh/chart: grafana-8.10.4
          pod-template-hash: 567c77bd66
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                key: admin-user
                name: grafana
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: grafana
          - name: GF_PATHS_DATA
            value: /var/lib/grafana/
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          image: docker.io/grafana/grafana:11.5.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          - containerPort: 9094
            name: gossip-tcp
            protocol: TCP
          - containerPort: 9094
            name: gossip-udp
            protocol: UDP
          - containerPort: 6060
            name: profiling
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 472
          runAsGroup: 472
          runAsNonRoot: true
          runAsUser: 472
        serviceAccount: grafana
        serviceAccountName: grafana
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: grafana
          name: config
        - emptyDir: {}
          name: storage
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "16"
      meta.helm.sh/release-name: grafana
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T05:14:46Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 11.5.2
      helm.sh/chart: grafana-8.10.4
      pod-template-hash: 5dbf4899bf
    name: grafana-5dbf4899bf
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: grafana
      uid: 2b448454-b9c5-4084-8acb-9b3831d1e7c3
    resourceVersion: "1060128"
    uid: e55b2be4-e76a-4d9b-8b2a-5ab560e30436
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
        pod-template-hash: 5dbf4899bf
    template:
      metadata:
        annotations:
          checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
          checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
          checksum/secret: 37823cef0be38922629597c43ea978460ec1c6439efc3654cb745e5e5fa92c80
          kubectl.kubernetes.io/default-container: grafana
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: grafana
          app.kubernetes.io/name: grafana
          app.kubernetes.io/version: 11.5.2
          helm.sh/chart: grafana-8.10.4
          pod-template-hash: 5dbf4899bf
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                key: admin-user
                name: grafana
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: grafana
          - name: GF_PATHS_DATA
            value: /var/lib/grafana/
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          image: docker.io/grafana/grafana:11.5.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          - containerPort: 9094
            name: gossip-tcp
            protocol: TCP
          - containerPort: 9094
            name: gossip-udp
            protocol: UDP
          - containerPort: 6060
            name: profiling
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 472
          runAsGroup: 472
          runAsNonRoot: true
          runAsUser: 472
        serviceAccount: grafana
        serviceAccountName: grafana
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: grafana
          name: config
        - emptyDir: {}
          name: storage
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "15"
      meta.helm.sh/release-name: grafana
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T05:09:46Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 11.5.2
      helm.sh/chart: grafana-8.10.4
      pod-template-hash: 6dfc7c699
    name: grafana-6dfc7c699
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: grafana
      uid: 2b448454-b9c5-4084-8acb-9b3831d1e7c3
    resourceVersion: "1058892"
    uid: bdff3347-4b5c-462e-a97c-63de24041b49
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
        pod-template-hash: 6dfc7c699
    template:
      metadata:
        annotations:
          checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
          checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
          checksum/secret: 37823cef0be38922629597c43ea978460ec1c6439efc3654cb745e5e5fa92c80
          kubectl.kubernetes.io/default-container: grafana
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: grafana
          app.kubernetes.io/name: grafana
          app.kubernetes.io/version: 11.5.2
          helm.sh/chart: grafana-8.10.4
          pod-template-hash: 6dfc7c699
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                key: admin-user
                name: grafana
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: grafana
          - name: GF_PATHS_DATA
            value: /var/lib/grafana/
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          image: docker.io/grafana/grafana:11.5.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          - containerPort: 9094
            name: gossip-tcp
            protocol: TCP
          - containerPort: 9094
            name: gossip-udp
            protocol: UDP
          - containerPort: 6060
            name: profiling
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 472
          runAsGroup: 472
          runAsNonRoot: true
          runAsUser: 472
        serviceAccount: grafana
        serviceAccountName: grafana
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: grafana
          name: config
        - emptyDir: {}
          name: storage
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "18"
      meta.helm.sh/release-name: grafana
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T07:11:41Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 11.5.2
      helm.sh/chart: grafana-8.10.4
      pod-template-hash: 757b79ffd9
    name: grafana-757b79ffd9
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: grafana
      uid: 2b448454-b9c5-4084-8acb-9b3831d1e7c3
    resourceVersion: "1065480"
    uid: 88782496-9722-41b2-8e27-aac8f59bcff7
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
        pod-template-hash: 757b79ffd9
    template:
      metadata:
        annotations:
          checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
          checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
          checksum/secret: 37823cef0be38922629597c43ea978460ec1c6439efc3654cb745e5e5fa92c80
          kubectl.kubernetes.io/default-container: grafana
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: grafana
          app.kubernetes.io/name: grafana
          app.kubernetes.io/version: 11.5.2
          helm.sh/chart: grafana-8.10.4
          pod-template-hash: 757b79ffd9
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                key: admin-user
                name: grafana
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: grafana
          - name: GF_PATHS_DATA
            value: /var/lib/grafana/
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          image: docker.io/grafana/grafana:11.5.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          - containerPort: 9094
            name: gossip-tcp
            protocol: TCP
          - containerPort: 9094
            name: gossip-udp
            protocol: UDP
          - containerPort: 6060
            name: profiling
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 472
          runAsGroup: 472
          runAsNonRoot: true
          runAsUser: 472
        serviceAccount: grafana
        serviceAccountName: grafana
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: grafana
          name: config
        - emptyDir: {}
          name: storage
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "14"
      meta.helm.sh/release-name: grafana
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T03:46:06Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 11.5.2
      helm.sh/chart: grafana-8.10.4
      pod-template-hash: 758c8df848
    name: grafana-758c8df848
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: grafana
      uid: 2b448454-b9c5-4084-8acb-9b3831d1e7c3
    resourceVersion: "1057719"
    uid: ab214b7b-2fb4-4a9a-80c5-7409bbc024b2
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
        pod-template-hash: 758c8df848
    template:
      metadata:
        annotations:
          checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
          checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
          checksum/secret: 37823cef0be38922629597c43ea978460ec1c6439efc3654cb745e5e5fa92c80
          kubectl.kubernetes.io/default-container: grafana
          kubectl.kubernetes.io/restartedAt: "2025-04-09T03:46:05Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: grafana
          app.kubernetes.io/name: grafana
          app.kubernetes.io/version: 11.5.2
          helm.sh/chart: grafana-8.10.4
          pod-template-hash: 758c8df848
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                key: admin-user
                name: grafana
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: grafana
          - name: GF_PATHS_DATA
            value: /var/lib/grafana/
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          image: docker.io/grafana/grafana:11.5.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          - containerPort: 9094
            name: gossip-tcp
            protocol: TCP
          - containerPort: 9094
            name: gossip-udp
            protocol: UDP
          - containerPort: 6060
            name: profiling
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 472
          runAsGroup: 472
          runAsNonRoot: true
          runAsUser: 472
        serviceAccount: grafana
        serviceAccountName: grafana
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: grafana
          name: config
        - emptyDir: {}
          name: storage
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
      meta.helm.sh/release-name: grafana
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T16:29:39Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 11.5.2
      helm.sh/chart: grafana-8.10.4
      pod-template-hash: 7697db9b7f
    name: grafana-7697db9b7f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: grafana
      uid: 2b448454-b9c5-4084-8acb-9b3831d1e7c3
    resourceVersion: "1028610"
    uid: 0f6f5239-0b19-42ab-a5d8-47ef94805e9b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
        pod-template-hash: 7697db9b7f
    template:
      metadata:
        annotations:
          checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
          checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
          checksum/secret: 37823cef0be38922629597c43ea978460ec1c6439efc3654cb745e5e5fa92c80
          kubectl.kubernetes.io/default-container: grafana
          kubectl.kubernetes.io/restartedAt: "2025-04-08T16:29:39Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: grafana
          app.kubernetes.io/name: grafana
          app.kubernetes.io/version: 11.5.2
          helm.sh/chart: grafana-8.10.4
          pod-template-hash: 7697db9b7f
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                key: admin-user
                name: grafana
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: grafana
          - name: GF_PATHS_DATA
            value: /var/lib/grafana/
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          image: docker.io/grafana/grafana:11.5.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          - containerPort: 9094
            name: gossip-tcp
            protocol: TCP
          - containerPort: 9094
            name: gossip-udp
            protocol: UDP
          - containerPort: 6060
            name: profiling
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 472
          runAsGroup: 472
          runAsNonRoot: true
          runAsUser: 472
        serviceAccount: grafana
        serviceAccountName: grafana
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: grafana
          name: config
        - emptyDir: {}
          name: storage
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "11"
      meta.helm.sh/release-name: grafana
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:26:54Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 11.5.2
      helm.sh/chart: grafana-8.10.4
      pod-template-hash: 7b59f94876
    name: grafana-7b59f94876
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: grafana
      uid: 2b448454-b9c5-4084-8acb-9b3831d1e7c3
    resourceVersion: "1033348"
    uid: 80f11296-61da-490e-9303-3511e72b66fa
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
        pod-template-hash: 7b59f94876
    template:
      metadata:
        annotations:
          checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
          checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
          checksum/secret: 37823cef0be38922629597c43ea978460ec1c6439efc3654cb745e5e5fa92c80
          kubectl.kubernetes.io/default-container: grafana
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:26:54Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: grafana
          app.kubernetes.io/name: grafana
          app.kubernetes.io/version: 11.5.2
          helm.sh/chart: grafana-8.10.4
          pod-template-hash: 7b59f94876
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                key: admin-user
                name: grafana
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: grafana
          - name: GF_PATHS_DATA
            value: /var/lib/grafana/
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          image: docker.io/grafana/grafana:11.5.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          - containerPort: 9094
            name: gossip-tcp
            protocol: TCP
          - containerPort: 9094
            name: gossip-udp
            protocol: UDP
          - containerPort: 6060
            name: profiling
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 472
          runAsGroup: 472
          runAsNonRoot: true
          runAsUser: 472
        serviceAccount: grafana
        serviceAccountName: grafana
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: grafana
          name: config
        - emptyDir: {}
          name: storage
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
      meta.helm.sh/release-name: grafana
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:02:52Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 11.5.2
      helm.sh/chart: grafana-8.10.4
      pod-template-hash: 7d57cbc59
    name: grafana-7d57cbc59
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: grafana
      uid: 2b448454-b9c5-4084-8acb-9b3831d1e7c3
    resourceVersion: "1031892"
    uid: 908a80c4-6249-4c2e-96c3-01c6a1c16556
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
        pod-template-hash: 7d57cbc59
    template:
      metadata:
        annotations:
          checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
          checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
          checksum/secret: 37823cef0be38922629597c43ea978460ec1c6439efc3654cb745e5e5fa92c80
          kubectl.kubernetes.io/default-container: grafana
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:02:51Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: grafana
          app.kubernetes.io/name: grafana
          app.kubernetes.io/version: 11.5.2
          helm.sh/chart: grafana-8.10.4
          pod-template-hash: 7d57cbc59
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                key: admin-user
                name: grafana
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: grafana
          - name: GF_PATHS_DATA
            value: /var/lib/grafana/
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          image: docker.io/grafana/grafana:11.5.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          - containerPort: 9094
            name: gossip-tcp
            protocol: TCP
          - containerPort: 9094
            name: gossip-udp
            protocol: UDP
          - containerPort: 6060
            name: profiling
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 472
          runAsGroup: 472
          runAsNonRoot: true
          runAsUser: 472
        serviceAccount: grafana
        serviceAccountName: grafana
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: grafana
          name: config
        - emptyDir: {}
          name: storage
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "12"
      meta.helm.sh/release-name: grafana
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:39:21Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 11.5.2
      helm.sh/chart: grafana-8.10.4
      pod-template-hash: f768cb6bf
    name: grafana-f768cb6bf
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: grafana
      uid: 2b448454-b9c5-4084-8acb-9b3831d1e7c3
    resourceVersion: "1034494"
    uid: f791f904-0de6-48d1-8650-9aea20a063fc
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
        pod-template-hash: f768cb6bf
    template:
      metadata:
        annotations:
          checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
          checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
          checksum/secret: 37823cef0be38922629597c43ea978460ec1c6439efc3654cb745e5e5fa92c80
          kubectl.kubernetes.io/default-container: grafana
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:39:20Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: grafana
          app.kubernetes.io/name: grafana
          app.kubernetes.io/version: 11.5.2
          helm.sh/chart: grafana-8.10.4
          pod-template-hash: f768cb6bf
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                key: admin-user
                name: grafana
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: grafana
          - name: GF_PATHS_DATA
            value: /var/lib/grafana/
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          image: docker.io/grafana/grafana:11.5.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          - containerPort: 9094
            name: gossip-tcp
            protocol: TCP
          - containerPort: 9094
            name: gossip-udp
            protocol: UDP
          - containerPort: 6060
            name: profiling
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 472
          runAsGroup: 472
          runAsNonRoot: true
          runAsUser: 472
        serviceAccount: grafana
        serviceAccountName: grafana
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: grafana
          name: config
        - emptyDir: {}
          name: storage
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "17"
      meta.helm.sh/release-name: grafana
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T05:22:43Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 11.5.2
      helm.sh/chart: grafana-8.10.4
      pod-template-hash: f9b549d59
    name: grafana-f9b549d59
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: grafana
      uid: 2b448454-b9c5-4084-8acb-9b3831d1e7c3
    resourceVersion: "1065510"
    uid: d0b9a429-2b0c-4e7b-bb0a-8098e0d4c946
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
        pod-template-hash: f9b549d59
    template:
      metadata:
        annotations:
          checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
          checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
          checksum/secret: 37823cef0be38922629597c43ea978460ec1c6439efc3654cb745e5e5fa92c80
          kubectl.kubernetes.io/default-container: grafana
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: grafana
          app.kubernetes.io/name: grafana
          app.kubernetes.io/version: 11.5.2
          helm.sh/chart: grafana-8.10.4
          pod-template-hash: f9b549d59
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                key: admin-user
                name: grafana
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: grafana
          - name: GF_PATHS_DATA
            value: /var/lib/grafana/
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          image: docker.io/grafana/grafana:11.5.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          - containerPort: 9094
            name: gossip-tcp
            protocol: TCP
          - containerPort: 9094
            name: gossip-udp
            protocol: UDP
          - containerPort: 6060
            name: profiling
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 472
          runAsGroup: 472
          runAsNonRoot: true
          runAsUser: 472
        serviceAccount: grafana
        serviceAccountName: grafana
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: grafana
          name: config
        - emptyDir: {}
          name: storage
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "20"
    creationTimestamp: "2025-04-09T03:46:06Z"
    generation: 2
    labels:
      app: loadgenerator
      pod-template-hash: 5db6f8d5d9
    name: loadgenerator-5db6f8d5d9
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: loadgenerator
      uid: a0594ad7-cdf8-44b9-ac0a-329bbd3eb03b
    resourceVersion: "1057638"
    uid: 47957daa-9a2c-4941-affe-b56c7d512107
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: loadgenerator
        pod-template-hash: 5db6f8d5d9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T03:46:05Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
          pod-template-hash: 5db6f8d5d9
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "10"
          - name: RATE
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/loadgenerator:v0.10.2
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/sh
          - -exc
          - |
            MAX_RETRIES=12
            RETRY_INTERVAL=10
            for i in $(seq 1 $MAX_RETRIES); do
              echo "Attempt $i: Pinging frontend: ${FRONTEND_ADDR}..."
              STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
              if [ $STATUSCODE -eq 200 ]; then
                  echo "Frontend is reachable."
                  exit 0
              fi
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              sleep $RETRY_INTERVAL
            done
            echo "Failed to reach frontend after $MAX_RETRIES attempts."
            exit 1
          env:
          - name: FRONTEND_ADDR
            value: frontend:80
          image: busybox:latest
          imagePullPolicy: Always
          name: frontend-check
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: loadgenerator
        serviceAccountName: loadgenerator
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "18"
    creationTimestamp: "2025-04-08T17:39:21Z"
    generation: 2
    labels:
      app: loadgenerator
      pod-template-hash: 65d48c5dd8
    name: loadgenerator-65d48c5dd8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: loadgenerator
      uid: a0594ad7-cdf8-44b9-ac0a-329bbd3eb03b
    resourceVersion: "1034275"
    uid: 96297ee9-06b0-4d67-9e1c-65c26c01504e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: loadgenerator
        pod-template-hash: 65d48c5dd8
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:39:20Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
          pod-template-hash: 65d48c5dd8
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "10"
          - name: RATE
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/loadgenerator:v0.10.2
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/sh
          - -exc
          - |
            MAX_RETRIES=12
            RETRY_INTERVAL=10
            for i in $(seq 1 $MAX_RETRIES); do
              echo "Attempt $i: Pinging frontend: ${FRONTEND_ADDR}..."
              STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
              if [ $STATUSCODE -eq 200 ]; then
                  echo "Frontend is reachable."
                  exit 0
              fi
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              sleep $RETRY_INTERVAL
            done
            echo "Failed to reach frontend after $MAX_RETRIES attempts."
            exit 1
          env:
          - name: FRONTEND_ADDR
            value: frontend:80
          image: busybox:latest
          imagePullPolicy: Always
          name: frontend-check
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: loadgenerator
        serviceAccountName: loadgenerator
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "24"
    creationTimestamp: "2025-04-09T07:11:06Z"
    generation: 2
    labels:
      app: loadgenerator
      pod-template-hash: 6848676bcb
    name: loadgenerator-6848676bcb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: loadgenerator
      uid: a0594ad7-cdf8-44b9-ac0a-329bbd3eb03b
    resourceVersion: "1065072"
    uid: d42e2aaa-d5f4-47a4-828b-a79626747a89
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: loadgenerator
        pod-template-hash: 6848676bcb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
          pod-template-hash: 6848676bcb
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "10"
          - name: RATE
            value: "1"
          image: loadgenerator
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/sh
          - -exc
          - |
            MAX_RETRIES=12
            RETRY_INTERVAL=10
            for i in $(seq 1 $MAX_RETRIES); do
              echo "Attempt $i: Pinging frontend: ${FRONTEND_ADDR}..."
              STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
              if [ $STATUSCODE -eq 200 ]; then
                  echo "Frontend is reachable."
                  exit 0
              fi
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              sleep $RETRY_INTERVAL
            done
            echo "Failed to reach frontend after $MAX_RETRIES attempts."
            exit 1
          env:
          - name: FRONTEND_ADDR
            value: frontend:80
          image: busybox:latest
          imagePullPolicy: Always
          name: frontend-check
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: loadgenerator
        serviceAccountName: loadgenerator
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
    creationTimestamp: "2025-04-09T05:09:46Z"
    generation: 2
    labels:
      app: loadgenerator
      pod-template-hash: 68947d8db6
    name: loadgenerator-68947d8db6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: loadgenerator
      uid: a0594ad7-cdf8-44b9-ac0a-329bbd3eb03b
    resourceVersion: "1058758"
    uid: 1c46b1eb-72a2-4b89-b5f8-803ca11553db
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: loadgenerator
        pod-template-hash: 68947d8db6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
          pod-template-hash: 68947d8db6
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "10"
          - name: RATE
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/loadgenerator:v0.10.2
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/sh
          - -exc
          - |
            MAX_RETRIES=12
            RETRY_INTERVAL=10
            for i in $(seq 1 $MAX_RETRIES); do
              echo "Attempt $i: Pinging frontend: ${FRONTEND_ADDR}..."
              STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
              if [ $STATUSCODE -eq 200 ]; then
                  echo "Frontend is reachable."
                  exit 0
              fi
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              sleep $RETRY_INTERVAL
            done
            echo "Failed to reach frontend after $MAX_RETRIES attempts."
            exit 1
          env:
          - name: FRONTEND_ADDR
            value: frontend:80
          image: busybox:latest
          imagePullPolicy: Always
          name: frontend-check
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: loadgenerator
        serviceAccountName: loadgenerator
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "25"
    creationTimestamp: "2025-04-09T07:11:41Z"
    generation: 3
    labels:
      app: loadgenerator
      pod-template-hash: 6965dbd8d6
    name: loadgenerator-6965dbd8d6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: loadgenerator
      uid: a0594ad7-cdf8-44b9-ac0a-329bbd3eb03b
    resourceVersion: "1066024"
    uid: 482d23cb-d24d-4589-ab62-0496fd840175
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: loadgenerator
        pod-template-hash: 6965dbd8d6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
          pod-template-hash: 6965dbd8d6
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "10"
          - name: RATE
            value: "1"
          image: loadgenerator
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/sh
          - -exc
          - |
            MAX_RETRIES=12
            RETRY_INTERVAL=10
            for i in $(seq 1 $MAX_RETRIES); do
              echo "Attempt $i: Pinging frontend: ${FRONTEND_ADDR}..."
              STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
              if [ $STATUSCODE -eq 200 ]; then
                  echo "Frontend is reachable."
                  exit 0
              fi
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              sleep $RETRY_INTERVAL
            done
            echo "Failed to reach frontend after $MAX_RETRIES attempts."
            exit 1
          env:
          - name: FRONTEND_ADDR
            value: frontend:80
          image: busybox:latest
          imagePullPolicy: Always
          name: frontend-check
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: loadgenerator
        serviceAccountName: loadgenerator
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "16"
    creationTimestamp: "2025-04-08T17:02:52Z"
    generation: 2
    labels:
      app: loadgenerator
      pod-template-hash: 6cbb84d994
    name: loadgenerator-6cbb84d994
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: loadgenerator
      uid: a0594ad7-cdf8-44b9-ac0a-329bbd3eb03b
    resourceVersion: "1031819"
    uid: 2f7a02a0-4f89-4497-ad9d-71a54d63018a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: loadgenerator
        pod-template-hash: 6cbb84d994
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:02:51Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
          pod-template-hash: 6cbb84d994
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "10"
          - name: RATE
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/loadgenerator:v0.10.2
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/sh
          - -exc
          - |
            MAX_RETRIES=12
            RETRY_INTERVAL=10
            for i in $(seq 1 $MAX_RETRIES); do
              echo "Attempt $i: Pinging frontend: ${FRONTEND_ADDR}..."
              STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
              if [ $STATUSCODE -eq 200 ]; then
                  echo "Frontend is reachable."
                  exit 0
              fi
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              sleep $RETRY_INTERVAL
            done
            echo "Failed to reach frontend after $MAX_RETRIES attempts."
            exit 1
          env:
          - name: FRONTEND_ADDR
            value: frontend:80
          image: busybox:latest
          imagePullPolicy: Always
          name: frontend-check
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: loadgenerator
        serviceAccountName: loadgenerator
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "19"
    creationTimestamp: "2025-04-08T17:47:54Z"
    generation: 2
    labels:
      app: loadgenerator
      pod-template-hash: 749fd7df9
    name: loadgenerator-749fd7df9
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: loadgenerator
      uid: a0594ad7-cdf8-44b9-ac0a-329bbd3eb03b
    resourceVersion: "1053962"
    uid: df66d900-bdd2-42a8-b2b1-164e3c03e04d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: loadgenerator
        pod-template-hash: 749fd7df9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:47:53Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
          pod-template-hash: 749fd7df9
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "10"
          - name: RATE
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/loadgenerator:v0.10.2
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/sh
          - -exc
          - |
            MAX_RETRIES=12
            RETRY_INTERVAL=10
            for i in $(seq 1 $MAX_RETRIES); do
              echo "Attempt $i: Pinging frontend: ${FRONTEND_ADDR}..."
              STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
              if [ $STATUSCODE -eq 200 ]; then
                  echo "Frontend is reachable."
                  exit 0
              fi
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              sleep $RETRY_INTERVAL
            done
            echo "Failed to reach frontend after $MAX_RETRIES attempts."
            exit 1
          env:
          - name: FRONTEND_ADDR
            value: frontend:80
          image: busybox:latest
          imagePullPolicy: Always
          name: frontend-check
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: loadgenerator
        serviceAccountName: loadgenerator
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "26"
    creationTimestamp: "2025-04-09T07:14:48Z"
    generation: 2
    labels:
      app: loadgenerator
      pod-template-hash: 79477896b4
    name: loadgenerator-79477896b4
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: loadgenerator
      uid: a0594ad7-cdf8-44b9-ac0a-329bbd3eb03b
    resourceVersion: "1066205"
    uid: 6d9903dc-ccc6-4054-85fa-a86e26cecfd6
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: loadgenerator
        pod-template-hash: 79477896b4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
          pod-template-hash: 79477896b4
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "10"
          - name: RATE
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/loadgenerator:v0.10.2
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/sh
          - -exc
          - |
            MAX_RETRIES=12
            RETRY_INTERVAL=10
            for i in $(seq 1 $MAX_RETRIES); do
              echo "Attempt $i: Pinging frontend: ${FRONTEND_ADDR}..."
              STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
              if [ $STATUSCODE -eq 200 ]; then
                  echo "Frontend is reachable."
                  exit 0
              fi
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              sleep $RETRY_INTERVAL
            done
            echo "Failed to reach frontend after $MAX_RETRIES attempts."
            exit 1
          env:
          - name: FRONTEND_ADDR
            value: frontend:80
          image: busybox:latest
          imagePullPolicy: Always
          name: frontend-check
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: loadgenerator
        serviceAccountName: loadgenerator
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "23"
    creationTimestamp: "2025-04-09T05:22:43Z"
    generation: 2
    labels:
      app: loadgenerator
      pod-template-hash: 7f8f54c54b
    name: loadgenerator-7f8f54c54b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: loadgenerator
      uid: a0594ad7-cdf8-44b9-ac0a-329bbd3eb03b
    resourceVersion: "1066223"
    uid: a78de8b5-4867-4083-92d0-33986c8845b7
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: loadgenerator
        pod-template-hash: 7f8f54c54b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
          pod-template-hash: 7f8f54c54b
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "10"
          - name: RATE
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/loadgenerator:v0.10.2
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/sh
          - -exc
          - |
            MAX_RETRIES=12
            RETRY_INTERVAL=10
            for i in $(seq 1 $MAX_RETRIES); do
              echo "Attempt $i: Pinging frontend: ${FRONTEND_ADDR}..."
              STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
              if [ $STATUSCODE -eq 200 ]; then
                  echo "Frontend is reachable."
                  exit 0
              fi
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              sleep $RETRY_INTERVAL
            done
            echo "Failed to reach frontend after $MAX_RETRIES attempts."
            exit 1
          env:
          - name: FRONTEND_ADDR
            value: frontend:80
          image: busybox:latest
          imagePullPolicy: Always
          name: frontend-check
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: loadgenerator
        serviceAccountName: loadgenerator
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "17"
    creationTimestamp: "2025-04-08T17:26:55Z"
    generation: 2
    labels:
      app: loadgenerator
      pod-template-hash: 7fdd4b574f
    name: loadgenerator-7fdd4b574f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: loadgenerator
      uid: a0594ad7-cdf8-44b9-ac0a-329bbd3eb03b
    resourceVersion: "1033214"
    uid: 39bc524b-a730-4c2e-8262-a02cf02c8f9b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: loadgenerator
        pod-template-hash: 7fdd4b574f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:26:54Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
          pod-template-hash: 7fdd4b574f
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "10"
          - name: RATE
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/loadgenerator:v0.10.2
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/sh
          - -exc
          - |
            MAX_RETRIES=12
            RETRY_INTERVAL=10
            for i in $(seq 1 $MAX_RETRIES); do
              echo "Attempt $i: Pinging frontend: ${FRONTEND_ADDR}..."
              STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
              if [ $STATUSCODE -eq 200 ]; then
                  echo "Frontend is reachable."
                  exit 0
              fi
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              sleep $RETRY_INTERVAL
            done
            echo "Failed to reach frontend after $MAX_RETRIES attempts."
            exit 1
          env:
          - name: FRONTEND_ADDR
            value: frontend:80
          image: busybox:latest
          imagePullPolicy: Always
          name: frontend-check
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: loadgenerator
        serviceAccountName: loadgenerator
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
    creationTimestamp: "2025-04-09T05:14:46Z"
    generation: 2
    labels:
      app: loadgenerator
      pod-template-hash: 85cd67cb96
    name: loadgenerator-85cd67cb96
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: loadgenerator
      uid: a0594ad7-cdf8-44b9-ac0a-329bbd3eb03b
    resourceVersion: "1060276"
    uid: cdca4d29-b5a4-427f-85c5-e88341886c92
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: loadgenerator
        pod-template-hash: 85cd67cb96
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
          pod-template-hash: 85cd67cb96
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "10"
          - name: RATE
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/loadgenerator:v0.10.2
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/sh
          - -exc
          - |
            MAX_RETRIES=12
            RETRY_INTERVAL=10
            for i in $(seq 1 $MAX_RETRIES); do
              echo "Attempt $i: Pinging frontend: ${FRONTEND_ADDR}..."
              STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
              if [ $STATUSCODE -eq 200 ]; then
                  echo "Frontend is reachable."
                  exit 0
              fi
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              sleep $RETRY_INTERVAL
            done
            echo "Failed to reach frontend after $MAX_RETRIES attempts."
            exit 1
          env:
          - name: FRONTEND_ADDR
            value: frontend:80
          image: busybox:latest
          imagePullPolicy: Always
          name: frontend-check
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: loadgenerator
        serviceAccountName: loadgenerator
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "17"
      meta.helm.sh/release-name: my-nginx
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T05:22:44Z"
    generation: 4
    labels:
      app.kubernetes.io/instance: my-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nginx
      app.kubernetes.io/version: 1.27.4
      helm.sh/chart: nginx-19.0.2
      pod-template-hash: 5966bf8b97
    name: my-nginx-5966bf8b97
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-nginx
      uid: bb0c1a88-98ee-4036-bbcb-6a20367317d9
    resourceVersion: "1065667"
    uid: 2e737dc7-1650-4456-9d53-4b0e60bf4978
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: my-nginx
        app.kubernetes.io/name: nginx
        pod-template-hash: 5966bf8b97
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: my-nginx
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: nginx
          app.kubernetes.io/version: 1.27.4
          helm.sh/chart: nginx-19.0.2
          pod-template-hash: 5966bf8b97
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-nginx
                    app.kubernetes.io/name: nginx
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: false
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: NGINX_HTTP_PORT_NUMBER
            value: "8080"
          - name: NGINX_HTTPS_PORT_NUMBER
            value: "8443"
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          name: nginx
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: empty-dir
            subPath: tmp-dir
          - mountPath: /opt/bitnami/nginx/conf
            name: empty-dir
            subPath: app-conf-dir
          - mountPath: /opt/bitnami/nginx/logs
            name: empty-dir
            subPath: app-logs-dir
          - mountPath: /opt/bitnami/nginx/tmp
            name: empty-dir
            subPath: app-tmp-dir
          - mountPath: /certs
            name: certificate
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -ec
          - |
            #!/bin/bash
            . /opt/bitnami/scripts/libfs.sh
            # We copy the logs folder because it has symlinks to stdout and stderr
            if ! is_dir_empty /opt/bitnami/nginx/logs; then
              cp -r /opt/bitnami/nginx/logs /emptydir/app-logs-dir
            fi
          command:
          - /bin/bash
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          name: preserve-logs-symlinks
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /emptydir
            name: empty-dir
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          fsGroupChangePolicy: Always
        serviceAccount: my-nginx
        serviceAccountName: my-nginx
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: empty-dir
        - name: certificate
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: server.crt
            - key: tls.key
              path: server.key
            secretName: my-nginx-tls
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "12"
      meta.helm.sh/release-name: my-nginx
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:39:21Z"
    generation: 4
    labels:
      app.kubernetes.io/instance: my-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nginx
      app.kubernetes.io/version: 1.27.4
      helm.sh/chart: nginx-19.0.2
      pod-template-hash: 5cf6b7b799
    name: my-nginx-5cf6b7b799
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-nginx
      uid: bb0c1a88-98ee-4036-bbcb-6a20367317d9
    resourceVersion: "1034654"
    uid: b098afc1-927e-429c-8cc1-cfea7a8b10bd
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: my-nginx
        app.kubernetes.io/name: nginx
        pod-template-hash: 5cf6b7b799
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:39:20Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: my-nginx
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: nginx
          app.kubernetes.io/version: 1.27.4
          helm.sh/chart: nginx-19.0.2
          pod-template-hash: 5cf6b7b799
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-nginx
                    app.kubernetes.io/name: nginx
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: false
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: NGINX_HTTP_PORT_NUMBER
            value: "8080"
          - name: NGINX_HTTPS_PORT_NUMBER
            value: "8443"
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          name: nginx
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: empty-dir
            subPath: tmp-dir
          - mountPath: /opt/bitnami/nginx/conf
            name: empty-dir
            subPath: app-conf-dir
          - mountPath: /opt/bitnami/nginx/logs
            name: empty-dir
            subPath: app-logs-dir
          - mountPath: /opt/bitnami/nginx/tmp
            name: empty-dir
            subPath: app-tmp-dir
          - mountPath: /certs
            name: certificate
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -ec
          - |
            #!/bin/bash
            . /opt/bitnami/scripts/libfs.sh
            # We copy the logs folder because it has symlinks to stdout and stderr
            if ! is_dir_empty /opt/bitnami/nginx/logs; then
              cp -r /opt/bitnami/nginx/logs /emptydir/app-logs-dir
            fi
          command:
          - /bin/bash
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          name: preserve-logs-symlinks
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /emptydir
            name: empty-dir
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          fsGroupChangePolicy: Always
        serviceAccount: my-nginx
        serviceAccountName: my-nginx
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: empty-dir
        - name: certificate
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: server.crt
            - key: tls.key
              path: server.key
            secretName: my-nginx-tls
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "16"
      meta.helm.sh/release-name: my-nginx
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T05:14:46Z"
    generation: 4
    labels:
      app.kubernetes.io/instance: my-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nginx
      app.kubernetes.io/version: 1.27.4
      helm.sh/chart: nginx-19.0.2
      pod-template-hash: 66bf697b9f
    name: my-nginx-66bf697b9f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-nginx
      uid: bb0c1a88-98ee-4036-bbcb-6a20367317d9
    resourceVersion: "1060297"
    uid: 8902f236-a86b-4562-9835-8716217bb7fc
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: my-nginx
        app.kubernetes.io/name: nginx
        pod-template-hash: 66bf697b9f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: my-nginx
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: nginx
          app.kubernetes.io/version: 1.27.4
          helm.sh/chart: nginx-19.0.2
          pod-template-hash: 66bf697b9f
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-nginx
                    app.kubernetes.io/name: nginx
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: false
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: NGINX_HTTP_PORT_NUMBER
            value: "8080"
          - name: NGINX_HTTPS_PORT_NUMBER
            value: "8443"
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          name: nginx
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: empty-dir
            subPath: tmp-dir
          - mountPath: /opt/bitnami/nginx/conf
            name: empty-dir
            subPath: app-conf-dir
          - mountPath: /opt/bitnami/nginx/logs
            name: empty-dir
            subPath: app-logs-dir
          - mountPath: /opt/bitnami/nginx/tmp
            name: empty-dir
            subPath: app-tmp-dir
          - mountPath: /certs
            name: certificate
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -ec
          - |
            #!/bin/bash
            . /opt/bitnami/scripts/libfs.sh
            # We copy the logs folder because it has symlinks to stdout and stderr
            if ! is_dir_empty /opt/bitnami/nginx/logs; then
              cp -r /opt/bitnami/nginx/logs /emptydir/app-logs-dir
            fi
          command:
          - /bin/bash
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          name: preserve-logs-symlinks
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /emptydir
            name: empty-dir
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          fsGroupChangePolicy: Always
        serviceAccount: my-nginx
        serviceAccountName: my-nginx
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: empty-dir
        - name: certificate
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: server.crt
            - key: tls.key
              path: server.key
            secretName: my-nginx-tls
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "9"
      meta.helm.sh/release-name: my-nginx
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T16:54:15Z"
    generation: 4
    labels:
      app.kubernetes.io/instance: my-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nginx
      app.kubernetes.io/version: 1.27.4
      helm.sh/chart: nginx-19.0.2
      pod-template-hash: 67fccfffdf
    name: my-nginx-67fccfffdf
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-nginx
      uid: bb0c1a88-98ee-4036-bbcb-6a20367317d9
    resourceVersion: "1029973"
    uid: 0f291daf-5240-44e5-97f0-0c1cdeabdf13
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: my-nginx
        app.kubernetes.io/name: nginx
        pod-template-hash: 67fccfffdf
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T16:54:13Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: my-nginx
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: nginx
          app.kubernetes.io/version: 1.27.4
          helm.sh/chart: nginx-19.0.2
          pod-template-hash: 67fccfffdf
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-nginx
                    app.kubernetes.io/name: nginx
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: false
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: NGINX_HTTP_PORT_NUMBER
            value: "8080"
          - name: NGINX_HTTPS_PORT_NUMBER
            value: "8443"
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          name: nginx
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: empty-dir
            subPath: tmp-dir
          - mountPath: /opt/bitnami/nginx/conf
            name: empty-dir
            subPath: app-conf-dir
          - mountPath: /opt/bitnami/nginx/logs
            name: empty-dir
            subPath: app-logs-dir
          - mountPath: /opt/bitnami/nginx/tmp
            name: empty-dir
            subPath: app-tmp-dir
          - mountPath: /certs
            name: certificate
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -ec
          - |
            #!/bin/bash
            . /opt/bitnami/scripts/libfs.sh
            # We copy the logs folder because it has symlinks to stdout and stderr
            if ! is_dir_empty /opt/bitnami/nginx/logs; then
              cp -r /opt/bitnami/nginx/logs /emptydir/app-logs-dir
            fi
          command:
          - /bin/bash
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          name: preserve-logs-symlinks
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /emptydir
            name: empty-dir
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          fsGroupChangePolicy: Always
        serviceAccount: my-nginx
        serviceAccountName: my-nginx
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: empty-dir
        - name: certificate
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: server.crt
            - key: tls.key
              path: server.key
            secretName: my-nginx-tls
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "11"
      meta.helm.sh/release-name: my-nginx
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:26:55Z"
    generation: 4
    labels:
      app.kubernetes.io/instance: my-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nginx
      app.kubernetes.io/version: 1.27.4
      helm.sh/chart: nginx-19.0.2
      pod-template-hash: 68c6868f76
    name: my-nginx-68c6868f76
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-nginx
      uid: bb0c1a88-98ee-4036-bbcb-6a20367317d9
    resourceVersion: "1033534"
    uid: edd0f9e4-17a7-4226-b018-a0424893d434
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: my-nginx
        app.kubernetes.io/name: nginx
        pod-template-hash: 68c6868f76
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:26:54Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: my-nginx
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: nginx
          app.kubernetes.io/version: 1.27.4
          helm.sh/chart: nginx-19.0.2
          pod-template-hash: 68c6868f76
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-nginx
                    app.kubernetes.io/name: nginx
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: false
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: NGINX_HTTP_PORT_NUMBER
            value: "8080"
          - name: NGINX_HTTPS_PORT_NUMBER
            value: "8443"
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          name: nginx
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: empty-dir
            subPath: tmp-dir
          - mountPath: /opt/bitnami/nginx/conf
            name: empty-dir
            subPath: app-conf-dir
          - mountPath: /opt/bitnami/nginx/logs
            name: empty-dir
            subPath: app-logs-dir
          - mountPath: /opt/bitnami/nginx/tmp
            name: empty-dir
            subPath: app-tmp-dir
          - mountPath: /certs
            name: certificate
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -ec
          - |
            #!/bin/bash
            . /opt/bitnami/scripts/libfs.sh
            # We copy the logs folder because it has symlinks to stdout and stderr
            if ! is_dir_empty /opt/bitnami/nginx/logs; then
              cp -r /opt/bitnami/nginx/logs /emptydir/app-logs-dir
            fi
          command:
          - /bin/bash
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          name: preserve-logs-symlinks
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /emptydir
            name: empty-dir
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          fsGroupChangePolicy: Always
        serviceAccount: my-nginx
        serviceAccountName: my-nginx
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: empty-dir
        - name: certificate
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: server.crt
            - key: tls.key
              path: server.key
            secretName: my-nginx-tls
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "15"
      meta.helm.sh/release-name: my-nginx
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T05:09:46Z"
    generation: 4
    labels:
      app.kubernetes.io/instance: my-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nginx
      app.kubernetes.io/version: 1.27.4
      helm.sh/chart: nginx-19.0.2
      pod-template-hash: 6b657c5b9c
    name: my-nginx-6b657c5b9c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-nginx
      uid: bb0c1a88-98ee-4036-bbcb-6a20367317d9
    resourceVersion: "1059008"
    uid: e3175271-a9ff-4b2c-9f65-6618e86de46d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: my-nginx
        app.kubernetes.io/name: nginx
        pod-template-hash: 6b657c5b9c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: my-nginx
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: nginx
          app.kubernetes.io/version: 1.27.4
          helm.sh/chart: nginx-19.0.2
          pod-template-hash: 6b657c5b9c
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-nginx
                    app.kubernetes.io/name: nginx
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: false
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: NGINX_HTTP_PORT_NUMBER
            value: "8080"
          - name: NGINX_HTTPS_PORT_NUMBER
            value: "8443"
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          name: nginx
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: empty-dir
            subPath: tmp-dir
          - mountPath: /opt/bitnami/nginx/conf
            name: empty-dir
            subPath: app-conf-dir
          - mountPath: /opt/bitnami/nginx/logs
            name: empty-dir
            subPath: app-logs-dir
          - mountPath: /opt/bitnami/nginx/tmp
            name: empty-dir
            subPath: app-tmp-dir
          - mountPath: /certs
            name: certificate
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -ec
          - |
            #!/bin/bash
            . /opt/bitnami/scripts/libfs.sh
            # We copy the logs folder because it has symlinks to stdout and stderr
            if ! is_dir_empty /opt/bitnami/nginx/logs; then
              cp -r /opt/bitnami/nginx/logs /emptydir/app-logs-dir
            fi
          command:
          - /bin/bash
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          name: preserve-logs-symlinks
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /emptydir
            name: empty-dir
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          fsGroupChangePolicy: Always
        serviceAccount: my-nginx
        serviceAccountName: my-nginx
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: empty-dir
        - name: certificate
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: server.crt
            - key: tls.key
              path: server.key
            secretName: my-nginx-tls
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "18"
      meta.helm.sh/release-name: my-nginx
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T07:11:41Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: my-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nginx
      app.kubernetes.io/version: 1.27.4
      helm.sh/chart: nginx-19.0.2
      pod-template-hash: 78b8c98787
    name: my-nginx-78b8c98787
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-nginx
      uid: bb0c1a88-98ee-4036-bbcb-6a20367317d9
    resourceVersion: "1065655"
    uid: dfe98b2a-0c84-4cf0-8228-5531328bbe5c
  spec:
    replicas: 2
    selector:
      matchLabels:
        app.kubernetes.io/instance: my-nginx
        app.kubernetes.io/name: nginx
        pod-template-hash: 78b8c98787
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: my-nginx
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: nginx
          app.kubernetes.io/version: 1.27.4
          helm.sh/chart: nginx-19.0.2
          pod-template-hash: 78b8c98787
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-nginx
                    app.kubernetes.io/name: nginx
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: false
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: NGINX_HTTP_PORT_NUMBER
            value: "8080"
          - name: NGINX_HTTPS_PORT_NUMBER
            value: "8443"
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          name: nginx
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: empty-dir
            subPath: tmp-dir
          - mountPath: /opt/bitnami/nginx/conf
            name: empty-dir
            subPath: app-conf-dir
          - mountPath: /opt/bitnami/nginx/logs
            name: empty-dir
            subPath: app-logs-dir
          - mountPath: /opt/bitnami/nginx/tmp
            name: empty-dir
            subPath: app-tmp-dir
          - mountPath: /certs
            name: certificate
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -ec
          - |
            #!/bin/bash
            . /opt/bitnami/scripts/libfs.sh
            # We copy the logs folder because it has symlinks to stdout and stderr
            if ! is_dir_empty /opt/bitnami/nginx/logs; then
              cp -r /opt/bitnami/nginx/logs /emptydir/app-logs-dir
            fi
          command:
          - /bin/bash
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          name: preserve-logs-symlinks
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /emptydir
            name: empty-dir
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          fsGroupChangePolicy: Always
        serviceAccount: my-nginx
        serviceAccountName: my-nginx
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: empty-dir
        - name: certificate
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: server.crt
            - key: tls.key
              path: server.key
            secretName: my-nginx-tls
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "14"
      meta.helm.sh/release-name: my-nginx
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T03:46:06Z"
    generation: 4
    labels:
      app.kubernetes.io/instance: my-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nginx
      app.kubernetes.io/version: 1.27.4
      helm.sh/chart: nginx-19.0.2
      pod-template-hash: 7bc9bf96cb
    name: my-nginx-7bc9bf96cb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-nginx
      uid: bb0c1a88-98ee-4036-bbcb-6a20367317d9
    resourceVersion: "1057910"
    uid: 5de17a76-6d1f-46f8-b753-a4930e0efeda
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: my-nginx
        app.kubernetes.io/name: nginx
        pod-template-hash: 7bc9bf96cb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T03:46:05Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: my-nginx
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: nginx
          app.kubernetes.io/version: 1.27.4
          helm.sh/chart: nginx-19.0.2
          pod-template-hash: 7bc9bf96cb
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-nginx
                    app.kubernetes.io/name: nginx
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: false
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: NGINX_HTTP_PORT_NUMBER
            value: "8080"
          - name: NGINX_HTTPS_PORT_NUMBER
            value: "8443"
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          name: nginx
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: empty-dir
            subPath: tmp-dir
          - mountPath: /opt/bitnami/nginx/conf
            name: empty-dir
            subPath: app-conf-dir
          - mountPath: /opt/bitnami/nginx/logs
            name: empty-dir
            subPath: app-logs-dir
          - mountPath: /opt/bitnami/nginx/tmp
            name: empty-dir
            subPath: app-tmp-dir
          - mountPath: /certs
            name: certificate
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -ec
          - |
            #!/bin/bash
            . /opt/bitnami/scripts/libfs.sh
            # We copy the logs folder because it has symlinks to stdout and stderr
            if ! is_dir_empty /opt/bitnami/nginx/logs; then
              cp -r /opt/bitnami/nginx/logs /emptydir/app-logs-dir
            fi
          command:
          - /bin/bash
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          name: preserve-logs-symlinks
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /emptydir
            name: empty-dir
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          fsGroupChangePolicy: Always
        serviceAccount: my-nginx
        serviceAccountName: my-nginx
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: empty-dir
        - name: certificate
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: server.crt
            - key: tls.key
              path: server.key
            secretName: my-nginx-tls
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "13"
      meta.helm.sh/release-name: my-nginx
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:47:54Z"
    generation: 4
    labels:
      app.kubernetes.io/instance: my-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nginx
      app.kubernetes.io/version: 1.27.4
      helm.sh/chart: nginx-19.0.2
      pod-template-hash: 7f97957bd6
    name: my-nginx-7f97957bd6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-nginx
      uid: bb0c1a88-98ee-4036-bbcb-6a20367317d9
    resourceVersion: "1054267"
    uid: 1ae1be6f-bfa1-4f48-a99c-90353525ed76
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: my-nginx
        app.kubernetes.io/name: nginx
        pod-template-hash: 7f97957bd6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:47:53Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: my-nginx
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: nginx
          app.kubernetes.io/version: 1.27.4
          helm.sh/chart: nginx-19.0.2
          pod-template-hash: 7f97957bd6
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-nginx
                    app.kubernetes.io/name: nginx
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: false
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: NGINX_HTTP_PORT_NUMBER
            value: "8080"
          - name: NGINX_HTTPS_PORT_NUMBER
            value: "8443"
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          name: nginx
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: empty-dir
            subPath: tmp-dir
          - mountPath: /opt/bitnami/nginx/conf
            name: empty-dir
            subPath: app-conf-dir
          - mountPath: /opt/bitnami/nginx/logs
            name: empty-dir
            subPath: app-logs-dir
          - mountPath: /opt/bitnami/nginx/tmp
            name: empty-dir
            subPath: app-tmp-dir
          - mountPath: /certs
            name: certificate
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -ec
          - |
            #!/bin/bash
            . /opt/bitnami/scripts/libfs.sh
            # We copy the logs folder because it has symlinks to stdout and stderr
            if ! is_dir_empty /opt/bitnami/nginx/logs; then
              cp -r /opt/bitnami/nginx/logs /emptydir/app-logs-dir
            fi
          command:
          - /bin/bash
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          name: preserve-logs-symlinks
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /emptydir
            name: empty-dir
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          fsGroupChangePolicy: Always
        serviceAccount: my-nginx
        serviceAccountName: my-nginx
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: empty-dir
        - name: certificate
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: server.crt
            - key: tls.key
              path: server.key
            secretName: my-nginx-tls
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "10"
      meta.helm.sh/release-name: my-nginx
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:02:53Z"
    generation: 4
    labels:
      app.kubernetes.io/instance: my-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nginx
      app.kubernetes.io/version: 1.27.4
      helm.sh/chart: nginx-19.0.2
      pod-template-hash: b9bf85889
    name: my-nginx-b9bf85889
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-nginx
      uid: bb0c1a88-98ee-4036-bbcb-6a20367317d9
    resourceVersion: "1032070"
    uid: 241b2f99-610a-479a-806f-ded690ff17c5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: my-nginx
        app.kubernetes.io/name: nginx
        pod-template-hash: b9bf85889
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:02:51Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: my-nginx
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: nginx
          app.kubernetes.io/version: 1.27.4
          helm.sh/chart: nginx-19.0.2
          pod-template-hash: b9bf85889
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-nginx
                    app.kubernetes.io/name: nginx
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: false
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: NGINX_HTTP_PORT_NUMBER
            value: "8080"
          - name: NGINX_HTTPS_PORT_NUMBER
            value: "8443"
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          name: nginx
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: empty-dir
            subPath: tmp-dir
          - mountPath: /opt/bitnami/nginx/conf
            name: empty-dir
            subPath: app-conf-dir
          - mountPath: /opt/bitnami/nginx/logs
            name: empty-dir
            subPath: app-logs-dir
          - mountPath: /opt/bitnami/nginx/tmp
            name: empty-dir
            subPath: app-tmp-dir
          - mountPath: /certs
            name: certificate
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -ec
          - |
            #!/bin/bash
            . /opt/bitnami/scripts/libfs.sh
            # We copy the logs folder because it has symlinks to stdout and stderr
            if ! is_dir_empty /opt/bitnami/nginx/logs; then
              cp -r /opt/bitnami/nginx/logs /emptydir/app-logs-dir
            fi
          command:
          - /bin/bash
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          name: preserve-logs-symlinks
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /emptydir
            name: empty-dir
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          fsGroupChangePolicy: Always
        serviceAccount: my-nginx
        serviceAccountName: my-nginx
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: empty-dir
        - name: certificate
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: server.crt
            - key: tls.key
              path: server.key
            secretName: my-nginx-tls
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "8"
      meta.helm.sh/release-name: my-nginx
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T16:29:40Z"
    generation: 4
    labels:
      app.kubernetes.io/instance: my-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nginx
      app.kubernetes.io/version: 1.27.4
      helm.sh/chart: nginx-19.0.2
      pod-template-hash: fc9bbc6f7
    name: my-nginx-fc9bbc6f7
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: my-nginx
      uid: bb0c1a88-98ee-4036-bbcb-6a20367317d9
    resourceVersion: "1028805"
    uid: f6775ec7-0ae6-4b60-a7c4-d3870e845102
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: my-nginx
        app.kubernetes.io/name: nginx
        pod-template-hash: fc9bbc6f7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T16:29:39Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: my-nginx
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: nginx
          app.kubernetes.io/version: 1.27.4
          helm.sh/chart: nginx-19.0.2
          pod-template-hash: fc9bbc6f7
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-nginx
                    app.kubernetes.io/name: nginx
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: false
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: NGINX_HTTP_PORT_NUMBER
            value: "8080"
          - name: NGINX_HTTPS_PORT_NUMBER
            value: "8443"
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          name: nginx
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: empty-dir
            subPath: tmp-dir
          - mountPath: /opt/bitnami/nginx/conf
            name: empty-dir
            subPath: app-conf-dir
          - mountPath: /opt/bitnami/nginx/logs
            name: empty-dir
            subPath: app-logs-dir
          - mountPath: /opt/bitnami/nginx/tmp
            name: empty-dir
            subPath: app-tmp-dir
          - mountPath: /certs
            name: certificate
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -ec
          - |
            #!/bin/bash
            . /opt/bitnami/scripts/libfs.sh
            # We copy the logs folder because it has symlinks to stdout and stderr
            if ! is_dir_empty /opt/bitnami/nginx/logs; then
              cp -r /opt/bitnami/nginx/logs /emptydir/app-logs-dir
            fi
          command:
          - /bin/bash
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          name: preserve-logs-symlinks
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /emptydir
            name: empty-dir
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          fsGroupChangePolicy: Always
        serviceAccount: my-nginx
        serviceAccountName: my-nginx
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: empty-dir
        - name: certificate
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: server.crt
            - key: tls.key
              path: server.key
            secretName: my-nginx-tls
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "25"
    creationTimestamp: "2025-04-09T07:11:06Z"
    generation: 2
    labels:
      app: paymentservice
      pod-template-hash: 57698d6b5
    name: paymentservice-57698d6b5
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: paymentservice
      uid: 29c00a07-65ff-40de-96e7-aa52ddd39266
    resourceVersion: "1065127"
    uid: 49e56679-4bdf-4655-9144-5b2daaf359b5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: paymentservice
        pod-template-hash: 57698d6b5
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app: paymentservice
          pod-template-hash: 57698d6b5
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: paymentservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=paymentservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: paymentservice
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: paymentservice
        serviceAccountName: paymentservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "23"
    creationTimestamp: "2025-04-09T05:14:47Z"
    generation: 2
    labels:
      app: paymentservice
      pod-template-hash: 57b88485d4
    name: paymentservice-57b88485d4
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: paymentservice
      uid: 29c00a07-65ff-40de-96e7-aa52ddd39266
    resourceVersion: "1059969"
    uid: e4169543-0404-4748-ac7f-91e4c6627f60
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: paymentservice
        pod-template-hash: 57b88485d4
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
        creationTimestamp: null
        labels:
          app: paymentservice
          pod-template-hash: 57b88485d4
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: paymentservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=paymentservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: paymentservice
        serviceAccountName: paymentservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "19"
    creationTimestamp: "2025-04-08T17:39:21Z"
    generation: 2
    labels:
      app: paymentservice
      pod-template-hash: 5fc65f9d76
    name: paymentservice-5fc65f9d76
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: paymentservice
      uid: 29c00a07-65ff-40de-96e7-aa52ddd39266
    resourceVersion: "1034355"
    uid: e413aa22-cd53-4f64-af76-b88982ef142e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: paymentservice
        pod-template-hash: 5fc65f9d76
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:39:20Z"
        creationTimestamp: null
        labels:
          app: paymentservice
          pod-template-hash: 5fc65f9d76
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: paymentservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=paymentservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: paymentservice
        serviceAccountName: paymentservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "20"
    creationTimestamp: "2025-04-08T17:47:55Z"
    generation: 2
    labels:
      app: paymentservice
      pod-template-hash: 797b6bc469
    name: paymentservice-797b6bc469
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: paymentservice
      uid: 29c00a07-65ff-40de-96e7-aa52ddd39266
    resourceVersion: "1053959"
    uid: 8e393f6e-ff7d-48dd-953f-57d208ae9645
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: paymentservice
        pod-template-hash: 797b6bc469
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:47:53Z"
        creationTimestamp: null
        labels:
          app: paymentservice
          pod-template-hash: 797b6bc469
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: paymentservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=paymentservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: paymentservice
        serviceAccountName: paymentservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "17"
    creationTimestamp: "2025-04-08T17:02:53Z"
    generation: 2
    labels:
      app: paymentservice
      pod-template-hash: 79cdfb4998
    name: paymentservice-79cdfb4998
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: paymentservice
      uid: 29c00a07-65ff-40de-96e7-aa52ddd39266
    resourceVersion: "1031795"
    uid: 1f6d9167-251b-4590-bfd2-caa0e18af89b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: paymentservice
        pod-template-hash: 79cdfb4998
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:02:51Z"
        creationTimestamp: null
        labels:
          app: paymentservice
          pod-template-hash: 79cdfb4998
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: paymentservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=paymentservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: paymentservice
        serviceAccountName: paymentservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
    creationTimestamp: "2025-04-09T05:09:46Z"
    generation: 2
    labels:
      app: paymentservice
      pod-template-hash: 7bd4d864b
    name: paymentservice-7bd4d864b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: paymentservice
      uid: 29c00a07-65ff-40de-96e7-aa52ddd39266
    resourceVersion: "1058740"
    uid: 08d4899d-c14f-4b8f-83cf-a260fac356b9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: paymentservice
        pod-template-hash: 7bd4d864b
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
        creationTimestamp: null
        labels:
          app: paymentservice
          pod-template-hash: 7bd4d864b
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: paymentservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=paymentservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: paymentservice
        serviceAccountName: paymentservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
    creationTimestamp: "2025-04-09T03:46:06Z"
    generation: 2
    labels:
      app: paymentservice
      pod-template-hash: 7bf4d54bff
    name: paymentservice-7bf4d54bff
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: paymentservice
      uid: 29c00a07-65ff-40de-96e7-aa52ddd39266
    resourceVersion: "1057668"
    uid: d7a087b4-8740-422c-b870-cf8a8df2beb0
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: paymentservice
        pod-template-hash: 7bf4d54bff
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T03:46:05Z"
        creationTimestamp: null
        labels:
          app: paymentservice
          pod-template-hash: 7bf4d54bff
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: paymentservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=paymentservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: paymentservice
        serviceAccountName: paymentservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "18"
    creationTimestamp: "2025-04-08T17:26:55Z"
    generation: 2
    labels:
      app: paymentservice
      pod-template-hash: 7c6897fdb7
    name: paymentservice-7c6897fdb7
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: paymentservice
      uid: 29c00a07-65ff-40de-96e7-aa52ddd39266
    resourceVersion: "1033254"
    uid: 69f2dd91-3274-4618-97eb-1e87aa3240fe
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: paymentservice
        pod-template-hash: 7c6897fdb7
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:26:54Z"
        creationTimestamp: null
        labels:
          app: paymentservice
          pod-template-hash: 7c6897fdb7
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: paymentservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=paymentservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: paymentservice
        serviceAccountName: paymentservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "24"
    creationTimestamp: "2025-04-09T05:22:44Z"
    generation: 2
    labels:
      app: paymentservice
      pod-template-hash: 868585f6c4
    name: paymentservice-868585f6c4
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: paymentservice
      uid: 29c00a07-65ff-40de-96e7-aa52ddd39266
    resourceVersion: "1066196"
    uid: 300a707c-6ff7-4a34-9ff7-494b7f39eb90
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: paymentservice
        pod-template-hash: 868585f6c4
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app: paymentservice
          pod-template-hash: 868585f6c4
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: paymentservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=paymentservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: paymentservice
        serviceAccountName: paymentservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "26"
    creationTimestamp: "2025-04-09T07:11:41Z"
    generation: 3
    labels:
      app: paymentservice
      pod-template-hash: 988f49955
    name: paymentservice-988f49955
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: paymentservice
      uid: 29c00a07-65ff-40de-96e7-aa52ddd39266
    resourceVersion: "1066062"
    uid: 44ce4e1a-193d-490f-bb51-e4c65680aa04
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: paymentservice
        pod-template-hash: 988f49955
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: paymentservice
          pod-template-hash: 988f49955
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: paymentservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=paymentservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: paymentservice
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: paymentservice
        serviceAccountName: paymentservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "27"
    creationTimestamp: "2025-04-09T07:14:48Z"
    generation: 2
    labels:
      app: paymentservice
      pod-template-hash: ddc56c685
    name: paymentservice-ddc56c685
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: paymentservice
      uid: 29c00a07-65ff-40de-96e7-aa52ddd39266
    resourceVersion: "1145416"
    uid: b9374af6-9bb1-4f91-96be-b8b115d819cb
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: paymentservice
        pod-template-hash: ddc56c685
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: paymentservice
          pod-template-hash: ddc56c685
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: paymentservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=paymentservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: paymentservice
        serviceAccountName: paymentservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "26"
    creationTimestamp: "2025-04-09T05:22:31Z"
    generation: 3
    labels:
      app: productcatalogservice
      pod-template-hash: 569767b696
    name: productcatalogservice-569767b696
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: productcatalogservice
      uid: 451bee68-4f78-4ab3-87fd-9b851750fa65
    resourceVersion: "1060030"
    uid: 064fe673-6df6-4ab0-b6bd-1163f03e3913
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: productcatalogservice
        pod-template-hash: 569767b696
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
        creationTimestamp: null
        labels:
          app: productcatalogservice
          pod-template-hash: 569767b696
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: productcatalogservice
        serviceAccountName: productcatalogservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
    creationTimestamp: "2025-04-08T17:47:55Z"
    generation: 3
    labels:
      app: productcatalogservice
      pod-template-hash: 56ffb856f5
    name: productcatalogservice-56ffb856f5
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: productcatalogservice
      uid: 451bee68-4f78-4ab3-87fd-9b851750fa65
    resourceVersion: "1053713"
    uid: 84997711-24b9-4f26-bf27-ba963b49502d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: productcatalogservice
        pod-template-hash: 56ffb856f5
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:47:53Z"
        creationTimestamp: null
        labels:
          app: productcatalogservice
          pod-template-hash: 56ffb856f5
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: productcatalogservice
        serviceAccountName: productcatalogservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "19"
    creationTimestamp: "2025-04-08T17:26:56Z"
    generation: 3
    labels:
      app: productcatalogservice
      pod-template-hash: 58949d5d69
    name: productcatalogservice-58949d5d69
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: productcatalogservice
      uid: 451bee68-4f78-4ab3-87fd-9b851750fa65
    resourceVersion: "1033016"
    uid: bf89ab79-5fc4-4ace-adb2-dcb7b9906a04
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: productcatalogservice
        pod-template-hash: 58949d5d69
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:26:54Z"
        creationTimestamp: null
        labels:
          app: productcatalogservice
          pod-template-hash: 58949d5d69
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: productcatalogservice
        serviceAccountName: productcatalogservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "23"
    creationTimestamp: "2025-04-09T05:09:47Z"
    generation: 3
    labels:
      app: productcatalogservice
      pod-template-hash: 685f468b8b
    name: productcatalogservice-685f468b8b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: productcatalogservice
      uid: 451bee68-4f78-4ab3-87fd-9b851750fa65
    resourceVersion: "1058186"
    uid: a81f1074-4d9e-48d0-8119-9472f460eb40
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: productcatalogservice
        pod-template-hash: 685f468b8b
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
        creationTimestamp: null
        labels:
          app: productcatalogservice
          pod-template-hash: 685f468b8b
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: productcatalogservice
        serviceAccountName: productcatalogservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "25"
    creationTimestamp: "2025-04-09T05:14:47Z"
    generation: 3
    labels:
      app: productcatalogservice
      pod-template-hash: 68c55944cb
    name: productcatalogservice-68c55944cb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: productcatalogservice
      uid: 451bee68-4f78-4ab3-87fd-9b851750fa65
    resourceVersion: "1059447"
    uid: d4213e39-4af5-4187-8849-ccee798a4eeb
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: productcatalogservice
        pod-template-hash: 68c55944cb
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
        creationTimestamp: null
        labels:
          app: productcatalogservice
          pod-template-hash: 68c55944cb
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: productcatalogservice
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: productcatalogservice
        serviceAccountName: productcatalogservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "20"
    creationTimestamp: "2025-04-08T17:39:22Z"
    generation: 3
    labels:
      app: productcatalogservice
      pod-template-hash: 69848586cb
    name: productcatalogservice-69848586cb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: productcatalogservice
      uid: 451bee68-4f78-4ab3-87fd-9b851750fa65
    resourceVersion: "1034093"
    uid: 98854d85-3cb9-4e6b-8d34-0d21e8589d67
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: productcatalogservice
        pod-template-hash: 69848586cb
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:39:20Z"
        creationTimestamp: null
        labels:
          app: productcatalogservice
          pod-template-hash: 69848586cb
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: productcatalogservice
        serviceAccountName: productcatalogservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "27"
    creationTimestamp: "2025-04-09T05:22:44Z"
    generation: 2
    labels:
      app: productcatalogservice
      pod-template-hash: 77698fcff8
    name: productcatalogservice-77698fcff8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: productcatalogservice
      uid: 451bee68-4f78-4ab3-87fd-9b851750fa65
    resourceVersion: "1064745"
    uid: 00ce044e-7ea0-4f5a-98fc-0acfe4e795b5
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: productcatalogservice
        pod-template-hash: 77698fcff8
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app: productcatalogservice
          pod-template-hash: 77698fcff8
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: productcatalogservice
        serviceAccountName: productcatalogservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
    creationTimestamp: "2025-04-09T03:46:07Z"
    generation: 3
    labels:
      app: productcatalogservice
      pod-template-hash: 7cc8d9f49
    name: productcatalogservice-7cc8d9f49
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: productcatalogservice
      uid: 451bee68-4f78-4ab3-87fd-9b851750fa65
    resourceVersion: "1057387"
    uid: 1805d06a-3d2b-4833-8ff9-4cb5b02a9232
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: productcatalogservice
        pod-template-hash: 7cc8d9f49
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T03:46:05Z"
        creationTimestamp: null
        labels:
          app: productcatalogservice
          pod-template-hash: 7cc8d9f49
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: productcatalogservice
        serviceAccountName: productcatalogservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "29"
    creationTimestamp: "2025-04-09T07:11:42Z"
    generation: 1
    labels:
      app: productcatalogservice
      pod-template-hash: 84c7db64bf
    name: productcatalogservice-84c7db64bf
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: productcatalogservice
      uid: 451bee68-4f78-4ab3-87fd-9b851750fa65
    resourceVersion: "1065353"
    uid: 284e6da4-cf68-4418-b082-42c73ce62562
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: productcatalogservice
        pod-template-hash: 84c7db64bf
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: productcatalogservice
          pod-template-hash: 84c7db64bf
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: productcatalogservice
        serviceAccountName: productcatalogservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "28"
    creationTimestamp: "2025-04-09T07:11:07Z"
    generation: 2
    labels:
      app: productcatalogservice
      pod-template-hash: 86bf8fb475
    name: productcatalogservice-86bf8fb475
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: productcatalogservice
      uid: 451bee68-4f78-4ab3-87fd-9b851750fa65
    resourceVersion: "1065376"
    uid: 1273168b-5eea-46b1-adb6-ab9b141847df
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: productcatalogservice
        pod-template-hash: 86bf8fb475
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app: productcatalogservice
          pod-template-hash: 86bf8fb475
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: productcatalogservice
        serviceAccountName: productcatalogservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "24"
    creationTimestamp: "2025-04-09T05:14:31Z"
    generation: 3
    labels:
      app: productcatalogservice
      pod-template-hash: bd8fdf6bb
    name: productcatalogservice-bd8fdf6bb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: productcatalogservice
      uid: 451bee68-4f78-4ab3-87fd-9b851750fa65
    resourceVersion: "1058500"
    uid: 04e08066-4cd8-44af-b548-0be45316981f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: productcatalogservice
        pod-template-hash: bd8fdf6bb
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
        creationTimestamp: null
        labels:
          app: productcatalogservice
          pod-template-hash: bd8fdf6bb
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: productcatalogservice
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: productcatalogservice
        serviceAccountName: productcatalogservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "15"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T05:09:47Z"
    generation: 2
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-5.30.0
      pod-template-hash: 56b7c9c89b
    name: prometheus-kube-state-metrics-56b7c9c89b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-kube-state-metrics
      uid: d2aec666-cb44-438a-9030-2d812d713f52
    resourceVersion: "1058852"
    uid: 2e001dce-c8b7-4cdd-89e2-efa81929d156
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: kube-state-metrics
        pod-template-hash: 56b7c9c89b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/part-of: kube-state-metrics
          app.kubernetes.io/version: 2.15.0
          helm.sh/chart: kube-state-metrics-5.30.0
          pod-template-hash: 56b7c9c89b
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: prometheus-kube-state-metrics
        serviceAccountName: prometheus-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "17"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T05:22:44Z"
    generation: 2
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-5.30.0
      pod-template-hash: 64ccb57d48
    name: prometheus-kube-state-metrics-64ccb57d48
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-kube-state-metrics
      uid: d2aec666-cb44-438a-9030-2d812d713f52
    resourceVersion: "1065567"
    uid: 3cd7cbd5-90f4-4809-8e0a-3320f5ede240
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: kube-state-metrics
        pod-template-hash: 64ccb57d48
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/part-of: kube-state-metrics
          app.kubernetes.io/version: 2.15.0
          helm.sh/chart: kube-state-metrics-5.30.0
          pod-template-hash: 64ccb57d48
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: prometheus-kube-state-metrics
        serviceAccountName: prometheus-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "12"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:39:22Z"
    generation: 2
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-5.30.0
      pod-template-hash: 67f948bbc8
    name: prometheus-kube-state-metrics-67f948bbc8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-kube-state-metrics
      uid: d2aec666-cb44-438a-9030-2d812d713f52
    resourceVersion: "1034525"
    uid: 025d24af-863e-4474-9d78-1521af25b398
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: kube-state-metrics
        pod-template-hash: 67f948bbc8
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:39:20Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/part-of: kube-state-metrics
          app.kubernetes.io/version: 2.15.0
          helm.sh/chart: kube-state-metrics-5.30.0
          pod-template-hash: 67f948bbc8
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: prometheus-kube-state-metrics
        serviceAccountName: prometheus-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "11"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:26:56Z"
    generation: 2
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-5.30.0
      pod-template-hash: 69cdc9dcb9
    name: prometheus-kube-state-metrics-69cdc9dcb9
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-kube-state-metrics
      uid: d2aec666-cb44-438a-9030-2d812d713f52
    resourceVersion: "1033387"
    uid: 05348600-b0ad-452a-aa33-c5d22543bd10
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: kube-state-metrics
        pod-template-hash: 69cdc9dcb9
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:26:54Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/part-of: kube-state-metrics
          app.kubernetes.io/version: 2.15.0
          helm.sh/chart: kube-state-metrics-5.30.0
          pod-template-hash: 69cdc9dcb9
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: prometheus-kube-state-metrics
        serviceAccountName: prometheus-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:02:53Z"
    generation: 2
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-5.30.0
      pod-template-hash: 7486fcd7bd
    name: prometheus-kube-state-metrics-7486fcd7bd
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-kube-state-metrics
      uid: d2aec666-cb44-438a-9030-2d812d713f52
    resourceVersion: "1031970"
    uid: 53ca34d7-199c-4960-ac55-06b3c5752f62
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: kube-state-metrics
        pod-template-hash: 7486fcd7bd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:02:51Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/part-of: kube-state-metrics
          app.kubernetes.io/version: 2.15.0
          helm.sh/chart: kube-state-metrics-5.30.0
          pod-template-hash: 7486fcd7bd
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: prometheus-kube-state-metrics
        serviceAccountName: prometheus-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "14"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T03:46:07Z"
    generation: 2
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-5.30.0
      pod-template-hash: 78c698c549
    name: prometheus-kube-state-metrics-78c698c549
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-kube-state-metrics
      uid: d2aec666-cb44-438a-9030-2d812d713f52
    resourceVersion: "1057772"
    uid: b5deb6c5-6aad-4f5c-8e64-17dd11319b5f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: kube-state-metrics
        pod-template-hash: 78c698c549
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T03:46:05Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/part-of: kube-state-metrics
          app.kubernetes.io/version: 2.15.0
          helm.sh/chart: kube-state-metrics-5.30.0
          pod-template-hash: 78c698c549
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: prometheus-kube-state-metrics
        serviceAccountName: prometheus-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T16:29:41Z"
    generation: 2
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-5.30.0
      pod-template-hash: 79957cb784
    name: prometheus-kube-state-metrics-79957cb784
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-kube-state-metrics
      uid: d2aec666-cb44-438a-9030-2d812d713f52
    resourceVersion: "1028716"
    uid: 89978077-ee9a-4601-b125-a2ce648c5e3e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: kube-state-metrics
        pod-template-hash: 79957cb784
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T16:29:39Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/part-of: kube-state-metrics
          app.kubernetes.io/version: 2.15.0
          helm.sh/chart: kube-state-metrics-5.30.0
          pod-template-hash: 79957cb784
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: prometheus-kube-state-metrics
        serviceAccountName: prometheus-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T16:54:16Z"
    generation: 2
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-5.30.0
      pod-template-hash: 79b694bb7b
    name: prometheus-kube-state-metrics-79b694bb7b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-kube-state-metrics
      uid: d2aec666-cb44-438a-9030-2d812d713f52
    resourceVersion: "1029856"
    uid: e4dbbdbf-da8c-42e5-b05b-0140324c4282
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: kube-state-metrics
        pod-template-hash: 79b694bb7b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T16:54:13Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/part-of: kube-state-metrics
          app.kubernetes.io/version: 2.15.0
          helm.sh/chart: kube-state-metrics-5.30.0
          pod-template-hash: 79b694bb7b
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: prometheus-kube-state-metrics
        serviceAccountName: prometheus-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "18"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T07:11:42Z"
    generation: 1
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-5.30.0
      pod-template-hash: 99577dbfd
    name: prometheus-kube-state-metrics-99577dbfd
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-kube-state-metrics
      uid: d2aec666-cb44-438a-9030-2d812d713f52
    resourceVersion: "1065551"
    uid: 6ac1206a-2fc0-487f-b3bf-6e45a1e38eba
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: kube-state-metrics
        pod-template-hash: 99577dbfd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/part-of: kube-state-metrics
          app.kubernetes.io/version: 2.15.0
          helm.sh/chart: kube-state-metrics-5.30.0
          pod-template-hash: 99577dbfd
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: prometheus-kube-state-metrics
        serviceAccountName: prometheus-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "13"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:47:56Z"
    generation: 2
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-5.30.0
      pod-template-hash: cb78fb879
    name: prometheus-kube-state-metrics-cb78fb879
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-kube-state-metrics
      uid: d2aec666-cb44-438a-9030-2d812d713f52
    resourceVersion: "1054140"
    uid: b8b7377a-c883-4063-8269-cff6d03b9c8c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: kube-state-metrics
        pod-template-hash: cb78fb879
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:47:53Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/part-of: kube-state-metrics
          app.kubernetes.io/version: 2.15.0
          helm.sh/chart: kube-state-metrics-5.30.0
          pod-template-hash: cb78fb879
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: prometheus-kube-state-metrics
        serviceAccountName: prometheus-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "16"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T05:14:47Z"
    generation: 2
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-5.30.0
      pod-template-hash: d6cdffdb
    name: prometheus-kube-state-metrics-d6cdffdb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-kube-state-metrics
      uid: d2aec666-cb44-438a-9030-2d812d713f52
    resourceVersion: "1060184"
    uid: 602bb269-257c-4d93-a613-699603ff2bd0
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: kube-state-metrics
        pod-template-hash: d6cdffdb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/part-of: kube-state-metrics
          app.kubernetes.io/version: 2.15.0
          helm.sh/chart: kube-state-metrics-5.30.0
          pod-template-hash: d6cdffdb
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: prometheus-kube-state-metrics
        serviceAccountName: prometheus-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "10"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:03:01Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-pushgateway
      app.kubernetes.io/version: v1.11.0
      helm.sh/chart: prometheus-pushgateway-3.0.0
      pod-template-hash: 55dfddcb69
    name: prometheus-prometheus-pushgateway-55dfddcb69
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-prometheus-pushgateway
      uid: 9128931f-c6d9-4e3d-b004-021a46ae098e
    resourceVersion: "1031517"
    uid: 59d69d49-fac7-413e-9fe8-b8c3723dfc59
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus-pushgateway
        pod-template-hash: 55dfddcb69
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:02:51Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: prometheus-pushgateway
          app.kubernetes.io/version: v1.11.0
          helm.sh/chart: prometheus-pushgateway-3.0.0
          pod-template-hash: 55dfddcb69
      spec:
        automountServiceAccountToken: true
        containers:
        - image: quay.io/prometheus/pushgateway:v1.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: pushgateway
          ports:
          - containerPort: 9091
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-prometheus-pushgateway
        serviceAccountName: prometheus-prometheus-pushgateway
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: storage-volume
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "8"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T16:29:48Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-pushgateway
      app.kubernetes.io/version: v1.11.0
      helm.sh/chart: prometheus-pushgateway-3.0.0
      pod-template-hash: 5b8848c765
    name: prometheus-prometheus-pushgateway-5b8848c765
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-prometheus-pushgateway
      uid: 9128931f-c6d9-4e3d-b004-021a46ae098e
    resourceVersion: "1028273"
    uid: cd6c2f89-5e3d-42a6-9ca7-4b59f5ad2f00
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus-pushgateway
        pod-template-hash: 5b8848c765
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T16:29:39Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: prometheus-pushgateway
          app.kubernetes.io/version: v1.11.0
          helm.sh/chart: prometheus-pushgateway-3.0.0
          pod-template-hash: 5b8848c765
      spec:
        automountServiceAccountToken: true
        containers:
        - image: quay.io/prometheus/pushgateway:v1.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: pushgateway
          ports:
          - containerPort: 9091
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-prometheus-pushgateway
        serviceAccountName: prometheus-prometheus-pushgateway
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: storage-volume
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "9"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T16:54:22Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-pushgateway
      app.kubernetes.io/version: v1.11.0
      helm.sh/chart: prometheus-pushgateway-3.0.0
      pod-template-hash: 6869db697
    name: prometheus-prometheus-pushgateway-6869db697
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-prometheus-pushgateway
      uid: 9128931f-c6d9-4e3d-b004-021a46ae098e
    resourceVersion: "1029432"
    uid: 2a484e12-b8f1-4357-a79e-d724cc57bfdb
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus-pushgateway
        pod-template-hash: 6869db697
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T16:54:13Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: prometheus-pushgateway
          app.kubernetes.io/version: v1.11.0
          helm.sh/chart: prometheus-pushgateway-3.0.0
          pod-template-hash: 6869db697
      spec:
        automountServiceAccountToken: true
        containers:
        - image: quay.io/prometheus/pushgateway:v1.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: pushgateway
          ports:
          - containerPort: 9091
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-prometheus-pushgateway
        serviceAccountName: prometheus-prometheus-pushgateway
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: storage-volume
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "11"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:27:01Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-pushgateway
      app.kubernetes.io/version: v1.11.0
      helm.sh/chart: prometheus-pushgateway-3.0.0
      pod-template-hash: 6c5c65688b
    name: prometheus-prometheus-pushgateway-6c5c65688b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-prometheus-pushgateway
      uid: 9128931f-c6d9-4e3d-b004-021a46ae098e
    resourceVersion: "1033012"
    uid: 94791932-dcf0-4b80-808f-a8f857a0dd27
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus-pushgateway
        pod-template-hash: 6c5c65688b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:26:54Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: prometheus-pushgateway
          app.kubernetes.io/version: v1.11.0
          helm.sh/chart: prometheus-pushgateway-3.0.0
          pod-template-hash: 6c5c65688b
      spec:
        automountServiceAccountToken: true
        containers:
        - image: quay.io/prometheus/pushgateway:v1.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: pushgateway
          ports:
          - containerPort: 9091
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-prometheus-pushgateway
        serviceAccountName: prometheus-prometheus-pushgateway
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: storage-volume
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "16"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T05:14:55Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-pushgateway
      app.kubernetes.io/version: v1.11.0
      helm.sh/chart: prometheus-pushgateway-3.0.0
      pod-template-hash: 6d5778cd99
    name: prometheus-prometheus-pushgateway-6d5778cd99
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-prometheus-pushgateway
      uid: 9128931f-c6d9-4e3d-b004-021a46ae098e
    resourceVersion: "1059769"
    uid: 1dbabefe-d0e4-4a98-9097-ec65b1f6521d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus-pushgateway
        pod-template-hash: 6d5778cd99
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: prometheus-pushgateway
          app.kubernetes.io/version: v1.11.0
          helm.sh/chart: prometheus-pushgateway-3.0.0
          pod-template-hash: 6d5778cd99
      spec:
        automountServiceAccountToken: true
        containers:
        - image: quay.io/prometheus/pushgateway:v1.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: pushgateway
          ports:
          - containerPort: 9091
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-prometheus-pushgateway
        serviceAccountName: prometheus-prometheus-pushgateway
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: storage-volume
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "14"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T03:46:12Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-pushgateway
      app.kubernetes.io/version: v1.11.0
      helm.sh/chart: prometheus-pushgateway-3.0.0
      pod-template-hash: 75748c65c8
    name: prometheus-prometheus-pushgateway-75748c65c8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-prometheus-pushgateway
      uid: 9128931f-c6d9-4e3d-b004-021a46ae098e
    resourceVersion: "1057371"
    uid: eca9ef4c-f0a8-4b35-b80f-d764eceabcc1
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus-pushgateway
        pod-template-hash: 75748c65c8
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T03:46:05Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: prometheus-pushgateway
          app.kubernetes.io/version: v1.11.0
          helm.sh/chart: prometheus-pushgateway-3.0.0
          pod-template-hash: 75748c65c8
      spec:
        automountServiceAccountToken: true
        containers:
        - image: quay.io/prometheus/pushgateway:v1.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: pushgateway
          ports:
          - containerPort: 9091
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-prometheus-pushgateway
        serviceAccountName: prometheus-prometheus-pushgateway
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: storage-volume
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "12"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:39:30Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-pushgateway
      app.kubernetes.io/version: v1.11.0
      helm.sh/chart: prometheus-pushgateway-3.0.0
      pod-template-hash: 79d4855d79
    name: prometheus-prometheus-pushgateway-79d4855d79
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-prometheus-pushgateway
      uid: 9128931f-c6d9-4e3d-b004-021a46ae098e
    resourceVersion: "1034102"
    uid: d3e86ae9-e065-4766-b5b7-af89534d7ad1
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus-pushgateway
        pod-template-hash: 79d4855d79
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:39:20Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: prometheus-pushgateway
          app.kubernetes.io/version: v1.11.0
          helm.sh/chart: prometheus-pushgateway-3.0.0
          pod-template-hash: 79d4855d79
      spec:
        automountServiceAccountToken: true
        containers:
        - image: quay.io/prometheus/pushgateway:v1.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: pushgateway
          ports:
          - containerPort: 9091
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-prometheus-pushgateway
        serviceAccountName: prometheus-prometheus-pushgateway
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: storage-volume
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "18"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T07:11:49Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-pushgateway
      app.kubernetes.io/version: v1.11.0
      helm.sh/chart: prometheus-pushgateway-3.0.0
      pod-template-hash: 7c759fcdf5
    name: prometheus-prometheus-pushgateway-7c759fcdf5
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-prometheus-pushgateway
      uid: 9128931f-c6d9-4e3d-b004-021a46ae098e
    resourceVersion: "1065608"
    uid: 9c235dad-53c9-4c22-b67a-d001d92b3ca0
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus-pushgateway
        pod-template-hash: 7c759fcdf5
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: prometheus-pushgateway
          app.kubernetes.io/version: v1.11.0
          helm.sh/chart: prometheus-pushgateway-3.0.0
          pod-template-hash: 7c759fcdf5
      spec:
        automountServiceAccountToken: true
        containers:
        - image: quay.io/prometheus/pushgateway:v1.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: pushgateway
          ports:
          - containerPort: 9091
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-prometheus-pushgateway
        serviceAccountName: prometheus-prometheus-pushgateway
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: storage-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "15"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T05:09:54Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-pushgateway
      app.kubernetes.io/version: v1.11.0
      helm.sh/chart: prometheus-pushgateway-3.0.0
      pod-template-hash: 84d95bfff7
    name: prometheus-prometheus-pushgateway-84d95bfff7
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-prometheus-pushgateway
      uid: 9128931f-c6d9-4e3d-b004-021a46ae098e
    resourceVersion: "1058494"
    uid: 0b5653b8-b3f1-440a-8af5-3b6e88421a83
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus-pushgateway
        pod-template-hash: 84d95bfff7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: prometheus-pushgateway
          app.kubernetes.io/version: v1.11.0
          helm.sh/chart: prometheus-pushgateway-3.0.0
          pod-template-hash: 84d95bfff7
      spec:
        automountServiceAccountToken: true
        containers:
        - image: quay.io/prometheus/pushgateway:v1.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: pushgateway
          ports:
          - containerPort: 9091
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-prometheus-pushgateway
        serviceAccountName: prometheus-prometheus-pushgateway
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: storage-volume
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "13"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:48:01Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-pushgateway
      app.kubernetes.io/version: v1.11.0
      helm.sh/chart: prometheus-pushgateway-3.0.0
      pod-template-hash: 96f944ff6
    name: prometheus-prometheus-pushgateway-96f944ff6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-prometheus-pushgateway
      uid: 9128931f-c6d9-4e3d-b004-021a46ae098e
    resourceVersion: "1053756"
    uid: a34677ea-1d45-4c52-aaaa-5eadc580591d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus-pushgateway
        pod-template-hash: 96f944ff6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:47:53Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: prometheus-pushgateway
          app.kubernetes.io/version: v1.11.0
          helm.sh/chart: prometheus-pushgateway-3.0.0
          pod-template-hash: 96f944ff6
      spec:
        automountServiceAccountToken: true
        containers:
        - image: quay.io/prometheus/pushgateway:v1.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: pushgateway
          ports:
          - containerPort: 9091
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-prometheus-pushgateway
        serviceAccountName: prometheus-prometheus-pushgateway
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: storage-volume
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "17"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T05:22:50Z"
    generation: 2
    labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-pushgateway
      app.kubernetes.io/version: v1.11.0
      helm.sh/chart: prometheus-pushgateway-3.0.0
      pod-template-hash: c76d7457c
    name: prometheus-prometheus-pushgateway-c76d7457c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-prometheus-pushgateway
      uid: 9128931f-c6d9-4e3d-b004-021a46ae098e
    resourceVersion: "1065124"
    uid: 2c9c8ea7-93d9-4c77-93e0-a80c6d981bc8
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus-pushgateway
        pod-template-hash: c76d7457c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: prometheus-pushgateway
          app.kubernetes.io/version: v1.11.0
          helm.sh/chart: prometheus-pushgateway-3.0.0
          pod-template-hash: c76d7457c
      spec:
        automountServiceAccountToken: true
        containers:
        - image: quay.io/prometheus/pushgateway:v1.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: pushgateway
          ports:
          - containerPort: 9091
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-prometheus-pushgateway
        serviceAccountName: prometheus-prometheus-pushgateway
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: storage-volume
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "8"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T16:29:47Z"
    generation: 2
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: prometheus
      app.kubernetes.io/version: v3.2.1
      helm.sh/chart: prometheus-27.5.1
      pod-template-hash: 54686bd7db
    name: prometheus-server-54686bd7db
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-server
      uid: ff5f5216-ea72-4b0c-85a9-050bc9fbbdfd
    resourceVersion: "1028312"
    uid: 7b735f68-dd0c-4a5d-bed6-6a4543d99841
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus
        pod-template-hash: 54686bd7db
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T16:29:39Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/name: prometheus
          app.kubernetes.io/part-of: prometheus
          app.kubernetes.io/version: v3.2.1
          helm.sh/chart: prometheus-27.5.1
          pod-template-hash: 54686bd7db
      spec:
        containers:
        - args:
          - --watched-dir=/etc/config
          - --listen-address=0.0.0.0:8080
          - --reload-url=http://127.0.0.1:9090/-/reload
          image: quay.io/prometheus-operator/prometheus-config-reloader:v0.80.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-server-configmap-reload
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
            readOnly: true
        - args:
          - --storage.tsdb.retention.time=15d
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          image: quay.io/prometheus/prometheus:v3.2.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          name: prometheus-server
          ports:
          - containerPort: 9090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 4
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-server
        serviceAccountName: prometheus-server
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-server
          name: config-volume
        - name: storage-volume
          persistentVolumeClaim:
            claimName: prometheus-server
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "15"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T05:09:51Z"
    generation: 2
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: prometheus
      app.kubernetes.io/version: v3.2.1
      helm.sh/chart: prometheus-27.5.1
      pod-template-hash: 559467ddd6
    name: prometheus-server-559467ddd6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-server
      uid: ff5f5216-ea72-4b0c-85a9-050bc9fbbdfd
    resourceVersion: "1058498"
    uid: b1fc69fc-cc11-493b-9f5f-1e23f8db013c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus
        pod-template-hash: 559467ddd6
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/name: prometheus
          app.kubernetes.io/part-of: prometheus
          app.kubernetes.io/version: v3.2.1
          helm.sh/chart: prometheus-27.5.1
          pod-template-hash: 559467ddd6
      spec:
        containers:
        - args:
          - --watched-dir=/etc/config
          - --listen-address=0.0.0.0:8080
          - --reload-url=http://127.0.0.1:9090/-/reload
          image: quay.io/prometheus-operator/prometheus-config-reloader:v0.80.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-server-configmap-reload
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
            readOnly: true
        - args:
          - --storage.tsdb.retention.time=15d
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          image: quay.io/prometheus/prometheus:v3.2.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          name: prometheus-server
          ports:
          - containerPort: 9090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 4
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-server
        serviceAccountName: prometheus-server
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-server
          name: config-volume
        - name: storage-volume
          persistentVolumeClaim:
            claimName: prometheus-server
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "18"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T07:11:50Z"
    generation: 1
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: prometheus
      app.kubernetes.io/version: v3.2.1
      helm.sh/chart: prometheus-27.5.1
      pod-template-hash: 65745bcbd4
    name: prometheus-server-65745bcbd4
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-server
      uid: ff5f5216-ea72-4b0c-85a9-050bc9fbbdfd
    resourceVersion: "1065712"
    uid: 84fe6bc9-c2c3-460d-9455-65dd5f2e08c0
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus
        pod-template-hash: 65745bcbd4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/name: prometheus
          app.kubernetes.io/part-of: prometheus
          app.kubernetes.io/version: v3.2.1
          helm.sh/chart: prometheus-27.5.1
          pod-template-hash: 65745bcbd4
      spec:
        containers:
        - args:
          - --watched-dir=/etc/config
          - --listen-address=0.0.0.0:8080
          - --reload-url=http://127.0.0.1:9090/-/reload
          image: quay.io/prometheus-operator/prometheus-config-reloader:v0.80.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-server-configmap-reload
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
            readOnly: true
        - args:
          - --storage.tsdb.retention.time=15d
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          image: quay.io/prometheus/prometheus:v3.2.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          name: prometheus-server
          ports:
          - containerPort: 9090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 4
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-server
        serviceAccountName: prometheus-server
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-server
          name: config-volume
        - name: storage-volume
          persistentVolumeClaim:
            claimName: prometheus-server
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "10"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:02:59Z"
    generation: 2
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: prometheus
      app.kubernetes.io/version: v3.2.1
      helm.sh/chart: prometheus-27.5.1
      pod-template-hash: 69dfd76c86
    name: prometheus-server-69dfd76c86
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-server
      uid: ff5f5216-ea72-4b0c-85a9-050bc9fbbdfd
    resourceVersion: "1031535"
    uid: dac45182-0f5e-47ce-9fe6-b3df2e09d0b8
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus
        pod-template-hash: 69dfd76c86
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:02:51Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/name: prometheus
          app.kubernetes.io/part-of: prometheus
          app.kubernetes.io/version: v3.2.1
          helm.sh/chart: prometheus-27.5.1
          pod-template-hash: 69dfd76c86
      spec:
        containers:
        - args:
          - --watched-dir=/etc/config
          - --listen-address=0.0.0.0:8080
          - --reload-url=http://127.0.0.1:9090/-/reload
          image: quay.io/prometheus-operator/prometheus-config-reloader:v0.80.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-server-configmap-reload
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
            readOnly: true
        - args:
          - --storage.tsdb.retention.time=15d
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          image: quay.io/prometheus/prometheus:v3.2.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          name: prometheus-server
          ports:
          - containerPort: 9090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 4
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-server
        serviceAccountName: prometheus-server
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-server
          name: config-volume
        - name: storage-volume
          persistentVolumeClaim:
            claimName: prometheus-server
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "17"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T05:22:52Z"
    generation: 2
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: prometheus
      app.kubernetes.io/version: v3.2.1
      helm.sh/chart: prometheus-27.5.1
      pod-template-hash: 76b67768bb
    name: prometheus-server-76b67768bb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-server
      uid: ff5f5216-ea72-4b0c-85a9-050bc9fbbdfd
    resourceVersion: "1065181"
    uid: 56ecc50f-b249-4663-8dc4-a289ca22b663
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus
        pod-template-hash: 76b67768bb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/name: prometheus
          app.kubernetes.io/part-of: prometheus
          app.kubernetes.io/version: v3.2.1
          helm.sh/chart: prometheus-27.5.1
          pod-template-hash: 76b67768bb
      spec:
        containers:
        - args:
          - --watched-dir=/etc/config
          - --listen-address=0.0.0.0:8080
          - --reload-url=http://127.0.0.1:9090/-/reload
          image: quay.io/prometheus-operator/prometheus-config-reloader:v0.80.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-server-configmap-reload
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
            readOnly: true
        - args:
          - --storage.tsdb.retention.time=15d
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          image: quay.io/prometheus/prometheus:v3.2.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          name: prometheus-server
          ports:
          - containerPort: 9090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 4
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-server
        serviceAccountName: prometheus-server
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-server
          name: config-volume
        - name: storage-volume
          persistentVolumeClaim:
            claimName: prometheus-server
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "11"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:27:02Z"
    generation: 2
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: prometheus
      app.kubernetes.io/version: v3.2.1
      helm.sh/chart: prometheus-27.5.1
      pod-template-hash: 7754b7944c
    name: prometheus-server-7754b7944c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-server
      uid: ff5f5216-ea72-4b0c-85a9-050bc9fbbdfd
    resourceVersion: "1033048"
    uid: 71a27061-7207-40c7-871a-7e693febe23b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus
        pod-template-hash: 7754b7944c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:26:54Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/name: prometheus
          app.kubernetes.io/part-of: prometheus
          app.kubernetes.io/version: v3.2.1
          helm.sh/chart: prometheus-27.5.1
          pod-template-hash: 7754b7944c
      spec:
        containers:
        - args:
          - --watched-dir=/etc/config
          - --listen-address=0.0.0.0:8080
          - --reload-url=http://127.0.0.1:9090/-/reload
          image: quay.io/prometheus-operator/prometheus-config-reloader:v0.80.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-server-configmap-reload
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
            readOnly: true
        - args:
          - --storage.tsdb.retention.time=15d
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          image: quay.io/prometheus/prometheus:v3.2.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          name: prometheus-server
          ports:
          - containerPort: 9090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 4
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-server
        serviceAccountName: prometheus-server
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-server
          name: config-volume
        - name: storage-volume
          persistentVolumeClaim:
            claimName: prometheus-server
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "12"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:39:29Z"
    generation: 2
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: prometheus
      app.kubernetes.io/version: v3.2.1
      helm.sh/chart: prometheus-27.5.1
      pod-template-hash: 84c7b85d7b
    name: prometheus-server-84c7b85d7b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-server
      uid: ff5f5216-ea72-4b0c-85a9-050bc9fbbdfd
    resourceVersion: "1034134"
    uid: 1395ac42-b979-4d93-8289-9dae2b68ad71
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus
        pod-template-hash: 84c7b85d7b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:39:20Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/name: prometheus
          app.kubernetes.io/part-of: prometheus
          app.kubernetes.io/version: v3.2.1
          helm.sh/chart: prometheus-27.5.1
          pod-template-hash: 84c7b85d7b
      spec:
        containers:
        - args:
          - --watched-dir=/etc/config
          - --listen-address=0.0.0.0:8080
          - --reload-url=http://127.0.0.1:9090/-/reload
          image: quay.io/prometheus-operator/prometheus-config-reloader:v0.80.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-server-configmap-reload
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
            readOnly: true
        - args:
          - --storage.tsdb.retention.time=15d
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          image: quay.io/prometheus/prometheus:v3.2.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          name: prometheus-server
          ports:
          - containerPort: 9090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 4
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-server
        serviceAccountName: prometheus-server
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-server
          name: config-volume
        - name: storage-volume
          persistentVolumeClaim:
            claimName: prometheus-server
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "16"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T05:14:55Z"
    generation: 2
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: prometheus
      app.kubernetes.io/version: v3.2.1
      helm.sh/chart: prometheus-27.5.1
      pod-template-hash: 86779cdb4d
    name: prometheus-server-86779cdb4d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-server
      uid: ff5f5216-ea72-4b0c-85a9-050bc9fbbdfd
    resourceVersion: "1059784"
    uid: 2e92b1d5-51e8-4a08-a718-3bb188121b43
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus
        pod-template-hash: 86779cdb4d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/name: prometheus
          app.kubernetes.io/part-of: prometheus
          app.kubernetes.io/version: v3.2.1
          helm.sh/chart: prometheus-27.5.1
          pod-template-hash: 86779cdb4d
      spec:
        containers:
        - args:
          - --watched-dir=/etc/config
          - --listen-address=0.0.0.0:8080
          - --reload-url=http://127.0.0.1:9090/-/reload
          image: quay.io/prometheus-operator/prometheus-config-reloader:v0.80.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-server-configmap-reload
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
            readOnly: true
        - args:
          - --storage.tsdb.retention.time=15d
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          image: quay.io/prometheus/prometheus:v3.2.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          name: prometheus-server
          ports:
          - containerPort: 9090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 4
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-server
        serviceAccountName: prometheus-server
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-server
          name: config-volume
        - name: storage-volume
          persistentVolumeClaim:
            claimName: prometheus-server
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "9"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T16:54:21Z"
    generation: 2
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: prometheus
      app.kubernetes.io/version: v3.2.1
      helm.sh/chart: prometheus-27.5.1
      pod-template-hash: b6cb6c54
    name: prometheus-server-b6cb6c54
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-server
      uid: ff5f5216-ea72-4b0c-85a9-050bc9fbbdfd
    resourceVersion: "1029492"
    uid: e06107cd-e91d-4bf3-8194-d8a06b7f376e
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus
        pod-template-hash: b6cb6c54
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T16:54:13Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/name: prometheus
          app.kubernetes.io/part-of: prometheus
          app.kubernetes.io/version: v3.2.1
          helm.sh/chart: prometheus-27.5.1
          pod-template-hash: b6cb6c54
      spec:
        containers:
        - args:
          - --watched-dir=/etc/config
          - --listen-address=0.0.0.0:8080
          - --reload-url=http://127.0.0.1:9090/-/reload
          image: quay.io/prometheus-operator/prometheus-config-reloader:v0.80.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-server-configmap-reload
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
            readOnly: true
        - args:
          - --storage.tsdb.retention.time=15d
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          image: quay.io/prometheus/prometheus:v3.2.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          name: prometheus-server
          ports:
          - containerPort: 9090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 4
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-server
        serviceAccountName: prometheus-server
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-server
          name: config-volume
        - name: storage-volume
          persistentVolumeClaim:
            claimName: prometheus-server
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "14"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-09T03:46:13Z"
    generation: 2
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: prometheus
      app.kubernetes.io/version: v3.2.1
      helm.sh/chart: prometheus-27.5.1
      pod-template-hash: bcc5c785f
    name: prometheus-server-bcc5c785f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-server
      uid: ff5f5216-ea72-4b0c-85a9-050bc9fbbdfd
    resourceVersion: "1057382"
    uid: 3995fb68-5a6b-405d-9232-2604c5c389d2
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus
        pod-template-hash: bcc5c785f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T03:46:05Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/name: prometheus
          app.kubernetes.io/part-of: prometheus
          app.kubernetes.io/version: v3.2.1
          helm.sh/chart: prometheus-27.5.1
          pod-template-hash: bcc5c785f
      spec:
        containers:
        - args:
          - --watched-dir=/etc/config
          - --listen-address=0.0.0.0:8080
          - --reload-url=http://127.0.0.1:9090/-/reload
          image: quay.io/prometheus-operator/prometheus-config-reloader:v0.80.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-server-configmap-reload
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
            readOnly: true
        - args:
          - --storage.tsdb.retention.time=15d
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          image: quay.io/prometheus/prometheus:v3.2.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          name: prometheus-server
          ports:
          - containerPort: 9090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 4
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-server
        serviceAccountName: prometheus-server
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-server
          name: config-volume
        - name: storage-volume
          persistentVolumeClaim:
            claimName: prometheus-server
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "13"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-04-08T17:48:02Z"
    generation: 2
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: prometheus
      app.kubernetes.io/version: v3.2.1
      helm.sh/chart: prometheus-27.5.1
      pod-template-hash: d7f959b5c
    name: prometheus-server-d7f959b5c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-server
      uid: ff5f5216-ea72-4b0c-85a9-050bc9fbbdfd
    resourceVersion: "1053770"
    uid: 32a35906-7ade-4e07-9fc0-5f912cef5bc8
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus
        pod-template-hash: d7f959b5c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:47:53Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/name: prometheus
          app.kubernetes.io/part-of: prometheus
          app.kubernetes.io/version: v3.2.1
          helm.sh/chart: prometheus-27.5.1
          pod-template-hash: d7f959b5c
      spec:
        containers:
        - args:
          - --watched-dir=/etc/config
          - --listen-address=0.0.0.0:8080
          - --reload-url=http://127.0.0.1:9090/-/reload
          image: quay.io/prometheus-operator/prometheus-config-reloader:v0.80.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-server-configmap-reload
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
            readOnly: true
        - args:
          - --storage.tsdb.retention.time=15d
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          image: quay.io/prometheus/prometheus:v3.2.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          name: prometheus-server
          ports:
          - containerPort: 9090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 4
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-server
        serviceAccountName: prometheus-server
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-server
          name: config-volume
        - name: storage-volume
          persistentVolumeClaim:
            claimName: prometheus-server
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "19"
      instrumentation.opentelemetry.io/inject-python: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-08T17:26:56Z"
    generation: 2
    labels:
      app: recommendationservice
      pod-template-hash: 5c66d8fb89
    name: recommendationservice-5c66d8fb89
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: recommendationservice
      uid: 7e8a9ef7-9627-4db3-b7bf-2243878b79e8
    resourceVersion: "1033445"
    uid: 9d6bd05c-7583-4092-bf21-7700d38cac98
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: recommendationservice
        pod-template-hash: 5c66d8fb89
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:26:54Z"
        creationTimestamp: null
        labels:
          app: recommendationservice
          pod-template-hash: 5c66d8fb89
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: recommendationservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=recommendationservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: recommendationservice
        serviceAccountName: recommendationservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
      instrumentation.opentelemetry.io/inject-python: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-08T17:47:56Z"
    generation: 2
    labels:
      app: recommendationservice
      pod-template-hash: 5d9cb69db7
    name: recommendationservice-5d9cb69db7
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: recommendationservice
      uid: 7e8a9ef7-9627-4db3-b7bf-2243878b79e8
    resourceVersion: "1054154"
    uid: abdfe323-dcc4-4154-a626-19c04ffb59ca
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: recommendationservice
        pod-template-hash: 5d9cb69db7
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:47:53Z"
        creationTimestamp: null
        labels:
          app: recommendationservice
          pod-template-hash: 5d9cb69db7
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: recommendationservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=recommendationservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: recommendationservice
        serviceAccountName: recommendationservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "27"
      instrumentation.opentelemetry.io/inject-python: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T07:11:42Z"
    generation: 3
    labels:
      app: recommendationservice
      pod-template-hash: 6748584fbf
    name: recommendationservice-6748584fbf
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: recommendationservice
      uid: 7e8a9ef7-9627-4db3-b7bf-2243878b79e8
    resourceVersion: "1066085"
    uid: 3817f95b-0145-40cf-9b8c-1d31368923a0
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: recommendationservice
        pod-template-hash: 6748584fbf
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: recommendationservice
          pod-template-hash: 6748584fbf
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: recommendationservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=recommendationservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: recommendationservice
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: recommendationservice
        serviceAccountName: recommendationservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
      instrumentation.opentelemetry.io/inject-python: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T03:46:08Z"
    generation: 2
    labels:
      app: recommendationservice
      pod-template-hash: 6dcb46bc85
    name: recommendationservice-6dcb46bc85
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: recommendationservice
      uid: 7e8a9ef7-9627-4db3-b7bf-2243878b79e8
    resourceVersion: "1057801"
    uid: efff0a33-883a-4f4e-b0c2-124fec6bc99c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: recommendationservice
        pod-template-hash: 6dcb46bc85
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T03:46:05Z"
        creationTimestamp: null
        labels:
          app: recommendationservice
          pod-template-hash: 6dcb46bc85
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: recommendationservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=recommendationservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: recommendationservice
        serviceAccountName: recommendationservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "26"
      instrumentation.opentelemetry.io/inject-python: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T07:11:07Z"
    generation: 2
    labels:
      app: recommendationservice
      pod-template-hash: 744db8757f
    name: recommendationservice-744db8757f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: recommendationservice
      uid: 7e8a9ef7-9627-4db3-b7bf-2243878b79e8
    resourceVersion: "1065192"
    uid: 76475f01-3c79-4f93-9eac-d46a9f67e863
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: recommendationservice
        pod-template-hash: 744db8757f
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app: recommendationservice
          pod-template-hash: 744db8757f
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: recommendationservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=recommendationservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: recommendationservice
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: recommendationservice
        serviceAccountName: recommendationservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "18"
      instrumentation.opentelemetry.io/inject-python: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-08T17:02:54Z"
    generation: 2
    labels:
      app: recommendationservice
      pod-template-hash: 756d78d994
    name: recommendationservice-756d78d994
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: recommendationservice
      uid: 7e8a9ef7-9627-4db3-b7bf-2243878b79e8
    resourceVersion: "1031934"
    uid: 5a704e2e-f575-4d22-b5e6-c0a787dffb25
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: recommendationservice
        pod-template-hash: 756d78d994
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:02:51Z"
        creationTimestamp: null
        labels:
          app: recommendationservice
          pod-template-hash: 756d78d994
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: recommendationservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=recommendationservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: recommendationservice
        serviceAccountName: recommendationservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "25"
      instrumentation.opentelemetry.io/inject-python: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T05:22:45Z"
    generation: 2
    labels:
      app: recommendationservice
      pod-template-hash: 77496c7954
    name: recommendationservice-77496c7954
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: recommendationservice
      uid: 7e8a9ef7-9627-4db3-b7bf-2243878b79e8
    resourceVersion: "1066266"
    uid: ae7a957d-7c2c-4cab-b312-20ed858eea9b
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: recommendationservice
        pod-template-hash: 77496c7954
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app: recommendationservice
          pod-template-hash: 77496c7954
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: recommendationservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=recommendationservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: recommendationservice
        serviceAccountName: recommendationservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "28"
      instrumentation.opentelemetry.io/inject-python: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T07:14:49Z"
    generation: 2
    labels:
      app: recommendationservice
      pod-template-hash: 777fc67b6c
    name: recommendationservice-777fc67b6c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: recommendationservice
      uid: 7e8a9ef7-9627-4db3-b7bf-2243878b79e8
    resourceVersion: "1066253"
    uid: 49c4f82c-8599-4faa-90f5-6981a4e0674b
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: recommendationservice
        pod-template-hash: 777fc67b6c
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: recommendationservice
          pod-template-hash: 777fc67b6c
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: recommendationservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=recommendationservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: recommendationservice
        serviceAccountName: recommendationservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "20"
      instrumentation.opentelemetry.io/inject-python: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-08T17:39:23Z"
    generation: 2
    labels:
      app: recommendationservice
      pod-template-hash: 7bcb8b57d8
    name: recommendationservice-7bcb8b57d8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: recommendationservice
      uid: 7e8a9ef7-9627-4db3-b7bf-2243878b79e8
    resourceVersion: "1034562"
    uid: 6c250d87-5566-402b-bdd5-17d518bda225
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: recommendationservice
        pod-template-hash: 7bcb8b57d8
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:39:20Z"
        creationTimestamp: null
        labels:
          app: recommendationservice
          pod-template-hash: 7bcb8b57d8
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: recommendationservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=recommendationservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: recommendationservice
        serviceAccountName: recommendationservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "23"
      instrumentation.opentelemetry.io/inject-python: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T05:09:48Z"
    generation: 2
    labels:
      app: recommendationservice
      pod-template-hash: 86b6b57674
    name: recommendationservice-86b6b57674
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: recommendationservice
      uid: 7e8a9ef7-9627-4db3-b7bf-2243878b79e8
    resourceVersion: "1058890"
    uid: 8f2465b2-765a-4004-b443-25334b28ed04
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: recommendationservice
        pod-template-hash: 86b6b57674
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
        creationTimestamp: null
        labels:
          app: recommendationservice
          pod-template-hash: 86b6b57674
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: recommendationservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=recommendationservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: recommendationservice
        serviceAccountName: recommendationservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "24"
      instrumentation.opentelemetry.io/inject-python: default/online-boutique-instrumentation
    creationTimestamp: "2025-04-09T05:14:48Z"
    generation: 2
    labels:
      app: recommendationservice
      pod-template-hash: dfb99fb56
    name: recommendationservice-dfb99fb56
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: recommendationservice
      uid: 7e8a9ef7-9627-4db3-b7bf-2243878b79e8
    resourceVersion: "1060218"
    uid: 0fb88e15-73f1-4084-bff4-89a1716fbee8
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: recommendationservice
        pod-template-hash: dfb99fb56
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
        creationTimestamp: null
        labels:
          app: recommendationservice
          pod-template-hash: dfb99fb56
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: recommendationservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=recommendationservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: recommendationservice
        serviceAccountName: recommendationservice
        terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
    creationTimestamp: "2025-04-08T16:54:17Z"
    generation: 2
    labels:
      app: redis-cart
      pod-template-hash: 54dcc95c4d
    name: redis-cart-54dcc95c4d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-cart
      uid: 9607539f-c373-4aac-be3c-20e28441565e
    resourceVersion: "1029691"
    uid: 67e91f06-be76-4d21-8a24-9d274269adef
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: redis-cart
        pod-template-hash: 54dcc95c4d
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T16:54:13Z"
        creationTimestamp: null
        labels:
          app: redis-cart
          pod-template-hash: 54dcc95c4d
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "17"
    creationTimestamp: "2025-04-09T05:22:46Z"
    generation: 2
    labels:
      app: redis-cart
      pod-template-hash: 56c8d5fb68
    name: redis-cart-56c8d5fb68
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-cart
      uid: 9607539f-c373-4aac-be3c-20e28441565e
    resourceVersion: "1065455"
    uid: f760ad9e-ed77-48aa-9e4d-8ef059b8c209
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: redis-cart
        pod-template-hash: 56c8d5fb68
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app: redis-cart
          pod-template-hash: 56c8d5fb68
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "8"
    creationTimestamp: "2025-04-08T16:29:42Z"
    generation: 2
    labels:
      app: redis-cart
      pod-template-hash: 56d99b4d9b
    name: redis-cart-56d99b4d9b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-cart
      uid: 9607539f-c373-4aac-be3c-20e28441565e
    resourceVersion: "1028563"
    uid: 34fe777e-6330-4641-8a5f-2716c60061de
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: redis-cart
        pod-template-hash: 56d99b4d9b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T16:29:39Z"
        creationTimestamp: null
        labels:
          app: redis-cart
          pod-template-hash: 56d99b4d9b
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "18"
    creationTimestamp: "2025-04-09T07:11:43Z"
    generation: 1
    labels:
      app: redis-cart
      pod-template-hash: 5db848f98b
    name: redis-cart-5db848f98b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-cart
      uid: 9607539f-c373-4aac-be3c-20e28441565e
    resourceVersion: "1065426"
    uid: 798ffa43-afc9-4fa1-8398-4d23ca5adc3f
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: redis-cart
        pod-template-hash: 5db848f98b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: redis-cart
          pod-template-hash: 5db848f98b
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "16"
    creationTimestamp: "2025-04-09T05:14:48Z"
    generation: 2
    labels:
      app: redis-cart
      pod-template-hash: 6c757d774
    name: redis-cart-6c757d774
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-cart
      uid: 9607539f-c373-4aac-be3c-20e28441565e
    resourceVersion: "1060017"
    uid: c03f020a-dba3-4461-8b86-25637456aa81
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: redis-cart
        pod-template-hash: 6c757d774
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
        creationTimestamp: null
        labels:
          app: redis-cart
          pod-template-hash: 6c757d774
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "15"
    creationTimestamp: "2025-04-09T05:09:48Z"
    generation: 2
    labels:
      app: redis-cart
      pod-template-hash: 7945d55f88
    name: redis-cart-7945d55f88
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-cart
      uid: 9607539f-c373-4aac-be3c-20e28441565e
    resourceVersion: "1058644"
    uid: 1503ca98-e88d-4cfb-b454-ff55603112bb
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: redis-cart
        pod-template-hash: 7945d55f88
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
        creationTimestamp: null
        labels:
          app: redis-cart
          pod-template-hash: 7945d55f88
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "12"
    creationTimestamp: "2025-04-08T17:39:23Z"
    generation: 2
    labels:
      app: redis-cart
      pod-template-hash: 7c67db94f8
    name: redis-cart-7c67db94f8
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-cart
      uid: 9607539f-c373-4aac-be3c-20e28441565e
    resourceVersion: "1034326"
    uid: 5945ed03-2363-4641-b32a-5c56bcfaa171
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: redis-cart
        pod-template-hash: 7c67db94f8
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:39:20Z"
        creationTimestamp: null
        labels:
          app: redis-cart
          pod-template-hash: 7c67db94f8
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "14"
    creationTimestamp: "2025-04-09T03:46:08Z"
    generation: 2
    labels:
      app: redis-cart
      pod-template-hash: 7f688658fc
    name: redis-cart-7f688658fc
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-cart
      uid: 9607539f-c373-4aac-be3c-20e28441565e
    resourceVersion: "1057619"
    uid: f3add442-76bc-49c3-aaa9-36c4a076bc37
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: redis-cart
        pod-template-hash: 7f688658fc
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T03:46:05Z"
        creationTimestamp: null
        labels:
          app: redis-cart
          pod-template-hash: 7f688658fc
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "11"
    creationTimestamp: "2025-04-08T17:26:57Z"
    generation: 2
    labels:
      app: redis-cart
      pod-template-hash: 84d4f6c58f
    name: redis-cart-84d4f6c58f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-cart
      uid: 9607539f-c373-4aac-be3c-20e28441565e
    resourceVersion: "1033223"
    uid: 0ce631ea-9e61-4ef3-88da-0666f1557bf3
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: redis-cart
        pod-template-hash: 84d4f6c58f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:26:54Z"
        creationTimestamp: null
        labels:
          app: redis-cart
          pod-template-hash: 84d4f6c58f
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "13"
    creationTimestamp: "2025-04-08T17:47:56Z"
    generation: 2
    labels:
      app: redis-cart
      pod-template-hash: c64bb85cf
    name: redis-cart-c64bb85cf
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-cart
      uid: 9607539f-c373-4aac-be3c-20e28441565e
    resourceVersion: "1054002"
    uid: 38d5e239-a4a3-42d4-86c6-a8180688f41a
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: redis-cart
        pod-template-hash: c64bb85cf
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:47:53Z"
        creationTimestamp: null
        labels:
          app: redis-cart
          pod-template-hash: c64bb85cf
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
    creationTimestamp: "2025-04-08T17:02:54Z"
    generation: 2
    labels:
      app: redis-cart
      pod-template-hash: cc58846bd
    name: redis-cart-cc58846bd
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis-cart
      uid: 9607539f-c373-4aac-be3c-20e28441565e
    resourceVersion: "1031799"
    uid: 28644b13-469e-4a61-8658-53eaecfc9ce8
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: redis-cart
        pod-template-hash: cc58846bd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:02:51Z"
        creationTimestamp: null
        labels:
          app: redis-cart
          pod-template-hash: cc58846bd
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "25"
    creationTimestamp: "2025-04-09T05:14:49Z"
    generation: 3
    labels:
      app: shippingservice
      pod-template-hash: 57867b5bfc
    name: shippingservice-57867b5bfc
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shippingservice
      uid: a8562913-c651-48d6-8155-51416caedb4e
    resourceVersion: "1059518"
    uid: 38b8f80d-4274-4196-ac3d-0f47c547c66f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: shippingservice
        pod-template-hash: 57867b5bfc
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/shippingservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
        creationTimestamp: null
        labels:
          app: shippingservice
          pod-template-hash: 57867b5bfc
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: shippingservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=shippingservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: shippingservice
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: shippingservice
        serviceAccountName: shippingservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "24"
    creationTimestamp: "2025-04-09T05:14:41Z"
    generation: 3
    labels:
      app: shippingservice
      pod-template-hash: 5b4c9cccb7
    name: shippingservice-5b4c9cccb7
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shippingservice
      uid: a8562913-c651-48d6-8155-51416caedb4e
    resourceVersion: "1058539"
    uid: d51092dc-d5b3-471c-9034-c296ce196861
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: shippingservice
        pod-template-hash: 5b4c9cccb7
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/shippingservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
        creationTimestamp: null
        labels:
          app: shippingservice
          pod-template-hash: 5b4c9cccb7
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: shippingservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=shippingservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: shippingservice
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: shippingservice
        serviceAccountName: shippingservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "19"
    creationTimestamp: "2025-04-08T17:26:57Z"
    generation: 3
    labels:
      app: shippingservice
      pod-template-hash: 6556c46d6d
    name: shippingservice-6556c46d6d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shippingservice
      uid: a8562913-c651-48d6-8155-51416caedb4e
    resourceVersion: "1033063"
    uid: b211aaf5-03d5-4ecd-a977-dd73b63d8259
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: shippingservice
        pod-template-hash: 6556c46d6d
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/shippingservice
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:26:54Z"
        creationTimestamp: null
        labels:
          app: shippingservice
          pod-template-hash: 6556c46d6d
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: shippingservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=shippingservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: shippingservice
        serviceAccountName: shippingservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "23"
    creationTimestamp: "2025-04-09T05:09:48Z"
    generation: 3
    labels:
      app: shippingservice
      pod-template-hash: 65768b87cf
    name: shippingservice-65768b87cf
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shippingservice
      uid: a8562913-c651-48d6-8155-51416caedb4e
    resourceVersion: "1058247"
    uid: 8148cb73-51b0-46a5-8aa4-d40ab266cf78
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: shippingservice
        pod-template-hash: 65768b87cf
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/shippingservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:09:45Z"
        creationTimestamp: null
        labels:
          app: shippingservice
          pod-template-hash: 65768b87cf
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: shippingservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=shippingservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: shippingservice
        serviceAccountName: shippingservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "27"
    creationTimestamp: "2025-04-09T05:22:46Z"
    generation: 2
    labels:
      app: shippingservice
      pod-template-hash: 66876d6f7
    name: shippingservice-66876d6f7
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shippingservice
      uid: a8562913-c651-48d6-8155-51416caedb4e
    resourceVersion: "1064787"
    uid: 2b086250-a66d-4f1c-b106-536abb83810d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: shippingservice
        pod-template-hash: 66876d6f7
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/shippingservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app: shippingservice
          pod-template-hash: 66876d6f7
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: shippingservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=shippingservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: shippingservice
        serviceAccountName: shippingservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "26"
    creationTimestamp: "2025-04-09T05:22:37Z"
    generation: 3
    labels:
      app: shippingservice
      pod-template-hash: 6c995c7559
    name: shippingservice-6c995c7559
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shippingservice
      uid: a8562913-c651-48d6-8155-51416caedb4e
    resourceVersion: "1059952"
    uid: b322befa-e72d-46cd-a40e-c4ee51a35a19
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: shippingservice
        pod-template-hash: 6c995c7559
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/shippingservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:14:45Z"
        creationTimestamp: null
        labels:
          app: shippingservice
          pod-template-hash: 6c995c7559
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: shippingservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=shippingservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: shippingservice
        serviceAccountName: shippingservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "28"
    creationTimestamp: "2025-04-09T07:11:08Z"
    generation: 2
    labels:
      app: shippingservice
      pod-template-hash: 79499d649b
    name: shippingservice-79499d649b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shippingservice
      uid: a8562913-c651-48d6-8155-51416caedb4e
    resourceVersion: "1065307"
    uid: 09c5f45a-88c7-46f1-9b0f-50b891700a6c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: shippingservice
        pod-template-hash: 79499d649b
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/shippingservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T05:22:42Z"
        creationTimestamp: null
        labels:
          app: shippingservice
          pod-template-hash: 79499d649b
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: shippingservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=shippingservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: shippingservice
        serviceAccountName: shippingservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "29"
    creationTimestamp: "2025-04-09T07:11:43Z"
    generation: 1
    labels:
      app: shippingservice
      pod-template-hash: 7bb6954db6
    name: shippingservice-7bb6954db6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shippingservice
      uid: a8562913-c651-48d6-8155-51416caedb4e
    resourceVersion: "1065281"
    uid: 88cba6f6-a1e0-41cf-a28c-89ebf9aea8e7
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: shippingservice
        pod-template-hash: 7bb6954db6
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/shippingservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: shippingservice
          pod-template-hash: 7bb6954db6
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: shippingservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=shippingservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: shippingservice
        serviceAccountName: shippingservice
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "21"
    creationTimestamp: "2025-04-08T17:47:57Z"
    generation: 3
    labels:
      app: shippingservice
      pod-template-hash: 7c476d48d6
    name: shippingservice-7c476d48d6
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shippingservice
      uid: a8562913-c651-48d6-8155-51416caedb4e
    resourceVersion: "1053802"
    uid: 212226ed-d6fb-428c-9091-5c99698904c6
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: shippingservice
        pod-template-hash: 7c476d48d6
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/shippingservice
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:47:53Z"
        creationTimestamp: null
        labels:
          app: shippingservice
          pod-template-hash: 7c476d48d6
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: shippingservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=shippingservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: shippingservice
        serviceAccountName: shippingservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "20"
    creationTimestamp: "2025-04-08T17:39:23Z"
    generation: 3
    labels:
      app: shippingservice
      pod-template-hash: 7db58b7665
    name: shippingservice-7db58b7665
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shippingservice
      uid: a8562913-c651-48d6-8155-51416caedb4e
    resourceVersion: "1034176"
    uid: 012ca212-cdf4-46b5-8b7a-789c29c656a8
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: shippingservice
        pod-template-hash: 7db58b7665
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/shippingservice
          kubectl.kubernetes.io/restartedAt: "2025-04-08T17:39:20Z"
        creationTimestamp: null
        labels:
          app: shippingservice
          pod-template-hash: 7db58b7665
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: shippingservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=shippingservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: shippingservice
        serviceAccountName: shippingservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "22"
    creationTimestamp: "2025-04-09T03:46:09Z"
    generation: 3
    labels:
      app: shippingservice
      pod-template-hash: 85bd65fc64
    name: shippingservice-85bd65fc64
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: shippingservice
      uid: a8562913-c651-48d6-8155-51416caedb4e
    resourceVersion: "1057436"
    uid: f87b01e8-2048-419f-aca3-0f51310ac785
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: shippingservice
        pod-template-hash: 85bd65fc64
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/shippingservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T03:46:05Z"
        creationTimestamp: null
        labels:
          app: shippingservice
          pod-template-hash: 85bd65fc64
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: shippingservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=shippingservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: otel-collector-collector.observability.svc.cluster.local:4317
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: shippingservice
        serviceAccountName: shippingservice
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-19T12:13:17Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: alertmanager
      app.kubernetes.io/version: v0.28.0
      helm.sh/chart: alertmanager-1.15.0
    name: prometheus-alertmanager
    namespace: default
    resourceVersion: "10024"
    uid: d3074936-f0f1-46e9-990e-e213aef0bcb1
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: alertmanager
    serviceName: prometheus-alertmanager-headless
    template:
      metadata:
        annotations:
          checksum/config: 5c40e84d3cd8d57b76c64cf9b7aaa50c34f0bdd11c5014c8cb53ffbe3cc1f844
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/name: alertmanager
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --storage.path=/alertmanager
          - --config.file=/etc/alertmanager/alertmanager.yml
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          image: quay.io/prometheus/alertmanager:v0.28.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: alertmanager
          ports:
          - containerPort: 9093
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            runAsGroup: 65534
            runAsNonRoot: true
            runAsUser: 65534
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/alertmanager
            name: config
          - mountPath: /alertmanager
            name: storage
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-alertmanager
        serviceAccountName: prometheus-alertmanager
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-alertmanager
          name: config
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: storage
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: prometheus-alertmanager-698ffd5d8c
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: prometheus-alertmanager-698ffd5d8c
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
