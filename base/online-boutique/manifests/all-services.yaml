apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "26"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"26"},"creationTimestamp":"2025-03-20T14:08:35Z","generation":26,"labels":{"app":"adservice","app.kubernetes.io/instance":"observability"},"name":"adservice","namespace":"default","resourceVersion":"1066334","uid":"677490b3-a32b-4ce6-836a-eed20df96bfc"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"adservice"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"kubectl.kubernetes.io/restartedAt":"2025-04-09T07:11:40Z"},"creationTimestamp":null,"labels":{"app":"adservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"9555"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice:v0.10.2","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"grpc":{"port":9555,"service":""},"initialDelaySeconds":20,"periodSeconds":15,"successThreshold":1,"timeoutSeconds":1},"name":"server","ports":[{"containerPort":9555,"protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"grpc":{"port":9555,"service":""},"initialDelaySeconds":20,"periodSeconds":15,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{"cpu":"300m","memory":"300Mi"},"requests":{"cpu":"200m","memory":"180Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccount":"adservice","serviceAccountName":"adservice","terminationGracePeriodSeconds":5}}},"status":{"availableReplicas":1,"conditions":[{"lastTransitionTime":"2025-03-20T14:09:07Z","lastUpdateTime":"2025-03-20T14:09:07Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"},{"lastTransitionTime":"2025-04-01T13:12:34Z","lastUpdateTime":"2025-04-09T07:15:20Z","message":"ReplicaSet \"adservice-7cd4fc8797\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"}],"observedGeneration":26,"readyReplicas":1,"replicas":1,"updatedReplicas":1}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    generation: 27
    labels:
      app: adservice
      app.kubernetes.io/instance: observability
    name: adservice
    namespace: default
    resourceVersion: "1155596"
    uid: 677490b3-a32b-4ce6-836a-eed20df96bfc
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: adservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: adservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "9555"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/adservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 9555
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 9555
              service: ""
            initialDelaySeconds: 20
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 180Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: adservice
        serviceAccountName: adservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-20T14:09:07Z"
      lastUpdateTime: "2025-03-20T14:09:07Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-01T13:12:34Z"
      lastUpdateTime: "2025-04-09T07:15:20Z"
      message: ReplicaSet "adservice-7cd4fc8797" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 27
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "28"
      instrumentation.opentelemetry.io/inject-go: default/online-boutique-instrumentation
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"28","instrumentation.opentelemetry.io/inject-go":"default/online-boutique-instrumentation"},"creationTimestamp":"2025-03-20T14:08:35Z","generation":29,"labels":{"app":"cartservice","app.kubernetes.io/instance":"observability"},"name":"cartservice","namespace":"default","resourceVersion":"1066314","uid":"637edd15-4ac6-4335-bd26-cb57846d3337"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"cartservice"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"kubectl.kubernetes.io/restartedAt":"2025-04-09T07:11:40Z"},"creationTimestamp":null,"labels":{"app":"cartservice"}},"spec":{"containers":[{"env":[{"name":"REDIS_ADDR","value":"redis-cart:6379"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.2","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"grpc":{"port":7070,"service":""},"initialDelaySeconds":15,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"name":"server","ports":[{"containerPort":7070,"protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"grpc":{"port":7070,"service":""},"initialDelaySeconds":15,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{"cpu":"300m","memory":"128Mi"},"requests":{"cpu":"200m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccount":"cartservice","serviceAccountName":"cartservice","terminationGracePeriodSeconds":5}}},"status":{"availableReplicas":1,"conditions":[{"lastTransitionTime":"2025-03-20T14:09:05Z","lastUpdateTime":"2025-03-20T14:09:05Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"},{"lastTransitionTime":"2025-04-01T13:16:22Z","lastUpdateTime":"2025-04-09T07:15:19Z","message":"ReplicaSet \"cartservice-ccd9b4798\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"}],"observedGeneration":29,"readyReplicas":1,"replicas":1,"updatedReplicas":1}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    generation: 30
    labels:
      app: cartservice
      app.kubernetes.io/instance: observability
    name: cartservice
    namespace: default
    resourceVersion: "1155598"
    uid: 637edd15-4ac6-4335-bd26-cb57846d3337
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: cartservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: cartservice
      spec:
        containers:
        - env:
          - name: REDIS_ADDR
            value: redis-cart:6379
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/cartservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7070
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7070
              service: ""
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: cartservice
        serviceAccountName: cartservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-20T14:09:05Z"
      lastUpdateTime: "2025-03-20T14:09:05Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-01T13:16:22Z"
      lastUpdateTime: "2025-04-09T07:15:19Z"
      message: ReplicaSet "cartservice-ccd9b4798" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 30
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "29"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"29"},"creationTimestamp":"2025-03-20T14:08:34Z","generation":29,"labels":{"app":"checkoutservice","app.kubernetes.io/instance":"observability"},"name":"checkoutservice","namespace":"default","resourceVersion":"1065401","uid":"af4bfc69-b3af-4dcb-969d-e6d886a056c3"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"checkoutservice"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"instrumentation.opentelemetry.io/inject-go":"go-instrumentation","instrumentation.opentelemetry.io/otel-go-auto-target-exe":"/src/checkoutservice","kubectl.kubernetes.io/restartedAt":"2025-04-09T07:11:40Z"},"creationTimestamp":null,"labels":{"app":"checkoutservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"5050"},{"name":"PRODUCT_CATALOG_SERVICE_ADDR","value":"productcatalogservice:3550"},{"name":"SHIPPING_SERVICE_ADDR","value":"shippingservice:50051"},{"name":"PAYMENT_SERVICE_ADDR","value":"paymentservice:50051"},{"name":"EMAIL_SERVICE_ADDR","value":"emailservice:5000"},{"name":"CURRENCY_SERVICE_ADDR","value":"currencyservice:7000"},{"name":"CART_SERVICE_ADDR","value":"cartservice:7070"},{"name":"OTEL_SERVICE_NAME","value":"checkoutservice"},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"service.namespace=default,service.name=checkoutservice"},{"name":"OTEL_EXPORTER_OTLP_ENDPOINT","value":"http://otel-collector-collector.observability.svc.cluster.local:4318"},{"name":"OTEL_EXPORTER_OTLP_PROTOCOL","value":"http/protobuf"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.2","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"grpc":{"port":5050,"service":""},"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"name":"server","ports":[{"containerPort":5050,"protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"grpc":{"port":5050,"service":""},"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1000},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"serviceAccount":"checkoutservice","serviceAccountName":"checkoutservice","terminationGracePeriodSeconds":30}}},"status":{"availableReplicas":1,"conditions":[{"lastTransitionTime":"2025-03-20T14:08:35Z","lastUpdateTime":"2025-03-20T14:08:35Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"},{"lastTransitionTime":"2025-04-09T05:09:45Z","lastUpdateTime":"2025-04-09T07:11:51Z","message":"ReplicaSet \"checkoutservice-f55f7d5bd\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"}],"observedGeneration":29,"readyReplicas":1,"replicas":1,"updatedReplicas":1}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    generation: 30
    labels:
      app: checkoutservice
      app.kubernetes.io/instance: observability
    name: checkoutservice
    namespace: default
    resourceVersion: "1155587"
    uid: af4bfc69-b3af-4dcb-969d-e6d886a056c3
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: checkoutservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/checkoutservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: checkoutservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: PAYMENT_SERVICE_ADDR
            value: paymentservice:50051
          - name: EMAIL_SERVICE_ADDR
            value: emailservice:5000
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: OTEL_SERVICE_NAME
            value: checkoutservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=checkoutservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/checkoutservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 5050
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 5050
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: checkoutservice
        serviceAccountName: checkoutservice
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-20T14:08:35Z"
      lastUpdateTime: "2025-03-20T14:08:35Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-09T05:09:45Z"
      lastUpdateTime: "2025-04-09T07:11:51Z"
      message: ReplicaSet "checkoutservice-f55f7d5bd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 30
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "27"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"27"},"creationTimestamp":"2025-03-20T14:08:35Z","generation":27,"labels":{"app":"currencyservice","app.kubernetes.io/instance":"observability"},"name":"currencyservice","namespace":"default","resourceVersion":"1149811","uid":"8ad21345-3f4b-4e22-95c4-c714130064cc"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"currencyservice"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"instrumentation.opentelemetry.io/inject-java":"java-instrumentation","kubectl.kubernetes.io/restartedAt":"2025-04-09T07:11:40Z"},"creationTimestamp":null,"labels":{"app":"currencyservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"7000"},{"name":"DISABLE_PROFILER","value":"1"},{"name":"OTEL_SERVICE_NAME","value":"productcatalogservice"},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"service.namespace=default,service.name=productcatalogservice"},{"name":"OTEL_EXPORTER_OTLP_ENDPOINT","value":"http://otel-collector-collector.observability.svc.cluster.local:4318"},{"name":"OTEL_EXPORTER_OTLP_PROTOCOL","value":"http/protobuf"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.2","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"grpc":{"port":7000,"service":""},"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"name":"server","ports":[{"containerPort":7000,"name":"grpc","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"grpc":{"port":7000,"service":""},"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccount":"currencyservice","serviceAccountName":"currencyservice","terminationGracePeriodSeconds":5}}},"status":{"availableReplicas":1,"conditions":[{"lastTransitionTime":"2025-04-01T13:17:55Z","lastUpdateTime":"2025-04-09T07:14:56Z","message":"ReplicaSet \"currencyservice-7fb54cdd8f\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"},{"lastTransitionTime":"2025-04-11T06:28:39Z","lastUpdateTime":"2025-04-11T06:28:39Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"}],"observedGeneration":27,"readyReplicas":1,"replicas":1,"updatedReplicas":1}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    generation: 28
    labels:
      app: currencyservice
      app.kubernetes.io/instance: observability
    name: currencyservice
    namespace: default
    resourceVersion: "1155589"
    uid: 8ad21345-3f4b-4e22-95c4-c714130064cc
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: currencyservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: currencyservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "7000"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/currencyservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 7000
            name: grpc
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 7000
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: currencyservice
        serviceAccountName: currencyservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-04-01T13:17:55Z"
      lastUpdateTime: "2025-04-09T07:14:56Z"
      message: ReplicaSet "currencyservice-7fb54cdd8f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-04-11T06:28:39Z"
      lastUpdateTime: "2025-04-11T06:28:39Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 28
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "27"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"27"},"creationTimestamp":"2025-03-20T14:08:34Z","generation":27,"labels":{"app":"emailservice","app.kubernetes.io/instance":"observability"},"name":"emailservice","namespace":"default","resourceVersion":"1066247","uid":"0717bd0b-b39c-43d7-a376-7150560e24f0"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"emailservice"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"instrumentation.opentelemetry.io/inject-python":"python-instrumentation","kubectl.kubernetes.io/restartedAt":"2025-04-09T07:11:40Z"},"creationTimestamp":null,"labels":{"app":"emailservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"8080"},{"name":"DISABLE_PROFILER","value":"1"},{"name":"OTEL_SERVICE_NAME","value":"emailservice"},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"service.namespace=default,service.name=emailservice"},{"name":"OTEL_EXPORTER_OTLP_ENDPOINT","value":"http://otel-collector-collector.observability.svc.cluster.local:4318"},{"name":"OTEL_EXPORTER_OTLP_PROTOCOL","value":"http/protobuf"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.2","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"grpc":{"port":8080,"service":""},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"name":"server","ports":[{"containerPort":8080,"protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"grpc":{"port":8080,"service":""},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccount":"emailservice","serviceAccountName":"emailservice","terminationGracePeriodSeconds":5}}},"status":{"availableReplicas":1,"conditions":[{"lastTransitionTime":"2025-03-20T14:08:39Z","lastUpdateTime":"2025-03-20T14:08:39Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"},{"lastTransitionTime":"2025-04-01T13:18:45Z","lastUpdateTime":"2025-04-09T07:15:00Z","message":"ReplicaSet \"emailservice-d55bc9b77\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"}],"observedGeneration":27,"readyReplicas":1,"replicas":1,"updatedReplicas":1}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    generation: 28
    labels:
      app: emailservice
      app.kubernetes.io/instance: observability
    name: emailservice
    namespace: default
    resourceVersion: "1155580"
    uid: 0717bd0b-b39c-43d7-a376-7150560e24f0
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: emailservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: emailservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: emailservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=emailservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/emailservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: emailservice
        serviceAccountName: emailservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-20T14:08:39Z"
      lastUpdateTime: "2025-03-20T14:08:39Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-01T13:18:45Z"
      lastUpdateTime: "2025-04-09T07:15:00Z"
      message: ReplicaSet "emailservice-d55bc9b77" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 28
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "33"
      instrumentation.opentelemetry.io/inject-nodejs: default/online-boutique-instrumentation
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"33","instrumentation.opentelemetry.io/inject-nodejs":"default/online-boutique-instrumentation"},"creationTimestamp":"2025-03-20T14:08:34Z","generation":34,"labels":{"app":"frontend","app.kubernetes.io/instance":"observability"},"name":"frontend","namespace":"default","resourceVersion":"1068460","uid":"1eab5141-6590-4208-9e3b-f101d6bc8e8d"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"frontend"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"instrumentation.opentelemetry.io/inject-go":"go-instrumentation","instrumentation.opentelemetry.io/otel-go-auto-target-exe":"/src/server","kubectl.kubernetes.io/restartedAt":"2025-04-09T07:11:40Z","sidecar.istio.io/rewriteAppHTTPProbers":"true"},"creationTimestamp":null,"labels":{"app":"frontend"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"8080"},{"name":"PRODUCT_CATALOG_SERVICE_ADDR","value":"productcatalogservice:3550"},{"name":"CURRENCY_SERVICE_ADDR","value":"currencyservice:7000"},{"name":"CART_SERVICE_ADDR","value":"cartservice:7070"},{"name":"RECOMMENDATION_SERVICE_ADDR","value":"recommendationservice:8080"},{"name":"SHIPPING_SERVICE_ADDR","value":"shippingservice:50051"},{"name":"CHECKOUT_SERVICE_ADDR","value":"checkoutservice:5050"},{"name":"AD_SERVICE_ADDR","value":"adservice:9555"},{"name":"SHOPPING_ASSISTANT_SERVICE_ADDR","value":"shoppingassistantservice:80"},{"name":"OTEL_SERVICE_NAME","value":"frontend"},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"service.namespace=default,service.name=frontend"},{"name":"OTEL_EXPORTER_OTLP_ENDPOINT","value":"http://otel-collector-collector.observability.svc.cluster.local:4318"},{"name":"OTEL_EXPORTER_OTLP_PROTOCOL","value":"http/protobuf"},{"name":"ENABLE_PROFILER","value":"0"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"httpHeaders":[{"name":"Cookie","value":"shop_session-id=x-liveness-probe"}],"path":"/_healthz","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"name":"server","ports":[{"containerPort":8080,"protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"httpHeaders":[{"name":"Cookie","value":"shop_session-id=x-readiness-probe"}],"path":"/_healthz","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1000},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"serviceAccount":"frontend","serviceAccountName":"frontend","terminationGracePeriodSeconds":30}}},"status":{"availableReplicas":1,"conditions":[{"lastTransitionTime":"2025-04-09T05:04:56Z","lastUpdateTime":"2025-04-09T07:12:03Z","message":"ReplicaSet \"frontend-5bb785c5f6\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"},{"lastTransitionTime":"2025-04-09T08:13:22Z","lastUpdateTime":"2025-04-09T08:13:22Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"}],"observedGeneration":34,"readyReplicas":1,"replicas":1,"updatedReplicas":1}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    generation: 35
    labels:
      app: frontend
      app.kubernetes.io/instance: observability
    name: frontend
    namespace: default
    resourceVersion: "1155595"
    uid: 1eab5141-6590-4208-9e3b-f101d6bc8e8d
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: frontend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: frontend
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: CURRENCY_SERVICE_ADDR
            value: currencyservice:7000
          - name: CART_SERVICE_ADDR
            value: cartservice:7070
          - name: RECOMMENDATION_SERVICE_ADDR
            value: recommendationservice:8080
          - name: SHIPPING_SERVICE_ADDR
            value: shippingservice:50051
          - name: CHECKOUT_SERVICE_ADDR
            value: checkoutservice:5050
          - name: AD_SERVICE_ADDR
            value: adservice:9555
          - name: SHOPPING_ASSISTANT_SERVICE_ADDR
            value: shoppingassistantservice:80
          - name: OTEL_SERVICE_NAME
            value: frontend
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=frontend
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          - name: ENABLE_PROFILER
            value: "0"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/frontend:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-liveness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
              - name: Cookie
                value: shop_session-id=x-readiness-probe
              path: /_healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: frontend
        serviceAccountName: frontend
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-04-09T05:04:56Z"
      lastUpdateTime: "2025-04-09T07:12:03Z"
      message: ReplicaSet "frontend-5bb785c5f6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-04-09T08:13:22Z"
      lastUpdateTime: "2025-04-09T08:13:22Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 35
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "18"
      meta.helm.sh/release-name: grafana
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-21T10:36:27Z"
    generation: 18
    labels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 11.5.2
      helm.sh/chart: grafana-8.10.4
    name: grafana
    namespace: default
    resourceVersion: "1155471"
    uid: 2b448454-b9c5-4084-8acb-9b3831d1e7c3
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/config: 0e9cbd0ea8e24e32f7dfca5bab17a2ba05652642f0a09a4882833ae88e4cc4a3
          checksum/sc-dashboard-provider-config: e70bf6a851099d385178a76de9757bb0bef8299da6d8443602590e44f05fdf24
          checksum/secret: 37823cef0be38922629597c43ea978460ec1c6439efc3654cb745e5e5fa92c80
          kubectl.kubernetes.io/default-container: grafana
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: grafana
          app.kubernetes.io/name: grafana
          app.kubernetes.io/version: 11.5.2
          helm.sh/chart: grafana-8.10.4
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                key: admin-user
                name: grafana
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: admin-password
                name: grafana
          - name: GF_PATHS_DATA
            value: /var/lib/grafana/
          - name: GF_PATHS_LOGS
            value: /var/log/grafana
          - name: GF_PATHS_PLUGINS
            value: /var/lib/grafana/plugins
          - name: GF_PATHS_PROVISIONING
            value: /etc/grafana/provisioning
          image: docker.io/grafana/grafana:11.5.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: grafana
          ports:
          - containerPort: 3000
            name: grafana
            protocol: TCP
          - containerPort: 9094
            name: gossip-tcp
            protocol: TCP
          - containerPort: 9094
            name: gossip-udp
            protocol: UDP
          - containerPort: 6060
            name: profiling
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/grafana/grafana.ini
            name: config
            subPath: grafana.ini
          - mountPath: /var/lib/grafana
            name: storage
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 472
          runAsGroup: 472
          runAsNonRoot: true
          runAsUser: 472
        serviceAccount: grafana
        serviceAccountName: grafana
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: grafana
          name: config
        - emptyDir: {}
          name: storage
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-21T10:36:27Z"
      lastUpdateTime: "2025-04-09T07:11:55Z"
      message: ReplicaSet "grafana-757b79ffd9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-04-11T09:30:40Z"
      lastUpdateTime: "2025-04-11T09:30:40Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 18
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "26"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"26"},"creationTimestamp":"2025-03-20T14:08:35Z","generation":26,"labels":{"app":"loadgenerator","app.kubernetes.io/instance":"observability"},"name":"loadgenerator","namespace":"default","resourceVersion":"1066224","uid":"a0594ad7-cdf8-44b9-ac0a-329bbd3eb03b"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"loadgenerator"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"kubectl.kubernetes.io/restartedAt":"2025-04-09T07:11:40Z","sidecar.istio.io/rewriteAppHTTPProbers":"true"},"creationTimestamp":null,"labels":{"app":"loadgenerator"}},"spec":{"containers":[{"env":[{"name":"FRONTEND_ADDR","value":"frontend:80"},{"name":"USERS","value":"10"},{"name":"RATE","value":"1"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/loadgenerator:v0.10.2","imagePullPolicy":"IfNotPresent","name":"main","resources":{"limits":{"cpu":"500m","memory":"512Mi"},"requests":{"cpu":"300m","memory":"256Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","initContainers":[{"command":["/bin/sh","-exc","MAX_RETRIES=12\nRETRY_INTERVAL=10\nfor i in $(seq 1 $MAX_RETRIES); do\n  echo \"Attempt $i: Pinging frontend: ${FRONTEND_ADDR}...\"\n  STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2\u003e\u00261 | awk '/^  HTTP/{print $2}')\n  if [ $STATUSCODE -eq 200 ]; then\n      echo \"Frontend is reachable.\"\n      exit 0\n  fi\n  echo \"Error: Could not reach frontend - Status code: ${STATUSCODE}\"\n  sleep $RETRY_INTERVAL\ndone\necho \"Failed to reach frontend after $MAX_RETRIES attempts.\"\nexit 1\n"],"env":[{"name":"FRONTEND_ADDR","value":"frontend:80"}],"image":"busybox:latest","imagePullPolicy":"Always","name":"frontend-check","resources":{},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccount":"loadgenerator","serviceAccountName":"loadgenerator","terminationGracePeriodSeconds":5}}},"status":{"availableReplicas":1,"conditions":[{"lastTransitionTime":"2025-03-20T14:09:21Z","lastUpdateTime":"2025-03-20T14:09:21Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"},{"lastTransitionTime":"2025-04-01T13:28:57Z","lastUpdateTime":"2025-04-09T07:14:57Z","message":"ReplicaSet \"loadgenerator-79477896b4\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"}],"observedGeneration":26,"readyReplicas":1,"replicas":1,"updatedReplicas":1}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    generation: 27
    labels:
      app: loadgenerator
      app.kubernetes.io/instance: observability
    name: loadgenerator
    namespace: default
    resourceVersion: "1155585"
    uid: a0594ad7-cdf8-44b9-ac0a-329bbd3eb03b
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: loadgenerator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
          sidecar.istio.io/rewriteAppHTTPProbers: "true"
        creationTimestamp: null
        labels:
          app: loadgenerator
      spec:
        containers:
        - env:
          - name: FRONTEND_ADDR
            value: frontend:80
          - name: USERS
            value: "10"
          - name: RATE
            value: "1"
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/loadgenerator:v0.10.2
          imagePullPolicy: IfNotPresent
          name: main
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 300m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/sh
          - -exc
          - |
            MAX_RETRIES=12
            RETRY_INTERVAL=10
            for i in $(seq 1 $MAX_RETRIES); do
              echo "Attempt $i: Pinging frontend: ${FRONTEND_ADDR}..."
              STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
              if [ $STATUSCODE -eq 200 ]; then
                  echo "Frontend is reachable."
                  exit 0
              fi
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              sleep $RETRY_INTERVAL
            done
            echo "Failed to reach frontend after $MAX_RETRIES attempts."
            exit 1
          env:
          - name: FRONTEND_ADDR
            value: frontend:80
          image: busybox:latest
          imagePullPolicy: Always
          name: frontend-check
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: loadgenerator
        serviceAccountName: loadgenerator
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-20T14:09:21Z"
      lastUpdateTime: "2025-03-20T14:09:21Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-01T13:28:57Z"
      lastUpdateTime: "2025-04-09T07:14:57Z"
      message: ReplicaSet "loadgenerator-79477896b4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 27
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "18"
      meta.helm.sh/release-name: my-nginx
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-19T05:52:22Z"
    generation: 18
    labels:
      app.kubernetes.io/instance: my-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nginx
      app.kubernetes.io/version: 1.27.4
      helm.sh/chart: nginx-19.0.2
    name: my-nginx
    namespace: default
    resourceVersion: "1155511"
    uid: bb0c1a88-98ee-4036-bbcb-6a20367317d9
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: my-nginx
        app.kubernetes.io/name: nginx
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: my-nginx
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: nginx
          app.kubernetes.io/version: 1.27.4
          helm.sh/chart: nginx-19.0.2
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-nginx
                    app.kubernetes.io/name: nginx
                topologyKey: kubernetes.io/hostname
              weight: 1
        automountServiceAccountToken: false
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: NGINX_HTTP_PORT_NUMBER
            value: "8080"
          - name: NGINX_HTTPS_PORT_NUMBER
            value: "8443"
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: http
            timeoutSeconds: 5
          name: nginx
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: empty-dir
            subPath: tmp-dir
          - mountPath: /opt/bitnami/nginx/conf
            name: empty-dir
            subPath: app-conf-dir
          - mountPath: /opt/bitnami/nginx/logs
            name: empty-dir
            subPath: app-logs-dir
          - mountPath: /opt/bitnami/nginx/tmp
            name: empty-dir
            subPath: app-tmp-dir
          - mountPath: /certs
            name: certificate
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - -ec
          - |
            #!/bin/bash
            . /opt/bitnami/scripts/libfs.sh
            # We copy the logs folder because it has symlinks to stdout and stderr
            if ! is_dir_empty /opt/bitnami/nginx/logs; then
              cp -r /opt/bitnami/nginx/logs /emptydir/app-logs-dir
            fi
          command:
          - /bin/bash
          image: docker.io/bitnami/nginx:1.27.4-debian-12-r6
          imagePullPolicy: IfNotPresent
          name: preserve-logs-symlinks
          resources:
            limits:
              cpu: 150m
              ephemeral-storage: 2Gi
              memory: 192Mi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
            seLinuxOptions: {}
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /emptydir
            name: empty-dir
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
          fsGroupChangePolicy: Always
        serviceAccount: my-nginx
        serviceAccountName: my-nginx
        shareProcessNamespace: false
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: empty-dir
        - name: certificate
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: server.crt
            - key: tls.key
              path: server.key
            secretName: my-nginx-tls
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-03-19T05:52:22Z"
      lastUpdateTime: "2025-04-09T07:12:06Z"
      message: ReplicaSet "my-nginx-78b8c98787" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-04-11T09:30:43Z"
      lastUpdateTime: "2025-04-11T09:30:43Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 18
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "27"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"paymentservice"},"name":"paymentservice","namespace":"default"},"spec":{"selector":{"matchLabels":{"app":"paymentservice"}},"template":{"metadata":{"annotations":{"instrumentation.opentelemetry.io/inject-java":"java-instrumentation"},"labels":{"app":"paymentservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"50051"},{"name":"DISABLE_PROFILER","value":"1"},{"name":"OTEL_SERVICE_NAME","value":"paymentservice"},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"service.namespace=default,service.name=paymentservice"},{"name":"OTEL_EXPORTER_OTLP_ENDPOINT","value":"http://otel-collector-collector.observability.svc.cluster.local:4318"},{"name":"OTEL_EXPORTER_OTLP_PROTOCOL","value":"http/protobuf"}],"image":"paymentservice","livenessProbe":{"grpc":{"port":50051}},"name":"server","ports":[{"containerPort":50051}],"readinessProbe":{"grpc":{"port":50051}},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true}}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccountName":"paymentservice","terminationGracePeriodSeconds":5}}}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    generation: 27
    labels:
      app: paymentservice
    name: paymentservice
    namespace: default
    resourceVersion: "1154323"
    uid: 29c00a07-65ff-40de-96e7-aa52ddd39266
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: paymentservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-java: java-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: paymentservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: paymentservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=paymentservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/paymentservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: paymentservice
        serviceAccountName: paymentservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-04-01T13:29:58Z"
      lastUpdateTime: "2025-04-09T07:14:56Z"
      message: ReplicaSet "paymentservice-ddc56c685" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-04-11T09:05:53Z"
      lastUpdateTime: "2025-04-11T09:05:53Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 27
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "29"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"29"},"creationTimestamp":"2025-03-20T14:08:35Z","generation":29,"labels":{"app":"productcatalogservice","app.kubernetes.io/instance":"observability"},"name":"productcatalogservice","namespace":"default","resourceVersion":"1065381","uid":"451bee68-4f78-4ab3-87fd-9b851750fa65"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"productcatalogservice"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"instrumentation.opentelemetry.io/inject-go":"go-instrumentation","instrumentation.opentelemetry.io/otel-go-auto-target-exe":"src/server","kubectl.kubernetes.io/restartedAt":"2025-04-09T07:11:40Z"},"creationTimestamp":null,"labels":{"app":"productcatalogservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"3550"},{"name":"DISABLE_PROFILER","value":"1"},{"name":"OTEL_SERVICE_NAME","value":"productcatalogservice"},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"service.namespace=default,service.name=productcatalogservice"},{"name":"OTEL_EXPORTER_OTLP_ENDPOINT","value":"http://otel-collector-collector.observability.svc.cluster.local:4318"},{"name":"OTEL_EXPORTER_OTLP_PROTOCOL","value":"http/protobuf"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.2","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"grpc":{"port":3550,"service":""},"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"name":"server","ports":[{"containerPort":3550,"protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"grpc":{"port":3550,"service":""},"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1000},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"serviceAccount":"productcatalogservice","serviceAccountName":"productcatalogservice","terminationGracePeriodSeconds":5}}},"status":{"availableReplicas":1,"conditions":[{"lastTransitionTime":"2025-03-20T14:08:36Z","lastUpdateTime":"2025-03-20T14:08:36Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"},{"lastTransitionTime":"2025-04-09T05:09:47Z","lastUpdateTime":"2025-04-09T07:11:51Z","message":"ReplicaSet \"productcatalogservice-84c7db64bf\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"}],"observedGeneration":29,"readyReplicas":1,"replicas":1,"updatedReplicas":1}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    generation: 30
    labels:
      app: productcatalogservice
      app.kubernetes.io/instance: observability
    name: productcatalogservice
    namespace: default
    resourceVersion: "1155591"
    uid: 451bee68-4f78-4ab3-87fd-9b851750fa65
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: productcatalogservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: src/server
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: productcatalogservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "3550"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: productcatalogservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=productcatalogservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/productcatalogservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 3550
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 3550
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: productcatalogservice
        serviceAccountName: productcatalogservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-20T14:08:36Z"
      lastUpdateTime: "2025-03-20T14:08:36Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-09T05:09:47Z"
      lastUpdateTime: "2025-04-09T07:11:51Z"
      message: ReplicaSet "productcatalogservice-84c7db64bf" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 30
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "18"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-19T12:13:17Z"
    generation: 18
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-5.30.0
    name: prometheus-kube-state-metrics
    namespace: default
    resourceVersion: "1155555"
    uid: d2aec666-cb44-438a-9030-2d812d713f52
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: kube-state-metrics
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/part-of: kube-state-metrics
          app.kubernetes.io/version: 2.15.0
          helm.sh/chart: kube-state-metrics-5.30.0
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --port=8080
          - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
          image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.15.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: prometheus-kube-state-metrics
        serviceAccountName: prometheus-kube-state-metrics
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-19T12:13:17Z"
      lastUpdateTime: "2025-04-09T07:11:56Z"
      message: ReplicaSet "prometheus-kube-state-metrics-99577dbfd" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-04-11T09:30:45Z"
      lastUpdateTime: "2025-04-11T09:30:45Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 18
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "18"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-19T12:13:17Z"
    generation: 18
    labels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-pushgateway
      app.kubernetes.io/version: v1.11.0
      helm.sh/chart: prometheus-pushgateway-3.0.0
    name: prometheus-prometheus-pushgateway
    namespace: default
    resourceVersion: "1155450"
    uid: 9128931f-c6d9-4e3d-b004-021a46ae098e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus-pushgateway
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: prometheus-pushgateway
          app.kubernetes.io/version: v1.11.0
          helm.sh/chart: prometheus-pushgateway-3.0.0
      spec:
        automountServiceAccountToken: true
        containers:
        - image: quay.io/prometheus/pushgateway:v1.11.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: pushgateway
          ports:
          - containerPort: 9091
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9091
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-prometheus-pushgateway
        serviceAccountName: prometheus-prometheus-pushgateway
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: storage-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-19T12:13:17Z"
      lastUpdateTime: "2025-04-09T07:12:00Z"
      message: ReplicaSet "prometheus-prometheus-pushgateway-7c759fcdf5" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-04-11T09:30:39Z"
      lastUpdateTime: "2025-04-11T09:30:39Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 18
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "18"
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-19T12:13:17Z"
    generation: 18
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: prometheus
      app.kubernetes.io/version: v3.2.1
      helm.sh/chart: prometheus-27.5.1
    name: prometheus-server
    namespace: default
    resourceVersion: "1155210"
    uid: ff5f5216-ea72-4b0c-85a9-050bc9fbbdfd
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/name: prometheus
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: server
          app.kubernetes.io/instance: prometheus
          app.kubernetes.io/name: prometheus
          app.kubernetes.io/part-of: prometheus
          app.kubernetes.io/version: v3.2.1
          helm.sh/chart: prometheus-27.5.1
      spec:
        containers:
        - args:
          - --watched-dir=/etc/config
          - --listen-address=0.0.0.0:8080
          - --reload-url=http://127.0.0.1:9090/-/reload
          image: quay.io/prometheus-operator/prometheus-config-reloader:v0.80.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-server-configmap-reload
          ports:
          - containerPort: 8080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: metrics
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
            readOnly: true
        - args:
          - --storage.tsdb.retention.time=15d
          - --config.file=/etc/config/prometheus.yml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
          image: quay.io/prometheus/prometheus:v3.2.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          name: prometheus-server
          ports:
          - containerPort: 9090
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 4
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: config-volume
          - mountPath: /data
            name: storage-volume
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        serviceAccount: prometheus-server
        serviceAccountName: prometheus-server
        terminationGracePeriodSeconds: 300
        volumes:
        - configMap:
            defaultMode: 420
            name: prometheus-server
          name: config-volume
        - name: storage-volume
          persistentVolumeClaim:
            claimName: prometheus-server
  status:
    conditions:
    - lastTransitionTime: "2025-03-19T12:13:17Z"
      lastUpdateTime: "2025-04-09T07:12:21Z"
      message: ReplicaSet "prometheus-server-65745bcbd4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-04-11T09:30:20Z"
      lastUpdateTime: "2025-04-11T09:30:20Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    observedGeneration: 18
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "28"
      instrumentation.opentelemetry.io/inject-python: default/online-boutique-instrumentation
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"28","instrumentation.opentelemetry.io/inject-python":"default/online-boutique-instrumentation"},"creationTimestamp":"2025-03-20T14:08:34Z","generation":29,"labels":{"app":"recommendationservice","app.kubernetes.io/instance":"observability"},"name":"recommendationservice","namespace":"default","resourceVersion":"1066268","uid":"7e8a9ef7-9627-4db3-b7bf-2243878b79e8"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"recommendationservice"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"instrumentation.opentelemetry.io/inject-python":"python-instrumentation","kubectl.kubernetes.io/restartedAt":"2025-04-09T07:11:40Z"},"creationTimestamp":null,"labels":{"app":"recommendationservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"8080"},{"name":"PRODUCT_CATALOG_SERVICE_ADDR","value":"productcatalogservice:3550"},{"name":"DISABLE_PROFILER","value":"1"},{"name":"OTEL_SERVICE_NAME","value":"recommendationservice"},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"service.namespace=default,service.name=recommendationservice"},{"name":"OTEL_EXPORTER_OTLP_ENDPOINT","value":"http://otel-collector-collector.observability.svc.cluster.local:4318"},{"name":"OTEL_EXPORTER_OTLP_PROTOCOL","value":"http/protobuf"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.2","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"grpc":{"port":8080,"service":""},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"name":"server","ports":[{"containerPort":8080,"protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"grpc":{"port":8080,"service":""},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{"cpu":"200m","memory":"450Mi"},"requests":{"cpu":"100m","memory":"220Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"serviceAccount":"recommendationservice","serviceAccountName":"recommendationservice","terminationGracePeriodSeconds":5}}},"status":{"availableReplicas":1,"conditions":[{"lastTransitionTime":"2025-03-20T14:08:40Z","lastUpdateTime":"2025-03-20T14:08:40Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"},{"lastTransitionTime":"2025-04-01T13:31:16Z","lastUpdateTime":"2025-04-09T07:15:01Z","message":"ReplicaSet \"recommendationservice-777fc67b6c\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"}],"observedGeneration":29,"readyReplicas":1,"replicas":1,"updatedReplicas":1}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    generation: 30
    labels:
      app: recommendationservice
      app.kubernetes.io/instance: observability
    name: recommendationservice
    namespace: default
    resourceVersion: "1155597"
    uid: 7e8a9ef7-9627-4db3-b7bf-2243878b79e8
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: recommendationservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-python: python-instrumentation
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: recommendationservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: productcatalogservice:3550
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: recommendationservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=recommendationservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/recommendationservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 8080
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 450Mi
            requests:
              cpu: 100m
              memory: 220Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        serviceAccount: recommendationservice
        serviceAccountName: recommendationservice
        terminationGracePeriodSeconds: 5
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-20T14:08:40Z"
      lastUpdateTime: "2025-03-20T14:08:40Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-01T13:31:16Z"
      lastUpdateTime: "2025-04-09T07:15:01Z"
      message: ReplicaSet "recommendationservice-777fc67b6c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 30
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "18"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"18"},"creationTimestamp":"2025-03-20T14:08:35Z","generation":18,"labels":{"app":"redis-cart","app.kubernetes.io/instance":"observability"},"name":"redis-cart","namespace":"default","resourceVersion":"1065457","uid":"9607539f-c373-4aac-be3c-20e28441565e"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"redis-cart"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"kubectl.kubernetes.io/restartedAt":"2025-04-09T07:11:40Z"},"creationTimestamp":null,"labels":{"app":"redis-cart"}},"spec":{"containers":[{"image":"redis:alpine","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"periodSeconds":5,"successThreshold":1,"tcpSocket":{"port":6379},"timeoutSeconds":1},"name":"redis","ports":[{"containerPort":6379,"protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"periodSeconds":5,"successThreshold":1,"tcpSocket":{"port":6379},"timeoutSeconds":1},"resources":{"limits":{"cpu":"125m","memory":"256Mi"},"requests":{"cpu":"70m","memory":"200Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/data","name":"redis-data"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"terminationGracePeriodSeconds":30,"volumes":[{"emptyDir":{},"name":"redis-data"}]}}},"status":{"availableReplicas":1,"conditions":[{"lastTransitionTime":"2025-03-20T14:08:37Z","lastUpdateTime":"2025-03-20T14:08:37Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"},{"lastTransitionTime":"2025-03-20T14:08:35Z","lastUpdateTime":"2025-04-09T07:11:53Z","message":"ReplicaSet \"redis-cart-5db848f98b\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"}],"observedGeneration":18,"readyReplicas":1,"replicas":1,"updatedReplicas":1}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    generation: 19
    labels:
      app: redis-cart
      app.kubernetes.io/instance: observability
    name: redis-cart
    namespace: default
    resourceVersion: "1155594"
    uid: 9607539f-c373-4aac-be3c-20e28441565e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: redis-cart
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: redis-cart
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 125m
              memory: 256Mi
            requests:
              cpu: 70m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-20T14:08:37Z"
      lastUpdateTime: "2025-03-20T14:08:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-20T14:08:35Z"
      lastUpdateTime: "2025-04-09T07:11:53Z"
      message: ReplicaSet "redis-cart-5db848f98b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 19
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "29"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"29"},"creationTimestamp":"2025-03-20T14:08:35Z","generation":29,"labels":{"app":"shippingservice","app.kubernetes.io/instance":"observability"},"name":"shippingservice","namespace":"default","resourceVersion":"1065313","uid":"a8562913-c651-48d6-8155-51416caedb4e"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"shippingservice"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"instrumentation.opentelemetry.io/inject-go":"go-instrumentation","instrumentation.opentelemetry.io/otel-go-auto-target-exe":"/src/shippingservice","kubectl.kubernetes.io/restartedAt":"2025-04-09T07:11:40Z"},"creationTimestamp":null,"labels":{"app":"shippingservice"}},"spec":{"containers":[{"env":[{"name":"PORT","value":"50051"},{"name":"DISABLE_PROFILER","value":"1"},{"name":"OTEL_SERVICE_NAME","value":"shippingservice"},{"name":"OTEL_RESOURCE_ATTRIBUTES","value":"service.namespace=default,service.name=shippingservice"},{"name":"OTEL_EXPORTER_OTLP_ENDPOINT","value":"http://otel-collector-collector.observability.svc.cluster.local:4318"},{"name":"OTEL_EXPORTER_OTLP_PROTOCOL","value":"http/protobuf"}],"image":"us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.2","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"grpc":{"port":50051,"service":""},"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"name":"server","ports":[{"containerPort":50051,"protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"grpc":{"port":50051,"service":""},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1000},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"serviceAccount":"shippingservice","serviceAccountName":"shippingservice","terminationGracePeriodSeconds":30}}},"status":{"availableReplicas":1,"conditions":[{"lastTransitionTime":"2025-03-20T14:08:41Z","lastUpdateTime":"2025-03-20T14:08:41Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"},{"lastTransitionTime":"2025-04-09T05:09:48Z","lastUpdateTime":"2025-04-09T07:11:49Z","message":"ReplicaSet \"shippingservice-7bb6954db6\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"}],"observedGeneration":29,"readyReplicas":1,"replicas":1,"updatedReplicas":1}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    generation: 30
    labels:
      app: shippingservice
      app.kubernetes.io/instance: observability
    name: shippingservice
    namespace: default
    resourceVersion: "1155588"
    uid: a8562913-c651-48d6-8155-51416caedb4e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: shippingservice
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          instrumentation.opentelemetry.io/inject-go: go-instrumentation
          instrumentation.opentelemetry.io/otel-go-auto-target-exe: /src/shippingservice
          kubectl.kubernetes.io/restartedAt: "2025-04-09T07:11:40Z"
        creationTimestamp: null
        labels:
          app: shippingservice
      spec:
        containers:
        - env:
          - name: PORT
            value: "50051"
          - name: DISABLE_PROFILER
            value: "1"
          - name: OTEL_SERVICE_NAME
            value: shippingservice
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: service.namespace=default,service.name=shippingservice
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: http://otel-collector-collector.observability.svc.cluster.local:4318
          - name: OTEL_EXPORTER_OTLP_PROTOCOL
            value: http/protobuf
          image: us-central1-docker.pkg.dev/google-samples/microservices-demo/shippingservice:v0.10.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
          - containerPort: 50051
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            grpc:
              port: 50051
              service: ""
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: shippingservice
        serviceAccountName: shippingservice
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-20T14:08:41Z"
      lastUpdateTime: "2025-03-20T14:08:41Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-04-09T05:09:48Z"
      lastUpdateTime: "2025-04-09T07:11:49Z"
      message: ReplicaSet "shippingservice-7bb6954db6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 30
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2025-03-20T14:08:35Z","labels":{"app":"adservice","app.kubernetes.io/instance":"observability"},"name":"adservice","namespace":"default","resourceVersion":"40858","uid":"d38ac51c-c3d1-4bea-a227-81ff9e8c2b0a"},"spec":{"clusterIP":"10.43.249.157","clusterIPs":["10.43.249.157"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"grpc","port":9555,"protocol":"TCP","targetPort":9555}],"selector":{"app":"adservice"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    labels:
      app: adservice
      app.kubernetes.io/instance: observability
    name: adservice
    namespace: default
    resourceVersion: "1155063"
    uid: d38ac51c-c3d1-4bea-a227-81ff9e8c2b0a
  spec:
    clusterIP: 10.43.249.157
    clusterIPs:
    - 10.43.249.157
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 9555
      protocol: TCP
      targetPort: 9555
    selector:
      app: adservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2025-03-20T14:08:35Z","labels":{"app":"cartservice","app.kubernetes.io/instance":"observability"},"name":"cartservice","namespace":"default","resourceVersion":"40789","uid":"e64c61a0-68aa-4aa7-8026-35b713ed4060"},"spec":{"clusterIP":"10.43.125.152","clusterIPs":["10.43.125.152"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"grpc","port":7070,"protocol":"TCP","targetPort":7070}],"selector":{"app":"cartservice"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    labels:
      app: cartservice
      app.kubernetes.io/instance: observability
    name: cartservice
    namespace: default
    resourceVersion: "1155035"
    uid: e64c61a0-68aa-4aa7-8026-35b713ed4060
  spec:
    clusterIP: 10.43.125.152
    clusterIPs:
    - 10.43.125.152
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 7070
      protocol: TCP
      targetPort: 7070
    selector:
      app: cartservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2025-03-20T14:08:34Z","labels":{"app":"checkoutservice","app.kubernetes.io/instance":"observability"},"name":"checkoutservice","namespace":"default","resourceVersion":"40679","uid":"ab9cad3a-6f36-4493-bd0e-c23b58197aa2"},"spec":{"clusterIP":"10.43.53.12","clusterIPs":["10.43.53.12"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"grpc","port":5050,"protocol":"TCP","targetPort":5050}],"selector":{"app":"checkoutservice"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    labels:
      app: checkoutservice
      app.kubernetes.io/instance: observability
    name: checkoutservice
    namespace: default
    resourceVersion: "1155047"
    uid: ab9cad3a-6f36-4493-bd0e-c23b58197aa2
  spec:
    clusterIP: 10.43.53.12
    clusterIPs:
    - 10.43.53.12
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 5050
      protocol: TCP
      targetPort: 5050
    selector:
      app: checkoutservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2025-03-20T14:08:35Z","labels":{"app":"currencyservice","app.kubernetes.io/instance":"observability"},"name":"currencyservice","namespace":"default","resourceVersion":"40817","uid":"8bb962ae-50fa-4f23-9777-b6885bd08b2a"},"spec":{"clusterIP":"10.43.167.45","clusterIPs":["10.43.167.45"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"grpc","port":7000,"protocol":"TCP","targetPort":7000}],"selector":{"app":"currencyservice"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    labels:
      app: currencyservice
      app.kubernetes.io/instance: observability
    name: currencyservice
    namespace: default
    resourceVersion: "1155044"
    uid: 8bb962ae-50fa-4f23-9777-b6885bd08b2a
  spec:
    clusterIP: 10.43.167.45
    clusterIPs:
    - 10.43.167.45
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 7000
      protocol: TCP
      targetPort: 7000
    selector:
      app: currencyservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2025-03-20T14:08:34Z","labels":{"app":"emailservice","app.kubernetes.io/instance":"observability"},"name":"emailservice","namespace":"default","resourceVersion":"40662","uid":"a7ac5906-e506-456f-b945-8b808dbb47c6"},"spec":{"clusterIP":"10.43.48.15","clusterIPs":["10.43.48.15"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"grpc","port":5000,"protocol":"TCP","targetPort":8080}],"selector":{"app":"emailservice"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    labels:
      app: emailservice
      app.kubernetes.io/instance: observability
    name: emailservice
    namespace: default
    resourceVersion: "1155041"
    uid: a7ac5906-e506-456f-b945-8b808dbb47c6
  spec:
    clusterIP: 10.43.48.15
    clusterIPs:
    - 10.43.48.15
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 5000
      protocol: TCP
      targetPort: 8080
    selector:
      app: emailservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2025-03-20T14:08:34Z","labels":{"app":"frontend","app.kubernetes.io/instance":"observability"},"name":"frontend","namespace":"default","resourceVersion":"40714","uid":"66cf0e88-cf38-4772-b10e-aecba6496ab1"},"spec":{"clusterIP":"10.43.174.223","clusterIPs":["10.43.174.223"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":8080}],"selector":{"app":"frontend"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    labels:
      app: frontend
      app.kubernetes.io/instance: observability
    name: frontend
    namespace: default
    resourceVersion: "1155071"
    uid: 66cf0e88-cf38-4772-b10e-aecba6496ab1
  spec:
    clusterIP: 10.43.174.223
    clusterIPs:
    - 10.43.174.223
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: frontend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2025-03-20T14:08:34Z","finalizers":["service.kubernetes.io/load-balancer-cleanup"],"labels":{"app":"frontend","app.kubernetes.io/instance":"observability"},"name":"frontend-external","namespace":"default","resourceVersion":"40730","uid":"ba2550c9-b1c3-4c05-9456-0e803e970fff"},"spec":{"allocateLoadBalancerNodePorts":true,"clusterIP":"10.43.203.74","clusterIPs":["10.43.203.74"],"externalTrafficPolicy":"Cluster","internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"http","nodePort":30701,"port":80,"protocol":"TCP","targetPort":8080}],"selector":{"app":"frontend"},"sessionAffinity":"None","type":"LoadBalancer"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: frontend
      app.kubernetes.io/instance: observability
    name: frontend-external
    namespace: default
    resourceVersion: "1155042"
    uid: ba2550c9-b1c3-4c05-9456-0e803e970fff
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.43.203.74
    clusterIPs:
    - 10.43.203.74
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 30701
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: frontend
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"meta.helm.sh/release-name":"grafana","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2025-03-21T10:36:26Z","labels":{"app.kubernetes.io/instance":"observability","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","app.kubernetes.io/version":"11.5.2","helm.sh/chart":"grafana-8.10.4"},"name":"grafana","namespace":"default","resourceVersion":"71200","uid":"94fa7e62-7650-4401-88d4-e3bf4b0f0108"},"spec":{"clusterIP":"10.43.19.103","clusterIPs":["10.43.19.103"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"service","port":80,"protocol":"TCP","targetPort":3000}],"selector":{"app.kubernetes.io/instance":"grafana","app.kubernetes.io/name":"grafana"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
      meta.helm.sh/release-name: grafana
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-21T10:36:26Z"
    labels:
      app.kubernetes.io/instance: observability
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 11.5.2
      helm.sh/chart: grafana-8.10.4
    name: grafana
    namespace: default
    resourceVersion: "1155059"
    uid: 94fa7e62-7650-4401-88d4-e3bf4b0f0108
  spec:
    clusterIP: 10.43.19.103
    clusterIPs:
    - 10.43.19.103
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: service
      port: 80
      protocol: TCP
      targetPort: 3000
    selector:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2025-03-21T10:44:18Z","labels":{"app.kubernetes.io/instance":"observability","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"grafana","app.kubernetes.io/version":"11.5.2","helm.sh/chart":"grafana-8.10.4"},"name":"grafana-ext","namespace":"default","resourceVersion":"71420","uid":"8829bb8c-cd36-4d90-a18c-548a172e9468"},"spec":{"clusterIP":"10.43.190.231","clusterIPs":["10.43.190.231"],"externalTrafficPolicy":"Cluster","internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"nodePort":32567,"port":80,"protocol":"TCP","targetPort":3000}],"selector":{"app.kubernetes.io/instance":"grafana","app.kubernetes.io/name":"grafana"},"sessionAffinity":"None","type":"NodePort"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2025-03-21T10:44:18Z"
    labels:
      app.kubernetes.io/instance: observability
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 11.5.2
      helm.sh/chart: grafana-8.10.4
    name: grafana-ext
    namespace: default
    resourceVersion: "1155034"
    uid: 8829bb8c-cd36-4d90-a18c-548a172e9468
  spec:
    clusterIP: 10.43.190.231
    clusterIPs:
    - 10.43.190.231
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 32567
      port: 80
      protocol: TCP
      targetPort: 3000
    selector:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2025-03-19T07:01:46Z","labels":{"app":"kube-prometheus-stack-prometheus","app.kubernetes.io/instance":"observability","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/part-of":"kube-prometheus-stack","app.kubernetes.io/version":"70.0.2","chart":"kube-prometheus-stack-70.0.2","heritage":"Helm","release":"prometheus","self-monitor":"true"},"name":"kube-prometheus-server-ext","namespace":"default","resourceVersion":"3109","uid":"b20caee9-4193-47ad-848c-35fcb38902bf"},"spec":{"clusterIP":"10.43.213.88","clusterIPs":["10.43.213.88"],"externalTrafficPolicy":"Cluster","internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"port-1","nodePort":30796,"port":9090,"protocol":"TCP","targetPort":9090},{"name":"port-2","nodePort":32502,"port":8080,"protocol":"TCP","targetPort":9090}],"selector":{"app.kubernetes.io/name":"prometheus","operator.prometheus.io/name":"prometheus-kube-prometheus-prometheus"},"sessionAffinity":"None","type":"NodePort"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2025-03-19T07:01:46Z"
    labels:
      app: kube-prometheus-stack-prometheus
      app.kubernetes.io/instance: observability
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kube-prometheus-stack
      app.kubernetes.io/version: 70.0.2
      chart: kube-prometheus-stack-70.0.2
      heritage: Helm
      release: prometheus
      self-monitor: "true"
    name: kube-prometheus-server-ext
    namespace: default
    resourceVersion: "1155050"
    uid: b20caee9-4193-47ad-848c-35fcb38902bf
  spec:
    clusterIP: 10.43.213.88
    clusterIPs:
    - 10.43.213.88
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: port-1
      nodePort: 30796
      port: 9090
      protocol: TCP
      targetPort: 9090
    - name: port-2
      nodePort: 32502
      port: 8080
      protocol: TCP
      targetPort: 9090
    selector:
      app.kubernetes.io/name: prometheus
      operator.prometheus.io/name: prometheus-kube-prometheus-prometheus
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2025-03-19T05:41:45Z","labels":{"app.kubernetes.io/instance":"observability","component":"apiserver","provider":"kubernetes"},"name":"kubernetes","namespace":"default","resourceVersion":"196","uid":"a66b0c0b-7314-4233-90c9-8221e2d498b8"},"spec":{"clusterIP":"10.43.0.1","clusterIPs":["10.43.0.1"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"https","port":443,"protocol":"TCP","targetPort":6443}],"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2025-03-19T05:41:45Z"
    labels:
      app.kubernetes.io/instance: observability
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "1155055"
    uid: a66b0c0b-7314-4233-90c9-8221e2d498b8
  spec:
    clusterIP: 10.43.0.1
    clusterIPs:
    - 10.43.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"meta.helm.sh/release-name":"my-nginx","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2025-03-19T05:52:22Z","finalizers":["service.kubernetes.io/load-balancer-cleanup"],"labels":{"app.kubernetes.io/instance":"observability","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"nginx","app.kubernetes.io/version":"1.27.4","helm.sh/chart":"nginx-19.0.2"},"name":"my-nginx","namespace":"default","resourceVersion":"873","uid":"37a779d8-1f2a-4d68-ba53-4b83e74b472d"},"spec":{"allocateLoadBalancerNodePorts":true,"clusterIP":"10.43.24.225","clusterIPs":["10.43.24.225"],"externalTrafficPolicy":"Cluster","internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"http","nodePort":31721,"port":80,"protocol":"TCP","targetPort":"http"},{"name":"https","nodePort":31846,"port":443,"protocol":"TCP","targetPort":"https"}],"selector":{"app.kubernetes.io/instance":"my-nginx","app.kubernetes.io/name":"nginx"},"sessionAffinity":"None","type":"LoadBalancer"},"status":{"loadBalancer":{}}}
      meta.helm.sh/release-name: my-nginx
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-19T05:52:22Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/instance: observability
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: nginx
      app.kubernetes.io/version: 1.27.4
      helm.sh/chart: nginx-19.0.2
    name: my-nginx
    namespace: default
    resourceVersion: "1155048"
    uid: 37a779d8-1f2a-4d68-ba53-4b83e74b472d
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.43.24.225
    clusterIPs:
    - 10.43.24.225
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 31721
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      nodePort: 31846
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app.kubernetes.io/instance: my-nginx
      app.kubernetes.io/name: nginx
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2025-03-20T14:08:34Z","labels":{"app":"paymentservice","app.kubernetes.io/instance":"observability"},"name":"paymentservice","namespace":"default","resourceVersion":"40748","uid":"d62540af-048d-44a2-b8da-e3d697944cf5"},"spec":{"clusterIP":"10.43.189.95","clusterIPs":["10.43.189.95"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"grpc","port":50051,"protocol":"TCP","targetPort":50051}],"selector":{"app":"paymentservice"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    labels:
      app: paymentservice
      app.kubernetes.io/instance: observability
    name: paymentservice
    namespace: default
    resourceVersion: "1155046"
    uid: d62540af-048d-44a2-b8da-e3d697944cf5
  spec:
    clusterIP: 10.43.189.95
    clusterIPs:
    - 10.43.189.95
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 50051
      protocol: TCP
      targetPort: 50051
    selector:
      app: paymentservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2025-03-20T14:08:35Z","labels":{"app":"productcatalogservice","app.kubernetes.io/instance":"observability"},"name":"productcatalogservice","namespace":"default","resourceVersion":"40768","uid":"ccb02943-4323-403e-886c-b229ecf3708f"},"spec":{"clusterIP":"10.43.205.180","clusterIPs":["10.43.205.180"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"grpc","port":3550,"protocol":"TCP","targetPort":3550}],"selector":{"app":"productcatalogservice"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    labels:
      app: productcatalogservice
      app.kubernetes.io/instance: observability
    name: productcatalogservice
    namespace: default
    resourceVersion: "1155079"
    uid: ccb02943-4323-403e-886c-b229ecf3708f
  spec:
    clusterIP: 10.43.205.180
    clusterIPs:
    - 10.43.205.180
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 3550
      protocol: TCP
      targetPort: 3550
    selector:
      app: productcatalogservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2025-03-19T12:13:17Z","labels":{"app.kubernetes.io/instance":"observability","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"alertmanager","app.kubernetes.io/version":"v0.28.0","helm.sh/chart":"alertmanager-1.15.0"},"name":"prometheus-alertmanager","namespace":"default","resourceVersion":"9932","uid":"c06e47ba-1f90-40ad-88a5-80d1419e6757"},"spec":{"clusterIP":"10.43.35.195","clusterIPs":["10.43.35.195"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"http","port":9093,"protocol":"TCP","targetPort":"http"}],"selector":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"alertmanager"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-19T12:13:17Z"
    labels:
      app.kubernetes.io/instance: observability
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: alertmanager
      app.kubernetes.io/version: v0.28.0
      helm.sh/chart: alertmanager-1.15.0
    name: prometheus-alertmanager
    namespace: default
    resourceVersion: "1155067"
    uid: c06e47ba-1f90-40ad-88a5-80d1419e6757
  spec:
    clusterIP: 10.43.35.195
    clusterIPs:
    - 10.43.35.195
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9093
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: alertmanager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2025-03-19T12:13:17Z","labels":{"app.kubernetes.io/instance":"observability","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"alertmanager","app.kubernetes.io/version":"v0.28.0","helm.sh/chart":"alertmanager-1.15.0"},"name":"prometheus-alertmanager-headless","namespace":"default","resourceVersion":"9912","uid":"53cb3630-ec8e-4efa-b09d-8fbde2f1d74c"},"spec":{"clusterIP":"None","clusterIPs":["None"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"http","port":9093,"protocol":"TCP","targetPort":"http"}],"selector":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"alertmanager"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-19T12:13:17Z"
    labels:
      app.kubernetes.io/instance: observability
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: alertmanager
      app.kubernetes.io/version: v0.28.0
      helm.sh/chart: alertmanager-1.15.0
    name: prometheus-alertmanager-headless
    namespace: default
    resourceVersion: "1155076"
    uid: 53cb3630-ec8e-4efa-b09d-8fbde2f1d74c
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9093
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: alertmanager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default","prometheus.io/scrape":"true"},"creationTimestamp":"2025-03-19T12:13:17Z","labels":{"app.kubernetes.io/component":"metrics","app.kubernetes.io/instance":"observability","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"kube-state-metrics","app.kubernetes.io/part-of":"kube-state-metrics","app.kubernetes.io/version":"2.15.0","helm.sh/chart":"kube-state-metrics-5.30.0"},"name":"prometheus-kube-state-metrics","namespace":"default","resourceVersion":"9923","uid":"e0ead220-6b01-45d1-8931-42172a21aed0"},"spec":{"clusterIP":"10.43.206.3","clusterIPs":["10.43.206.3"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"http","port":8080,"protocol":"TCP","targetPort":8080}],"selector":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"kube-state-metrics"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-03-19T12:13:17Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: observability
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.15.0
      helm.sh/chart: kube-state-metrics-5.30.0
    name: prometheus-kube-state-metrics
    namespace: default
    resourceVersion: "1155043"
    uid: e0ead220-6b01-45d1-8931-42172a21aed0
  spec:
    clusterIP: 10.43.206.3
    clusterIPs:
    - 10.43.206.3
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: kube-state-metrics
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default","prometheus.io/scrape":"true"},"creationTimestamp":"2025-03-19T12:13:17Z","labels":{"app.kubernetes.io/component":"metrics","app.kubernetes.io/instance":"observability","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"prometheus-node-exporter","app.kubernetes.io/part-of":"prometheus-node-exporter","app.kubernetes.io/version":"1.9.0","helm.sh/chart":"prometheus-node-exporter-4.44.0"},"name":"prometheus-prometheus-node-exporter","namespace":"default","resourceVersion":"9920","uid":"266fc671-a40a-44a1-84b6-f38ee8dd13c2"},"spec":{"clusterIP":"10.43.26.228","clusterIPs":["10.43.26.228"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"metrics","port":9100,"protocol":"TCP","targetPort":9100}],"selector":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"prometheus-node-exporter"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-03-19T12:13:17Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: observability
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-node-exporter
      app.kubernetes.io/part-of: prometheus-node-exporter
      app.kubernetes.io/version: 1.9.0
      helm.sh/chart: prometheus-node-exporter-4.44.0
    name: prometheus-prometheus-node-exporter
    namespace: default
    resourceVersion: "1155037"
    uid: 266fc671-a40a-44a1-84b6-f38ee8dd13c2
  spec:
    clusterIP: 10.43.26.228
    clusterIPs:
    - 10.43.26.228
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics
      port: 9100
      protocol: TCP
      targetPort: 9100
    selector:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus-node-exporter
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default","prometheus.io/probe":"pushgateway"},"creationTimestamp":"2025-03-19T12:13:17Z","labels":{"app.kubernetes.io/instance":"observability","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"prometheus-pushgateway","app.kubernetes.io/version":"v1.11.0","helm.sh/chart":"prometheus-pushgateway-3.0.0"},"name":"prometheus-prometheus-pushgateway","namespace":"default","resourceVersion":"9928","uid":"db3ff4b4-0705-4cfc-a01c-06e621fc5e00"},"spec":{"clusterIP":"10.43.45.64","clusterIPs":["10.43.45.64"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"http","port":9091,"protocol":"TCP","targetPort":9091}],"selector":{"app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"prometheus-pushgateway"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
      prometheus.io/probe: pushgateway
    creationTimestamp: "2025-03-19T12:13:17Z"
    labels:
      app.kubernetes.io/instance: observability
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-pushgateway
      app.kubernetes.io/version: v1.11.0
      helm.sh/chart: prometheus-pushgateway-3.0.0
    name: prometheus-prometheus-pushgateway
    namespace: default
    resourceVersion: "1155058"
    uid: db3ff4b4-0705-4cfc-a01c-06e621fc5e00
  spec:
    clusterIP: 10.43.45.64
    clusterIPs:
    - 10.43.45.64
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9091
      protocol: TCP
      targetPort: 9091
    selector:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus-pushgateway
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"meta.helm.sh/release-name":"prometheus","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2025-03-19T12:13:17Z","labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/instance":"observability","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"prometheus","app.kubernetes.io/part-of":"prometheus","app.kubernetes.io/version":"v3.2.1","helm.sh/chart":"prometheus-27.5.1"},"name":"prometheus-server","namespace":"default","resourceVersion":"9916","uid":"4c0557a5-a32f-4089-8595-e1cec4ed80fa"},"spec":{"clusterIP":"10.43.192.103","clusterIPs":["10.43.192.103"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":9090}],"selector":{"app.kubernetes.io/component":"server","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"prometheus"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: default
    creationTimestamp: "2025-03-19T12:13:17Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: observability
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: prometheus
      app.kubernetes.io/version: v3.2.1
      helm.sh/chart: prometheus-27.5.1
    name: prometheus-server
    namespace: default
    resourceVersion: "1155033"
    uid: 4c0557a5-a32f-4089-8595-e1cec4ed80fa
  spec:
    clusterIP: 10.43.192.103
    clusterIPs:
    - 10.43.192.103
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9090
    selector:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2025-03-19T12:14:48Z","labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/instance":"observability","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"prometheus","app.kubernetes.io/part-of":"prometheus","app.kubernetes.io/version":"v3.2.1","helm.sh/chart":"prometheus-27.5.1"},"name":"prometheus-server-ext","namespace":"default","resourceVersion":"10114","uid":"1f4a6cbd-d6ad-4699-a97d-4ce280045fd0"},"spec":{"clusterIP":"10.43.22.188","clusterIPs":["10.43.22.188"],"externalTrafficPolicy":"Cluster","internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"nodePort":32073,"port":80,"protocol":"TCP","targetPort":9090}],"selector":{"app.kubernetes.io/component":"server","app.kubernetes.io/instance":"prometheus","app.kubernetes.io/name":"prometheus"},"sessionAffinity":"None","type":"NodePort"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2025-03-19T12:14:48Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: observability
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: prometheus
      app.kubernetes.io/version: v3.2.1
      helm.sh/chart: prometheus-27.5.1
    name: prometheus-server-ext
    namespace: default
    resourceVersion: "1155054"
    uid: 1f4a6cbd-d6ad-4699-a97d-4ce280045fd0
  spec:
    clusterIP: 10.43.22.188
    clusterIPs:
    - 10.43.22.188
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 32073
      port: 80
      protocol: TCP
      targetPort: 9090
    selector:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/name: prometheus
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2025-03-20T14:08:34Z","labels":{"app":"recommendationservice","app.kubernetes.io/instance":"observability"},"name":"recommendationservice","namespace":"default","resourceVersion":"40696","uid":"2a11f8f0-da95-4fab-90d8-6bc5f59e1601"},"spec":{"clusterIP":"10.43.33.28","clusterIPs":["10.43.33.28"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"grpc","port":8080,"protocol":"TCP","targetPort":8080}],"selector":{"app":"recommendationservice"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2025-03-20T14:08:34Z"
    labels:
      app: recommendationservice
      app.kubernetes.io/instance: observability
    name: recommendationservice
    namespace: default
    resourceVersion: "1155039"
    uid: 2a11f8f0-da95-4fab-90d8-6bc5f59e1601
  spec:
    clusterIP: 10.43.33.28
    clusterIPs:
    - 10.43.33.28
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: recommendationservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2025-03-20T14:08:35Z","labels":{"app":"redis-cart","app.kubernetes.io/instance":"observability"},"name":"redis-cart","namespace":"default","resourceVersion":"40804","uid":"ae29d8c2-5ef0-4f89-bd4f-eb77558b5f33"},"spec":{"clusterIP":"10.43.127.128","clusterIPs":["10.43.127.128"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"tcp-redis","port":6379,"protocol":"TCP","targetPort":6379}],"selector":{"app":"redis-cart"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    labels:
      app: redis-cart
      app.kubernetes.io/instance: observability
    name: redis-cart
    namespace: default
    resourceVersion: "1155074"
    uid: ae29d8c2-5ef0-4f89-bd4f-eb77558b5f33
  spec:
    clusterIP: 10.43.127.128
    clusterIPs:
    - 10.43.127.128
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app: redis-cart
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2025-03-20T14:08:35Z","labels":{"app":"shippingservice","app.kubernetes.io/instance":"observability"},"name":"shippingservice","namespace":"default","resourceVersion":"40831","uid":"2cb3b6a8-174a-4e88-8de9-4ed571e6172c"},"spec":{"clusterIP":"10.43.240.2","clusterIPs":["10.43.240.2"],"internalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"name":"grpc","port":50051,"protocol":"TCP","targetPort":50051}],"selector":{"app":"shippingservice"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}}
    creationTimestamp: "2025-03-20T14:08:35Z"
    labels:
      app: shippingservice
      app.kubernetes.io/instance: observability
    name: shippingservice
    namespace: default
    resourceVersion: "1155051"
    uid: 2cb3b6a8-174a-4e88-8de9-4ed571e6172c
  spec:
    clusterIP: 10.43.240.2
    clusterIPs:
    - 10.43.240.2
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 50051
      protocol: TCP
      targetPort: 50051
    selector:
      app: shippingservice
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
